using System;
using System.Collections.Generic;
using Anvil.API;
using System.ComponentModel;
using System.Linq;
using static NWN.Systems.PlayerSystem;
using static NWN.Systems.PlayerSystem.Player;

namespace NWN.Systems
{
  public static partial class SkillSystem
  {
    public enum Category // Maîtrises + Fighter + chaque classe
    {
      [Description("Corps_&_Esprit")]
      MindBody,
      [Description("Combat")]
      Fight,
      [Description("Artisanat")]
      Craft,
      [Description("Magie")]
      Magic,
      [Description("Inscription")]
      Inscription,
      [Description("Historique")]
      StartingTraits,
      [Description("Langage")]
      Language,
      [Description("Classe")]
      Class,
      [Description("Race")]
      Race,
      [Description("Compétence")]
      Skill,
      [Description("Expertise")]
      Expertise,
      [Description("Style_de_combat")]
      FightingStyle,
      [Description("Dons")]
      Feat,
      [Description("Dons_d'origine")]
      OriginFeat,
      [Description("Maîtrise_d'arme")]
      WeaponProficiency,
      [Description("Voie_de_Guerrier")]
      FighterSubClass,
      [Description("Tir_Arcanique")]
      TirArcanique,
      [Description("Manoeuvre")]
      Manoeuvre,
      [Description("Voie_de_Barbare")]
      BarbarianSubClass,
      [Description("Voie_du_Roublard")]
      RogueSubClass,
      [Description("Voie_du_Moine")]
      MonkSubClass,
      [Description("Ecole_de_Magicien")]
      WizardSubClass,
      [Description("Ki")]
      Ki,
      [Description("Collège_de_Barde")]
      BardSubClass,
      [Description("Conclave_de_Rôdeur")]
      RangerSubClass,
      [Description("Défense_Supérieure")]
      HunterDefenseSuperieure,
      [Description("Compagnon_Animal")]
      BelluaireCompanion,
      [Description("Serment_de_Paladin")]
      PaladinSubClass,
      [Description("Domaine_Divin")]
      ClercSubClass,
      [Description("Ordre_Divin")]
      OrdreDivin,
      [Description("Frappes_Bénies")]
      FrappesBenies,
      [Description("Technique_Elémentaire")]
      TechniqueElementaire,
      [Description("Origine_Magique")]
      EnsorceleurSubClass,
      [Description("Métamagie")]
      Metamagic,
      [Description("Affinité_Elémentaire")]
      AffiniteElementaire,
      [Description("Cercle_Druidique")]
      DruidSubclass,
      [Description("Ordre_Primordial")]
      OrdrePrimordial,
      [Description("Fureur_Elémentaire")]
      FureurElementaire,
      [Description("Terre_de_Cercle")]
      TerreDeCercle,
      [Description("Mécène")]
      OccultisteSubClass,
      [Description("Invocation_Occulte")]
      InvocationOcculte,
      [Description("Expertise_d'arme")]
      ExpertiseDarme,
      [Description("Astuce_de_Rôdeur")]
      RangerKnack
    }

    public static readonly Dictionary<int, Learnable> learnableDictionary = new();

    public static void InitializeLearnables()
    {
      // PROFICIENCIES

      learnableDictionary.Add(CustomSkill.AcrobaticsProficiency, new LearnableSkill(CustomSkill.AcrobaticsProficiency, "Acrobatie - Maîtrise", "Un jet de Dextérité (Acrobatie) couvre toute tentative de garder l'équilibre dans les situations délicates, comme essayer de courir sur une plaque de glace, rester stable sur une corde raide ou rester debout sur le pont d'un navire lors d'une forte houle.\n\nLe DM peut également demander un jet de Dextérité (Acrobatie) si vous tenter d'effectuer des cascades acrobatiques, y compris des plongeons tonneaux, sauts périlleux ou des flips.\n\nNB : Cette compétence n'accorde aucun point de CA supplémentaire, contrairement au jeu de base.", Category.Skill, "isk_Acrobatics", 1, 750, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.AcrobaticsExpertise, new LearnableSkill(CustomSkill.AcrobaticsExpertise, "Acrobatie - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Acrobatics", 1, 1500, Ability.Dexterity, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.AnimalHandlingProficiency, new LearnableSkill(CustomSkill.AnimalHandlingProficiency, "Dressage - Maîtrise", "Un jet de Sagesse (Dressage) couvre toute tentative de calmer un animal domestique, empêcher une monture d'être effrayée ou deviner les intentions d'un animal.", Category.Skill, "isk_Animal", 1, 750, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.AnimalHandlingExpertise, new LearnableSkill(CustomSkill.AnimalHandlingExpertise, "Dressage - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Animal", 1, 1500, Ability.Wisdom, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.ArcanaProficiency, new LearnableSkill(CustomSkill.ArcanaProficiency, "Arcane - Maîtrise", "Un jet d'Intelligence (Arcane) couvre toute tentative de se rappeler des connaissances sur les sorts, les objets magiques, les symboles ésotériques, les traditions magiques, les plans d'existence et les habitants de ces plans.", Category.Skill, "isk_Arcana", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ArcanaExpertise, new LearnableSkill(CustomSkill.ArcanaExpertise, "Arcane - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Arcana", 1, 1500, Ability.Intelligence, Ability.Wisdom));
      
      learnableDictionary.Add(CustomSkill.AthleticsProficiency, new LearnableSkill(CustomSkill.AthleticsProficiency, "Athlétisme - Maîtrise", "Un jet de Force (Athlétisme) couvre les difficultés physiques que vous rencontrez en grimpant, en sautant ou en nageant. Ce qui inclus les activités suivantes :\n- Vous essayez d'escalader une falaise abrupte ou glissante, d'éviter les dangers en escaladant un mur ou de vous accrocher à une surface pendant que quelque chose essaie de vous faire tomber\n- Vous essayez de sauter sur une distance inhabituellement longue ou de réaliser une cascade au milieu d'un saut\n-- Vous avez du mal à nager ou à rester à flot dans des courants dangereux, des vagues agitées par des tempêtes ou des zones d'algues épaisses. Ou une autre créature essaie de vous pousser ou de vous tirer sous l'eau ou d'interférer d'une autre manière avec votre nage", Category.Skill, "isk_Athletics", 1, 750, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.AthleticsExpertise, new LearnableSkill(CustomSkill.AthleticsExpertise, "Athlétisme - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Athletics", 1, 1500, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.DeceptionProficiency, new LearnableSkill(CustomSkill.DeceptionProficiency, "Tromperie - Maîtrise", "Un jet de Charisme (Tromperie) couvre toute tentative de cacher la vérité de manière convaincante, que ce soit verbalement ou par vos actions. Cette compétence permet de dissimuler les traces du mensonge dans votre voix et votre langage corporel.\nN'oubliez pas que dans la plupart des cas, en jeu, la crédibilité de vos paroles par rapport à la confiance accordée par vos interlocuteurs prime.\nDe base, vous ne parviendrez pas à faire croire à la garde que cette épée à deux mains pleine de sang n'est rien d'autre que l'appui d'un vieillard pour l'aider à marcher, même sur un très bon jet.", Category.Skill, "isk_Deception", 1, 750, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.DeceptionExpertise, new LearnableSkill(CustomSkill.DeceptionExpertise, "Tromperie - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Deception", 1, 1500, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.HistoryProficiency, new LearnableSkill(CustomSkill.HistoryProficiency, "Histoire - Maîtrise", "Un jet d'Intelligence (Histoire) couvre toute tentative de se souvenir de traditions, d'événements historiques, de personnages légendaires, d'anciens royaumes, de conflits passés, de guerres récentes et de civilisations perdues.", Category.Skill, "isk_History", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.HistoryExpertise, new LearnableSkill(CustomSkill.HistoryExpertise, "Histoire - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_History", 1, 1500, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.InsightProficiency, new LearnableSkill(CustomSkill.InsightProficiency, "Intuition - Maîtrise", "Un jet de Sagesse (Intuition) couvre toute tentative de déterminer les véritables intentions d'une créature, par exemple lorsque vous souhaitez dévoiler un mensonge ou prédire le prochain mouvement de quelqu'un.\nIl s'agit principalement de glaner des indices dans le langage corporel, les changements de tons de la voix ou de manières.", Category.Skill, "isk_Insight", 1, 750, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.InsightExpertise, new LearnableSkill(CustomSkill.InsightExpertise, "Intuition - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Insight", 1, 1500, Ability.Wisdom, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.IntimidationProficiency, new LearnableSkill(CustomSkill.IntimidationProficiency, "Intimidation - Maîtrise", "Un jet de Charisme (Intimidation) couvre toute tentative d'influencer quelqu'un par des menaces manifestes, des actions hostiles et de la violence physique.\nPar exemple, essayer de soutirer des informations d'un prisonnier, convaincre des voyous de reculer devant une confrontation ou utiliser un tesson de bouteille brisée pour convaincre un vizir ricanant de reconsidérer une décision.", Category.Skill, "isk_Intimidation", 1, 2, Ability.Charisma, Ability.Strength));
      learnableDictionary.Add(CustomSkill.IntimidationExpertise, new LearnableSkill(CustomSkill.IntimidationExpertise, "Intimidation - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Intimidation", 1, 3, Ability.Charisma, Ability.Strength));

      learnableDictionary.Add(CustomSkill.InvestigationProficiency, new LearnableSkill(CustomSkill.InvestigationProficiency, "Investigation - Maîtrise", "Un jet d'Intelligence (Investigation) couvre toute recherche d'indice et de déductions. Vous pouvez déduire l'emplacement d'un objet caché, discerner à partir de l'apparence d'une blessure quel type d'arme l'a infligée, ou déterminer le point le plus faible dans un tunnel qui pourrait provoquer son effondrement.\n L'examen d'anciens parchemins à la recherche d'un fragment de connaissance caché peut également nécessiter un jet d'Intelligence (Investigation).\n\nCette compétence remplace fouille pour la détection des pièges.", Category.Skill, "isk_Investigation", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.InvestigationExpertise, new LearnableSkill(CustomSkill.InvestigationExpertise, "Investigation - Expertise", "Un jet d'Intelligence (Investigation) couvre toute recherche d'indice et de déductions. Vous pouvez déduire l'emplacement d'un objet caché, discerner à partir de l'apparence d'une blessure quel type d'arme l'a infligée, ou déterminer le point le plus faible dans un tunnel qui pourrait provoquer son effondrement.\n L'examen d'anciens parchemins à la recherche d'un fragment de connaissance caché peut également nécessiter un jet d'Intelligence (Investigation).\n\nCette compétence remplace fouille pour la détection des pièges.", Category.MindBody, "isk_Investigation", 1, 1500, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.MedicineProficiency, new LearnableSkill(CustomSkill.MedicineProficiency, "Médecine - Maîtrise", "Un jet de Sagesse (Médecine) couvre toute tentative de se souvenir de détails sur le fonctionnement du corps humain, sur des remèdes ou des poisons. Cette compétence est également utilisée afin de pratiquer des actes médicaux.", Category.Skill, "isk_Medicine", 1, 750, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.MedicineExpertise, new LearnableSkill(CustomSkill.MedicineExpertise, "Médecine - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Medicine", 1, 1500, Ability.Wisdom, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.NatureProficiency, new LearnableSkill(CustomSkill.NatureProficiency, "Nature - Maîtrise", "Un jet d'Intelligence (Nature) couvre toute tentative de se souvenir de connaissances sur le terrain, les plantes, les animaux, la météo et les cycles naturels.", Category.Skill, "isk_Nature", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.NatureExpertise, new LearnableSkill(CustomSkill.NatureExpertise, "Nature - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Nature", 1, 1500, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.PerceptionProficiency, new LearnableSkill(CustomSkill.PerceptionProficiency, "Perception - Maîtrise", "Un jet de Sagesse (Perception) couvre toute tentative de repérer, d'entendre ou de détecter la présence de quelque chose. Il mesure votre conscience générale de votre environnement et l'acuité de vos sens.\nPar exemple, vous pouvez essayer d'entendre une conversation à travers une porte fermée, d'écouter sous une fenêtre ouverte ou d'entendre des monstres se déplacer furtivement dans la forêt.\nVous pouvez aussi essayer de repérer des choses qui sont obscurcies ou faciles à manquer, qu'il s'agisse d'orcs embusqués sur une route, de voyous cachés dans l'ombre d'une ruelle ou de bougies sous une porte secrète fermée.", Category.Skill, "isk_Perception", 1, 750, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.PerceptionExpertise, new LearnableSkill(CustomSkill.PerceptionExpertise, "Perception - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Perception", 1, 1500, Ability.Wisdom, Ability.Intelligence));
      
      learnableDictionary.Add(CustomSkill.PerformanceProficiency, new LearnableSkill(CustomSkill.PerformanceProficiency, "Performance - Maîtrise", "Un jet de Charisme (Performance) couvre toute tentative de ravir un public avec de la musique, de la danse, du théâtre, des contes ou toute autre forme de divertissement.\n\nChaque rang augmente la durée et l'efficacité des capacités liées à l'encouragement des alliés.", Category.Skill, "isk_Performance", 1, 750, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.PerformanceExpertise, new LearnableSkill(CustomSkill.PerformanceExpertise, "Performance - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Performance", 1, 1500, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.PersuasionProficiency, new LearnableSkill(CustomSkill.PersuasionProficiency, "Persuasion - Maîtrise", "Un jet de Charisme (Persuasion) couvre toute tentative d'influencer quelqu'un ou un groupe de personnes avec du tact, des grâces sociales ou une bonne nature.\nEn règle générale, la persuasion est utilisée lorsque vous agissez de bonne foi, pour favoriser des amitiés, faire des demandes cordiales ou faire preuve d'une étiquette appropriée.\nPar exemple : convaincre un chambellan de laisser votre groupe voir le roi, négocier la paix entre des tribus en guerre ou inspirer une foule de citadins.", Category.Skill, "isk_Persuasion", 1, 750, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.PersuasionExpertise, new LearnableSkill(CustomSkill.PersuasionExpertise, "Persuasion - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Persuasion", 1, 1500, Ability.Charisma, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.ReligionProficiency, new LearnableSkill(CustomSkill.ReligionProficiency, "Religion - Maîtrise", "Un jet d'Intelligence (Religion) couvre toute tentative de se souvenir des traditions concernant les divinités, les rites, les prières, les hiérarchies religieuses, les symboles sacrés et les pratiques des cultes.", Category.Skill, "isk_Religion", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReligionExpertise, new LearnableSkill(CustomSkill.ReligionExpertise, "Religion - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Religion", 1, 1500, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.SleightOfHandProficiency, new LearnableSkill(CustomSkill.SleightOfHandProficiency, "Escamotage - Maîtrise", "Un jet de Dextérité (Escamotage) couvre toute tentative un tour de passe-passe ou de supercherie manuelle, comme déposer quelque chose dans les poches de quelqu'un d'autre ou tenter de dissimuler un objet votre propre personne.\n\nUn jet de Dextérité (Escamotage) permet également de déterminer si vous parvenez à délester quelqu'un de son porte-monnaie ou lui faire les poches.\n\nCette compétence remplace Vol à la Tire.", Category.Skill, "isk_Sleight", 1, 750, Ability.Dexterity, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.SleightOfHandExpertise, new LearnableSkill(CustomSkill.SleightOfHandExpertise, "Escamotage - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Sleight", 1, 1500, Ability.Dexterity, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.StealthProficiency, new LearnableSkill(CustomSkill.StealthProficiency, "Furtivité - Maîtrise", "Un jet de Dextérité (Arts des ombres) couvre toute tentative de se dissimulation à l'œil et à l'oreille des ennemis : pour passer furtivement sous le nez des gardes, vous échapper sans vous faire remarquer ou prendre quelqu'un par surprise.\n\nCette compétence remplace à la fois Discrétion et Déplacement silencieux.\nContrairement au jeu de base, cet attribut ne vous permet pas de disparaître aux yeux des autres.\n\nChaque rang augmente la durée et l'efficacité des capacités liées à la dissimulation et à la furtivité.", Category.Skill, "isk_Stealth", 1, 750, Ability.Intelligence, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.StealthExpertise, new LearnableSkill(CustomSkill.StealthExpertise, "Furtivité - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Stealth", 1, 1500, Ability.Intelligence, Ability.Dexterity));

      learnableDictionary.Add(CustomSkill.SurvivalProficiency, new LearnableSkill(CustomSkill.SurvivalProficiency, "Survie - Maîtrise", "Un jet de Sagesse (Survie) couvre toute tentative de suivre des traces, chasser du gibier sauvage, guider votre groupe à travers des friches gelées, identifier des signes indiquant que des ours-hiboux vivent à proximité, prédire la météo ou d'éviter les sables mouvants et autres dangers naturels.", Category.Skill, "isk_Survival", 1, 750, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.SurvivalExpertise, new LearnableSkill(CustomSkill.SurvivalExpertise, "Survie - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_Survival", 1, 1500, Ability.Wisdom, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.StrengthSavesProficiency, new LearnableSkill(CustomSkill.StrengthSavesProficiency, "JDS Force - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant la force.", Category.MindBody, "strength", 1, 5000, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.DexteritySavesProficiency, new LearnableSkill(CustomSkill.DexteritySavesProficiency, "JDS Dextérité - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant la dextérité.", Category.MindBody, "dexterity", 1, 5000, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ConstitutionSavesProficiency, new LearnableSkill(CustomSkill.ConstitutionSavesProficiency, "JDS Constitution - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant la constitution.", Category.MindBody, "constitution", 1, 5000, Ability.Constitution, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.IntelligenceSavesProficiency, new LearnableSkill(CustomSkill.IntelligenceSavesProficiency, "JDS Intelligence - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant l'intelligence.", Category.MindBody, "intelligence", 1, 5000, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.WisdomSavesProficiency, new LearnableSkill(CustomSkill.WisdomSavesProficiency, "JDS Sagesse - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant la sagesse.", Category.MindBody, "wisdom", 1, 5000, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CharismaSavesProficiency, new LearnableSkill(CustomSkill.CharismaSavesProficiency, "JDS Charisma - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant le charisme.", Category.MindBody, "charisma", 1, 5000, Ability.Charisma, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.LightArmorProficiency, new LearnableSkill(CustomSkill.LightArmorProficiency, "Armure légère - Maîtrise", "Utiliser une armure légère en combat sans en avoir la maîtrise vous expose à un désavantage sur :\n-Tous les jets de forces et de dextérité\n- Tous les jets de sauvegarde\n- Tous les jets d'attaques utilisant la force ou la dextérité\n- L'impossibilité d'incanter des sorts", Category.WeaponProficiency, "ife_armor_l", 1, 250, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MediumArmorProficiency, new LearnableSkill(CustomSkill.MediumArmorProficiency, "Armure intermédiaire - Maîtrise", "Utiliser un armure intérmédiaire en combat sans en avoir la maîtrise vous expose à un désavantage sur :\n-Tous les jets de forces et de dextérité\n- Tous les jets de sauvegarde\n- Tous les jets d'attaques utilisant la force ou la dextérité\n- L'impossibilité d'incanter des sorts", Category.WeaponProficiency, "ife_armor_m", 1, 500, Ability.Constitution, Ability.Dexterity, HandleMediumArmorProficiency));
      learnableDictionary.Add(CustomSkill.HeavyArmorProficiency, new LearnableSkill(CustomSkill.HeavyArmorProficiency, "Armure lourde - Maîtrise", "Utiliser une armure lourde en combat sans en avoir la maîtrise vous expose à un désavantage sur :\n-Tous les jets de forces et de dextérité\n- Tous les jets de sauvegarde\n- Tous les jets d'attaques utilisant la force ou la dextérité\n- L'impossibilité d'incanter des sorts", Category.WeaponProficiency, "ife_armor_h", 1, 750, Ability.Constitution, Ability.Strength, HandleHeavyArmorProficiency));
      learnableDictionary.Add(CustomSkill.ShieldProficiency, new LearnableSkill(CustomSkill.ShieldProficiency, "Bouclier - Maîtrise", "Utiliser un bouclier en combat sans en avoir la maîtrise vous expose à un désavantage sur :\n-Tous les jets de forces et de dextérité\n- Tous les jets de sauvegarde\n- Tous les jets d'attaques utilisant la force ou la dextérité\n- L'impossibilité d'incanter des sorts", Category.WeaponProficiency, "ife_sh_prof", 1, 250, Ability.Constitution, Ability.Strength, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.SimpleWeaponProficiency, new LearnableSkill(CustomSkill.SimpleWeaponProficiency, "Arme simple - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec les armes simples", Category.WeaponProficiency, "ife_weppro_sim", 1, 250, Ability.Constitution, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MartialWeaponProficiency, new LearnableSkill(CustomSkill.MartialWeaponProficiency, "Arme martiale - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec les armes martiales", Category.WeaponProficiency, "ife_weppro_mar", 1, 500, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ExoticWeaponProficiency, new LearnableSkill(CustomSkill.ExoticWeaponProficiency, "Arme exotique - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec les armes exotiques", Category.WeaponProficiency, "ife_weppro_ex", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.SpearProficiency, new LearnableSkill(CustomSkill.SpearProficiency, "Lance - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Spe", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.LongSwordProficiency, new LearnableSkill(CustomSkill.LongSwordProficiency, "Epée longue - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise aux attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_LSw", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ShortSwordProficiency, new LearnableSkill(CustomSkill.ShortSwordProficiency, "Epée courte - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Ssw", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.LongBowProficiency, new LearnableSkill(CustomSkill.LongBowProficiency, "Arc long - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Lbw", 1, 750, Ability.Constitution, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ShortBowProficiency, new LearnableSkill(CustomSkill.ShortBowProficiency, "Arc court - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Sbw", 1, 750, Ability.Constitution, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RapierProficiency, new LearnableSkill(CustomSkill.RapierProficiency, "Rapière - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Rap", 1, 750, Ability.Constitution, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.LightHammerProficiency, new LearnableSkill(CustomSkill.LightHammerProficiency, "Marteau léger - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_LHa", 1, 750, Ability.Constitution, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.HandAxeProficiency, new LearnableSkill(CustomSkill.HandAxeProficiency, "Hachette - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Hax", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BattleaxeProficiency, new LearnableSkill(CustomSkill.BattleaxeProficiency, "Hache de Guerre - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Bax", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DwarvenAxeProficiency, new LearnableSkill(CustomSkill.DwarvenAxeProficiency, "Hache naine - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_X2WFDWAx", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ShurikenProficiency, new LearnableSkill(CustomSkill.ShurikenProficiency, "Arbalète de poing - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Shu", 1, 750, Ability.Constitution, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DoubleBladeProficiency, new LearnableSkill(CustomSkill.DoubleBladeProficiency, "Lame Double - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_2sw", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ClubProficiency, new LearnableSkill(CustomSkill.ClubProficiency, "Goudrin - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Clu", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DaggerProficiency, new LearnableSkill(CustomSkill.DaggerProficiency, "Dague - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Dag", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.LightMaceProficiency, new LearnableSkill(CustomSkill.LightMaceProficiency, "Masse d'armes - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Lma", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.QuarterstaffProficiency, new LearnableSkill(CustomSkill.QuarterstaffProficiency, "Bâton - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Sta", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.SickleProficiency, new LearnableSkill(CustomSkill.SickleProficiency, "Serpe - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Sic", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.LightCrossbowProficiency, new LearnableSkill(CustomSkill.LightCrossbowProficiency, "Arbalète légère - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_LXb", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DartProficiency, new LearnableSkill(CustomSkill.DartProficiency, "Dard - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Dar", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.LightFlailProficiency, new LearnableSkill(CustomSkill.LightFlailProficiency, "Fléau Léger - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Lfl", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MorningstarProficiency, new LearnableSkill(CustomSkill.MorningstarProficiency, "Morgenstern - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Mor", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.SlingProficiency, new LearnableSkill(CustomSkill.SlingProficiency, "Fronde - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_SLi", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.GreataxeProficiency, new LearnableSkill(CustomSkill.GreataxeProficiency, "Hache d'armes - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Gax", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.GreatswordProficiency, new LearnableSkill(CustomSkill.GreatswordProficiency, "Espadon - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Gsw", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ScimitarProficiency, new LearnableSkill(CustomSkill.ScimitarProficiency, "Cimeterre - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Sci", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.HalberdProficiency, new LearnableSkill(CustomSkill.HalberdProficiency, "Hallebarde - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Hal", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.HeavyFlailProficiency, new LearnableSkill(CustomSkill.HeavyFlailProficiency, "Fléau lourd - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Hfl", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ThrowingAxeProficiency, new LearnableSkill(CustomSkill.ThrowingAxeProficiency, "Hache de jet - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Tax", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarHammerProficiency, new LearnableSkill(CustomSkill.WarHammerProficiency, "Marteau de guerre - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Wha", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.HeavyCrossbowProficiency, new LearnableSkill(CustomSkill.HeavyCrossbowProficiency, "Arbalète lourde - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Hxb", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BastardswordProficiency, new LearnableSkill(CustomSkill.BastardswordProficiency, "Claymore - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Bsw", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ScytheProficiency, new LearnableSkill(CustomSkill.ScytheProficiency, "Faux - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Scy", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DireMaceProficiency, new LearnableSkill(CustomSkill.DireMaceProficiency, "Masse double - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Dma", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DoubleAxeProficiency, new LearnableSkill(CustomSkill.DoubleAxeProficiency, "Hache double - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Dax", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.KamaProficiency, new LearnableSkill(CustomSkill.KamaProficiency, "Kama - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Kam", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.KatanaProficiency, new LearnableSkill(CustomSkill.KatanaProficiency, "Katana - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Kat", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.KukriProficiency, new LearnableSkill(CustomSkill.KukriProficiency, "Kukri - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_wepfoc_Kuk", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WhipProficiency, new LearnableSkill(CustomSkill.WhipProficiency, "Fouet - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme", Category.WeaponProficiency, "ife_X2WFWhip", 1, 750, Ability.Constitution, Ability.Strength, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.UncannyDodge, new LearnableSkill(CustomSkill.UncannyDodge, "Esquive Instinctive", "Permet au personnage de réagir instinctivement, même face à un adversaire qu'il ne voit pas.\n\nSi le personnage réussi un jet de survie contre la tromperie d'un adversaire qui l'attaque de dos avec une arme de mêlée, alors le critique automatique sera annulé.", Category.Fight, "ife_uncdodge", 5, 3, Ability.Dexterity, Ability.Wisdom));

      // ORIGINS

      learnableDictionary.Add(CustomSkill.Acolyte, new LearnableSkill(CustomSkill.Acolyte, "Acolyte", "", Category.StartingTraits, "Acolyte", 1, 1, Ability.Wisdom, Ability.Charisma, HandleAcolyteBackground, "1JU5_KaJTVhoy4PyGFo5sIBIPUbLWe6tMNENQ2kR2WFY"));
      learnableDictionary.Add(CustomSkill.Anthropologist, new LearnableSkill(CustomSkill.Anthropologist, "Anthropologue", "", Category.StartingTraits, "Anthropologue", 1, 1, Ability.Wisdom, Ability.Intelligence, HandleAnthropologistBackground, "1KLiNxm_dHLbRh-dveP--LAfcIMHCjHhcX98a7xzZGOI"));
      learnableDictionary.Add(CustomSkill.Archeologist, new LearnableSkill(CustomSkill.Archeologist, "Archéologue", "", Category.StartingTraits, "archeologist", 1, 1, Ability.Intelligence, Ability.Wisdom, HandleArcheologistBackground, "1ULJttGDVkgc5vsk9DvzEJqG53Yuh_meh59T7TWkmpVs"));
      learnableDictionary.Add(CustomSkill.CloisteredScholar, new LearnableSkill(CustomSkill.CloisteredScholar, "Erudit", "", Category.StartingTraits, "Erudit", 1, 1, Ability.Wisdom, Ability.Intelligence, HandleScholarBackground, "1JHepuecYSMwwqwlxMitBMWEOvm5l1mgRaQiKI7In2G0"));
      learnableDictionary.Add(CustomSkill.Sage, new LearnableSkill(CustomSkill.Sage, "Sage", "", Category.StartingTraits, "Sage", 1, 1, Ability.Wisdom, Ability.Intelligence, HandleSageBackground, "1AdvUpfuXxrIdv35Go4poPSFFm_4tlVvzJK5cXmR_QMw"));
      learnableDictionary.Add(CustomSkill.Hermit, new LearnableSkill(CustomSkill.Hermit, "Ermite", "", Category.StartingTraits, "Ermite", 1, 1, Ability.Wisdom, Ability.Constitution, HandleHermitBackground, "1jPUik90zrJ7XhNVNILd0MhaWOmLqA9XRpQ8MTnNffBA"));
      learnableDictionary.Add(CustomSkill.Wanderer, new LearnableSkill(CustomSkill.Wanderer, "Voyageur", "", Category.StartingTraits, "Voyageur", 1, 1, Ability.Constitution, Ability.Wisdom, HandleWandererBackground, "1X2s8SwAG8I3AgDuB7Mo-yaWVpk3_AZmaXZtG2pDrdMc")); 
      learnableDictionary.Add(CustomSkill.Athlete, new LearnableSkill(CustomSkill.Athlete, "Athlète", "", Category.StartingTraits, "athlete", 1, 1, Ability.Strength, Ability.Constitution, HandleAthleteBackground, "15h9-KjZ0sjS1yvstLjLEf3mumjJ4Xq5E-pbmgfAv9Xw"));
      learnableDictionary.Add(CustomSkill.Outlander, new LearnableSkill(CustomSkill.Outlander, "Sauvage", "", Category.StartingTraits, "Sauvage", 1, 1, Ability.Strength, Ability.Wisdom, HandleOutlanderBackground, "1qm3URzCigQ_xIz-BPT4kjLdXhtvyfFBI5F9ZEuxvweQ"));
      learnableDictionary.Add(CustomSkill.Soldier, new LearnableSkill(CustomSkill.Soldier, "Soldat", "", Category.StartingTraits, "Soldat", 1, 1, Ability.Strength, Ability.Constitution, HandleSoldierBackground, "1QKnLB4iEuX8pNmqPXDfV8SSSeDcsT0_9e5xMNsCLa0c"));
      learnableDictionary.Add(CustomSkill.Mercenary, new LearnableSkill(CustomSkill.Mercenary, "Mercenaire", "", Category.StartingTraits, "Mercenaire", 1, 1, Ability.Strength, Ability.Dexterity, HandleMercenaryBackground, "1vDKqHBxFtjmhn25r0dhVruaMgzfSWxFV7D2grdPtDso"));
      learnableDictionary.Add(CustomSkill.FolkHero, new LearnableSkill(CustomSkill.FolkHero, "Héros du peuple", "", Category.StartingTraits, "folk_hero", 1, 1, Ability.Strength, Ability.Dexterity, HandleFolkHeroBackground, "1S4BK_DoT2tnV1EjMYvvVTrg-mR0tI-3uRBCyry5twi0"));
      learnableDictionary.Add(CustomSkill.Sailor, new LearnableSkill(CustomSkill.Sailor, "Marin", "", Category.StartingTraits, "Marin", 1, 1, Ability.Dexterity, Ability.Constitution, HandleSailorBackground, "15sc6ymheE3JJpcg8qR_ATyB5xxj-aZAc5Ei2XFcsHpE"));
      learnableDictionary.Add(CustomSkill.Shipwright, new LearnableSkill(CustomSkill.Shipwright, "Charpentier Naval", "", Category.StartingTraits, "carpenter", 1, 1, Ability.Strength, Ability.Dexterity, HandleShipwrightBackground, "1pA026_rZo7PlCrpwbq3zJz2P_UCcyLxITX3EKabuXP4"));
      learnableDictionary.Add(CustomSkill.Fisher, new LearnableSkill(CustomSkill.Fisher, "Pêcheur", "", Category.StartingTraits, "fisher", 1, 1, Ability.Constitution, Ability.Wisdom, HandleFisherBackground, "19uXzfsD2RzNYb3ledV2CMHjEXrJCCCb6uYDlpIYmxmw"));
      learnableDictionary.Add(CustomSkill.Marine, new LearnableSkill(CustomSkill.Marine, "Officier de la marine", "", Category.StartingTraits, "officer", 1, 1, Ability.Strength, Ability.Constitution, HandleMarineBackground, "1g4Hoj6WS1uAAcvpNyrTGju0Mh81H9aIecK9B---sAgk"));
      learnableDictionary.Add(CustomSkill.Criminal, new LearnableSkill(CustomSkill.Criminal, "Criminel", "", Category.StartingTraits, "Criminel", 1, 1, Ability.Dexterity, Ability.Strength, HandleCriminalBackground, "1l0m9pkIcfVy37ZjPl9wEB7s-PD2OwRt9Tco_KUhT-xI"));
      learnableDictionary.Add(CustomSkill.Charlatan, new LearnableSkill(CustomSkill.Charlatan, "Charlatan", "", Category.StartingTraits, "Charlatan", 1, 1, Ability.Charisma, Ability.Intelligence, HandleCharlatanBackground, "1ps07V3Lbp18RMIwrkYYGGyxC3tk5L8Y97zpJHw0eqO8"));
      learnableDictionary.Add(CustomSkill.Smuggler, new LearnableSkill(CustomSkill.Smuggler, "Contrebandier", "", Category.StartingTraits, "contrebandier", 1, 1, Ability.Charisma, Ability.Dexterity, HandleSmugglerBackground, "1BRYovMiish9iFnN5Q77cW14vP6bGjO14m32NzGJFiV4"));
      learnableDictionary.Add(CustomSkill.StreetUrchin, new LearnableSkill(CustomSkill.StreetUrchin, "Gosse des rues", "", Category.StartingTraits, "urchin", 1, 1, Ability.Dexterity, Ability.Charisma, HandleUrchinBackground, "1vtim0ITSkBzl5IlPGjhKuZOTCyBYA_GHLc8M09t1IoM"));
      learnableDictionary.Add(CustomSkill.Gambler, new LearnableSkill(CustomSkill.Gambler, "Parieur", "", Category.StartingTraits, "parieur", 1, 1, Ability.Dexterity, Ability.Charisma, HandleGamblerBackground, "1HkPJH8uqCCn4k4J8HUh3g52v4TfAEFAYiFJlXYhEvuM"));
      learnableDictionary.Add(CustomSkill.Entertainer, new LearnableSkill(CustomSkill.Entertainer, "Saltimbanque", "", Category.StartingTraits, "Saltimbanque", 1, 1, Ability.Charisma, Ability.Dexterity, HandleEntertainerBackground, "1Y87LKyg4DLKdlzUcfFtMj7M1rkSh6yAXx6Cb6Q16Dug"));
      learnableDictionary.Add(CustomSkill.CityWatch, new LearnableSkill(CustomSkill.CityWatch, "Agent du guet", "", Category.StartingTraits, "guet", 1, 1, Ability.Strength, Ability.Constitution, HandleCityWatchBackground, "1JmIBbWSJ6oec820F-4TYeShM43XAKtOtCz2vBf2lPT4"));
      learnableDictionary.Add(CustomSkill.Investigator, new LearnableSkill(CustomSkill.Investigator, "Détective", "", Category.StartingTraits, "detective", 1, 1, Ability.Dexterity, Ability.Intelligence, HandleInvestigatorBackground, "1wMwqmw3jVGFAnQCDa-ayjqeKUL2QGXPyP7KIc7QoDy8"));
      learnableDictionary.Add(CustomSkill.KnightOfTheOrder, new LearnableSkill(CustomSkill.KnightOfTheOrder, "Chevalier de l'Ordre", "", Category.StartingTraits, "chevalier", 1, 1, Ability.Strength, Ability.Charisma, HandleKnightBackground, "1psb8aH-EaKINYKif3XC-MG3mtTFgh-5MYAehcJnCxl4"));
      learnableDictionary.Add(CustomSkill.Noble, new LearnableSkill(CustomSkill.Noble, "Noble", "", Category.StartingTraits, "Noble", 1, 1, Ability.Charisma, Ability.Constitution, HandleNobleBackground, "1_KAkFnH9Ydt2s0ljOGvwn-7mo_Vk5PrqtqIwJZ48k-Q"));
      learnableDictionary.Add(CustomSkill.Courtier, new LearnableSkill(CustomSkill.Courtier, "Courtisan", "", Category.StartingTraits, "Courtisan", 1, 1, Ability.Charisma, Ability.Intelligence, HandleCourtierBackground, "1B1C2bcvU9HBb-d2m1lnFhnHWN2a46hp3zWDb9nBZnJU"));
      learnableDictionary.Add(CustomSkill.FailedMerchant, new LearnableSkill(CustomSkill.FailedMerchant, "Marchand ruiné", "", Category.StartingTraits, "ruined_merchant", 1, 1, Ability.Intelligence, Ability.Constitution, HandleMerchantBackground, "1-2AuXuxSW1PICZWicsGUcb8Sgh_rGTVUYc6eT2zWJO8"));
      learnableDictionary.Add(CustomSkill.Taken, new LearnableSkill(CustomSkill.Taken, "Captif", "", Category.StartingTraits, "Captif", 1, 1, Ability.Constitution, Ability.Dexterity, HandleTakenBackground, "16_6ygOZjsfJF7Ngk5VZ9gSK_nlAz7kqy5-sSDlVVPxw"));
      learnableDictionary.Add(CustomSkill.Heir, new LearnableSkill(CustomSkill.Heir, "Héritier", "", Category.StartingTraits, "heir", 1, 1, Ability.Charisma, Ability.Constitution, HandleScionBackground, "1_D4_FywpDXAJXABkhpuwMAUkg68dsRiU07p-9Q-XSiA"));
      learnableDictionary.Add(CustomSkill.Magistrate, new LearnableSkill(CustomSkill.Magistrate, "Magistrat", "", Category.StartingTraits, "Magistrat", 1, 1, Ability.Intelligence, Ability.Wisdom, HandleMagistrateBackground, "16w21xr6HgBE159pLr1Br0mf7T00zsIzonGdXTGekIYs"));
      learnableDictionary.Add(CustomSkill.AdventurerScion, new LearnableSkill(CustomSkill.AdventurerScion, "Héritier d'un célèbre aventurier", "", Category.StartingTraits, "scion", 1, 1, Ability.Charisma, Ability.Dexterity, HandleScionBackground, "1S7UROAImbnZdGf5Q_CkScJ_gfmfRDBcHGhQ9LpqHoAg"));
      learnableDictionary.Add(CustomSkill.Refugee, new LearnableSkill(CustomSkill.Refugee, "Réfugié", "", Category.StartingTraits, "refugee", 1, 1, Ability.Dexterity, Ability.Constitution, HandleRefugeeBackground, "1GCBVKWeDNR20kqOqKwIex8qlCbOltNmUpkblINEShYM"));
      learnableDictionary.Add(CustomSkill.Prisoner, new LearnableSkill(CustomSkill.Prisoner, "Prisonnier", "", Category.StartingTraits, "prisoner", 1, 1, Ability.Constitution, Ability.Charisma, HandlePrisonerBackground, "1Qdyz-fNuGrqI64NYaAP6wmiQd7GhUz0-hqf5F-vrYps"));
      learnableDictionary.Add(CustomSkill.HauntedOne, new LearnableSkill(CustomSkill.HauntedOne, "Tourmenté", "", Category.StartingTraits, "tormented", 1, 1, Ability.Constitution, Ability.Charisma, HandleHauntedBackground, "1yrgm7p09M0_-Y4nDkxY7gtT1LaO1Av305zBDBoqe72M"));
      learnableDictionary.Add(CustomSkill.Faceless, new LearnableSkill(CustomSkill.Faceless, "Sans-visage", "", Category.StartingTraits, "faceless", 1, 1, Ability.Charisma, Ability.Constitution, HandleFacelessBackground, "1ghCYrBt8e58F5QQB5gvyn294XZO7jHkdvSIYZfYgS9g"));
      learnableDictionary.Add(CustomSkill.SecretIdentity, new LearnableSkill(CustomSkill.SecretIdentity, "Identité Secrète", "", Category.StartingTraits, "secret_identity", 1, 1, Ability.Charisma, Ability.Dexterity, HandleSecretBackground, "1EevCfGvIUXDSx2iEJwPMwN3BDuNGBMR_GSQKZqiIsYQ"));

      // LANGUAGES

      learnableDictionary.Add(CustomSkill.Elfique, new LearnableSkill(CustomSkill.Elfique, "Elfique", "Permet de parler et comprendre l'elfique.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Nain, new LearnableSkill(CustomSkill.Nain, "Nain", "Permet de parler et comprendre le nain.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Orc, new LearnableSkill(CustomSkill.Orc, "Orc", "Permet de parler et comprendre l'orc.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Giant, new LearnableSkill(CustomSkill.Giant, "Giant", "Permet de parler et comprendre le géant.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Gobelin, new LearnableSkill(CustomSkill.Gobelin, "Gobelin", "Permet de parler et comprendre le gobelin.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Halfelin, new LearnableSkill(CustomSkill.Halfelin, "Halfelin", "Permet de parler et comprendre l'hafelin.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Abyssal, new LearnableSkill(CustomSkill.Abyssal, "Abyssal", "Permet de parler et comprendre l'abyssal.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Celestial, new LearnableSkill(CustomSkill.Celestial, "Céleste", "Permet de parler et comprendre le céleste.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Draconique, new LearnableSkill(CustomSkill.Draconique, "Draconique", "Permet de parler et comprendre le draconique.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Profond, new LearnableSkill(CustomSkill.Profond, "Profond", "Permet de parler et comprendre le langage d'Outreterre.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Infernal, new LearnableSkill(CustomSkill.Infernal, "Infernal", "Permet de parler et comprendre l'infernal.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Primordiale, new LearnableSkill(CustomSkill.Primordiale, "Primordiale", "Permet de parler et comprendre le primordial.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Sylvain, new LearnableSkill(CustomSkill.Sylvain, "Sylvain", "Permet de parler et comprendre le sylvain.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Druidique, new LearnableSkill(CustomSkill.Druidique, "Druidique", "Permet de parler et comprendre le druidique.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Voleur, new LearnableSkill(CustomSkill.Voleur, "Voleur", "Permet de parler et comprendre le langage des voleurs.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Gnome, new LearnableSkill(CustomSkill.Gnome, "Gnome", "Permet de parler et comprendre le gnome.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));

      // ORIGIN FEATS

      learnableDictionary.Add(CustomSkill.Vigilant, new LearnableSkill(CustomSkill.Vigilant, "Vigilant", "Don d'origine\n\nToujours à l'affut du danger, vous ajoutez votre bonus de maîtrise à votre jet d'initiative. De plus vous êtes capable de donner vos bonus d'initiatives à une autre créature ayant réalisé un jet inférieur au votre.", Category.OriginFeat, "is_Vigilant", 1, 5, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Healer, new LearnableSkill(CustomSkill.Healer, "Guérisseur", "Don d'origine\n\nVous êtes un bon médecin. Vous êtes capables d'utiliser les kits de soin et de rendre à la créature soignée un nombre de points de vie égal à 1d8 + votre bonus de maîtrise.\n\nLorsque vous lancez un dé pour rendre des points à l'aide d'un sort ou d'un kit de soin, vous relancez le dé si jamais celui-ci est égal à 1. Vous devez obligatoirement utiliser le nouveau jet.", Category.OriginFeat, "is_Healer", 1, 5, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Chanceux, new LearnableSkill(CustomSkill.Chanceux, "Chanceux", "Don d'origine\n\nVous avez une chance inexplicable qui tombe toujours au bon moment.\n\nA chaque long repos, vous disposez de 3 points de chance.\n\nSi vous vous ciblez vous-même, le prochain jet que vous effectuerez bénéficiera d'un avantage.\n\nSi vous ciblez une autre créature, sa prochaine attaque portée contre vous sera effectuée avec désavantage.", Category.OriginFeat, "is_Lucky", 1, 5, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.InitieArcanique, new LearnableSkill(CustomSkill.InitieArcanique, "Initié Arcanique", "Don d'origine\n\nVous apprenez trois tours de magie de Magicien. Vous utilisez votre caractéristique la plus élevée parmi Intelligence, Sagesse et Charisme pour les lancer.", Category.OriginFeat, "is_MageInitiate", 1, 5, Ability.Intelligence, Ability.Wisdom, OnLearnInitieArcanique));
      learnableDictionary.Add(CustomSkill.InitieMystique, new LearnableSkill(CustomSkill.InitieMystique, "Initié Mystique", "Don d'origine\n\nVous apprenez trois tours de magie de Clerc. Vous utilisez votre caractéristique la plus élevée parmi Intelligence, Sagesse et Charisme pour les lancer.", Category.OriginFeat, "is_ClericInitiate", 1, 5, Ability.Wisdom, Ability.Charisma, OnLearnInitieMystique));
      learnableDictionary.Add(CustomSkill.InitieDruidique, new LearnableSkill(CustomSkill.InitieDruidique, "Initié Druidique", "Don d'origine\n\nVous apprenez trois tours de magie de Druide. Vous utilisez votre caractéristique la plus élevée parmi Intelligence, Sagesse et Charisme pour les lancer.", Category.OriginFeat, "is_DruidInitiate", 1, 5, Ability.Wisdom, Ability.Intelligence, OnLearnInitieDruidique));
      learnableDictionary.Add(CustomSkill.Musicien, new LearnableSkill(CustomSkill.Musicien, "Musicien", "Don d'origine\n\nVous maîtrisez trois instruments de musique de votre choix.\n\nUne fois par repos court, lorsque vous jouez de l'un de ces instruments, vous pouvez donner une Inspiration Héroïque à nombre de créatures égal à votre bonus de maîtrise.", Category.OriginFeat, "is_Musician", 1, 5, Ability.Charisma, Ability.Intelligence, LearnActivableFeat, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.AgresseurSauvage, new LearnableSkill(CustomSkill.AgresseurSauvage, "Agresseur Sauvage", "Don d'origine\n\nVous êtes entrainé à effectuer des attaques efficaces. Une fois par round, lorsque vous infligez des dégâts avec une arme, vous lancez vos dés dégâts deux fois et utilisez le meilleur résultat.", Category.OriginFeat, "is_SavageAg", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnAgresseurSauvage));
      learnableDictionary.Add(CustomSkill.Doue, new LearnableSkill(CustomSkill.Doue, "Doué", "Don d'origine\n\nVous maîtrisez trois compétences supplémentaires de votre choix.", Category.OriginFeat, "is_Doue", 1, 5, Ability.Intelligence, Ability.Wisdom, OnLearnDoue));
      learnableDictionary.Add(CustomSkill.BagarreurDeTaverne, new LearnableSkill(CustomSkill.BagarreurDeTaverne, "Bagarreur de taverne", "Don d'origine\n\nVous bénéficiez des effets ci-dessous\n- Vous maîtrisez les armes improvisées (pour le moment uniquement utilisable en animation. Dégâts à la discrétion du DM : 1d4 si l'objet utilisé ne peut pas faire office d'arme, sinon dégâts de l'arme dont il se rapproche le plus)\n- Votre attaque à mains nues utilise 1d4 pour les dégâts (si elle n'est pas déjà supérieure)\n- Lorsque vous infligez des dégâts avec une attaque à mains nues et que votre jet est de 1, vous relancez le jet et utilisez le nouveau résultat", Category.Feat, "is_Bagarreur", 1, 5, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Robuste, new LearnableSkill(CustomSkill.Robuste, "Robuste", "Don d'origine\n\nVous gagnez 2 points de vie supplémentaires pour chaque niveau. Ce don est rétroactif.", Category.OriginFeat, "is_Robuste", 1, 5, Ability.Constitution, Ability.Strength, OnLearnRobuste));

      // FEATS

      learnableDictionary.Add(CustomSkill.AbilityImprovement, new LearnableSkill(CustomSkill.AbilityImprovement, "Amélioration de caractéristiques", "Choisissez une caractéristique à laquelle ajouter un bonus de +2 ou deux caractéristiques auxquelles ajouter un bonus de +1.\n\nCe don ne vous permet pas d'aller au-delà de 20 dans une même caractéristique.", Category.Feat, "ife_aurabrave", 20, 5, Ability.Constitution, Ability.Intelligence, OnAbilityImprovement));
      learnableDictionary.Add(CustomSkill.Actor, new LearnableSkill(CustomSkill.Actor, "Acteur", "Vous gagnez un point de charisme (maximum 20).\n\nVous avez un avantage en Tromperie et Représentation lorsque vous tenter de vous faire passer pour une autre personne.\n\nVous pouvez imiter la façon de parler d'une autre personne ou les sons émis par d'autres créatures. Vous devez avoir entendu la personne qui parle, ou entendu la créature émettre le son, pendant au moins 1 minute. Un jet réussi d'Intuition vs DD 8 + votre modificateur de charisme + bonus de maîtrise permet à celui qui écoute de déterminer qu'il s'agit d'une imitation.", Category.Feat, "ife_emptybod", 1, 5, Ability.Charisma, Ability.Dexterity, OnLearnActor));
      learnableDictionary.Add(CustomSkill.Sportif, new LearnableSkill(CustomSkill.Sportif, "Sportif", "Vous avez suivi une intense formation physique. Vous bénéficiez des effets ci-dessous :\n- +1 Force ou Dextérité (max 20)\n-  Lorsque vous êtes renversé, vous restez au sol deux fois moins longtemps\n- Escalader ne vous coûte pas de mouvement supplémentaire\n- Vous pouvez faire un saut en longueur ou en hauteur avec seulement 1,50 mètre d'élan, au lieu de 3 mètres", Category.Feat, "is_Sportif", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnSportif));
      learnableDictionary.Add(CustomSkill.Chargeur, new LearnableSkill(CustomSkill.Chargeur, "Chargeur", "Lorsque vous utilisez Sprint, vous vous déplacez 30 % plus vite. Si votre charge se fait sur plus de trois mètres, vous bénéficiez d'un bonus de +1d8 sur votre prochaine attaque\n- +1 Force ou Dextérité (max 20)", Category.Feat, "is_Charger", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnChargeur));
      learnableDictionary.Add(CustomSkill.MaitreArbaletrier, new LearnableSkill(CustomSkill.MaitreArbaletrier, "Maître Arbalétrier", "Grâce à votre longue pratique de l'arbalète, vous bénéficiez des effets ci-dessous :\n- Vous ignorez la propriété de chargement des arbalètes que vous maitrisez\n- Vous ne subissez plus de désavantage sur vos jets d'attaque à distance à l'arbalète si une créature hostile se trouve engagée en mêlée avec vous\n- Double la durée des Plaies Béantes infligées par vos Tirs Perçants\n- Lorsque vous attaquez avec une arbalète de poing, vous utilisez automatiquement votre action bonus (si vous en avez une disponible) pour effectuer une attaque supplémentaire\n- +1 Dextérité (max 20)", Category.Feat, "is_ArbaMaster", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnMaitreArbaletrier));
      learnableDictionary.Add(CustomSkill.DuellisteDefensif, new LearnableSkill(CustomSkill.DuellisteDefensif, "Duelliste Défensif", "Lorsque vous tenez une arme de finesse que vous maîtrisez, la prochaine fois qu'une créature vous touche avec une attaque de mêlée, vous utilisez votre réaction pour ajouter votre bonus de maîtrise à votre CA pour cette attaque, ce qui pourrait vous permettre de parer l'attaque\n- +1 Dextérité (max 20)", Category.Feat, "is_DefDuel", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnDefensiveDuellist));
      learnableDictionary.Add(CustomSkill.AmbiMaster, new LearnableSkill(CustomSkill.AmbiMaster, "Maître Ambidextre", "Vous maîtrisez le combat à deux armes et bénéficiez des effets ci-dessous :\n- Vous gagnez un bonus de +1 à la CA si vous tenez une arme de mêlée dans chaque main\n- Vous pouvez utiliser le combat à deux armes même avec une arme non Légère dans votre main directrice tant qu'elle n'est pas une arme Lourde\n- Vous pouvez dégainer ou rengainer deux armes à une main en une seule action alors qu'il vous en faudrait normalement deux\n- +1 Force ou Dextérité (max 20)", Category.Feat, "is_AmbiMaster", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnAmbiMaster));
      learnableDictionary.Add(CustomSkill.DungeonExpert, new LearnableSkill(CustomSkill.DungeonExpert, "Expert en donjons", "+1 Constitution (max 20)\n\nVigilant face aux pièges cachés et portes secrètes que l'on trouve dans de nombreux donjons, vous obtenez les bénéfices ci-dessous :\n- Vous avez un avantage aux jets de Sagesse (Perception) et Intelligence (Investigation) effectués pour détecter la présence de portes secrètes\n- Vous avez un avantage aux jets de sauvegarde pour éviter ou résister aux pièges\n- Vous obtenez la résistance aux dégâts infligés par les pièges\n- Vous ne subissez pas de malus sur vos jets de Sagesse (Perception) passifs lorsque vous vous déplacez rapidement", Category.Feat, "is_DungeonExpert", 1, 5, Ability.Dexterity, Ability.Wisdom, OnLearnDungeonExpert));
      learnableDictionary.Add(CustomSkill.Gaillard, new LearnableSkill(CustomSkill.Gaillard, "Gaillard", "Robuste et résistant, vous bénéficiez des effets ci-dessous :\n- +1 Constitution (max 20)\n- Lorsque vous lancez un dé de vie pour regagner des points de vie, le nombre minimum de points de vie que vous regagnez de ce jet est égal à deux fois votre modificateur de Constitution (minimum 2).", Category.Feat, "is_Gaillard", 1, 5, Ability.Constitution, Ability.Strength, OnLearnGaillard));
      learnableDictionary.Add(CustomSkill.Elementaliste, new LearnableSkill(CustomSkill.Elementaliste, "Elémentaliste", "Choisissez un type de dégâts parmi : acide, froid, feu, foudre ou tonnerre. Vos sorts bénéficient des effets ci-dessous\n- La résistance à ce type de dégâts est ignorée\n- Lorsque vous obtenez un 1 sur un jet de dégâts avec ce type de dégâts, il est remplacé par un 2\n\nCe don peut être sélectionné plusieurs fois pour des types de dégâts différents\n- +1 Intelligence, Sagesse ou Charisme (max 20)", Category.Feat, "is_Elementalist", 5, 5, Ability.Charisma, Ability.Intelligence, OnLearnElementalist));
      learnableDictionary.Add(CustomSkill.CogneurLourd, new LearnableSkill(CustomSkill.CogneurLourd, "Cogneur Lourd", "Vous avez appris à tirer avantage du poids d'une arme, laissant son élan augmenter l'efficacité de vos frappes. Vous bénéficiez des effets ci-dessous\n- Lorsque, avec une arme de mêlée, vous infligez un coup critique ou faîtes tomber les points de vie d'une créature à 0, vous utilisez automatiquement votre action bonus pour effectuer une attaque supplémentaire\n- Lorsque vous attaquez avec une arme de mêlée à deux mains que vous maîtrisez, vous ajoutez votre bonus de maîtrise aux dégâts (fonctionne également avec les armes versatiles utilisées à deux mains)\n- +1 Force (max 20)", Category.Feat, "is_CogneurLourd", 1, 5, Ability.Strength, Ability.Constitution, OnLearnCogneurLourd));
      learnableDictionary.Add(CustomSkill.ProtectionLegere, new LearnableSkill(CustomSkill.ProtectionLegere, "Protection Légère", "+1 Force ou Dextérité (max +20)\n\nVous avez été formé à la maîtrise des armures légères et des boucliers", Category.Feat, "is_ProtecLegere", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnProtectionLegere));
      learnableDictionary.Add(CustomSkill.ProtectionIntermediaire, new LearnableSkill(CustomSkill.ProtectionIntermediaire, "Protection Intermédiaire", "+1 Force ou Dextérité (max 20)\n\nVous avez été formé à la maîtrise des armures intermédiaires\n\nPrérequis : Maîtrise des armures légères", Category.Feat, "is_ProtecInter", 1, 5, Ability.Constitution, Ability.Dexterity, OnLearnProtectionIntermediaire, learnablePrerequiste: new() { CustomSkill.LightArmorProficiency }));
      learnableDictionary.Add(CustomSkill.ProtectionLourde, new LearnableSkill(CustomSkill.ProtectionLourde, "Protection Lourde", "Vous avez été formé à la maîtrise des armures lourdes. Vous bénéficiez des effets ci-dessous\n- +1 Force ou Constitution (max +20)\n- Vous maîtrisez les armures lourdes\n\nPrérequis : Maîtrise des armures intermédiaires", Category.Feat, "is_ProtecLourde", 1, 5, Ability.Strength, Ability.Constitution, OnLearnProtectionLourde, learnablePrerequiste: new() { CustomSkill.MediumArmorProficiency }));
      learnableDictionary.Add(CustomSkill.MaitreArmureLourde, new LearnableSkill(CustomSkill.MaitreArmureLourde, "Maître des armures lourdes", "Vous pouvez utiliser votre armure pour détourner des attaques qui en auraient tué plus d'un. Vous bénéficiez des effets ci-dessous\n- +1 Force ou Constitution (max +20)\n- Lorsque vous portez une armure lourde, les dégâts des attaques contondantes, tranchantes ou perçantes sont réduites d'un montant égal à votre bonus de maîtrise\n\nPrérequis : Maîtrise des armures lourdes", Category.Feat, "is_HeavyMaster", 1, 5, Ability.Strength, Ability.Constitution, OnLearnMaitreArmureLourde, learnablePrerequiste: new() { CustomSkill.HeavyArmorProficiency }));
      learnableDictionary.Add(CustomSkill.MaitreArmureIntermediaire, new LearnableSkill(CustomSkill.MaitreArmureIntermediaire, "Maître des armures intermédiaires", "+1 Force ou Dextérité (max 20)\n\nVous avez pratiqué l'usages des armures intermédiaires au point de bénéficier des effets ci-dessous\n- Porter une armure intermédiaire n'impose pas de désavantage à vos jets de Dextérité (Furtivité)\n-  Lorsque vous portez une armure intermédiaire, vous pouvez ajouter 3, au lieu de 2, à votre CA si votre modificateur de dextérité le permet\n\nPrérequis : Maîtrise des armures intermédiaires", Category.Feat, "is_InterMaster", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnMaitreArmureIntermediaire, learnablePrerequiste: new() { CustomSkill.MediumArmorProficiency }));
      learnableDictionary.Add(CustomSkill.MaitreBouclier, new LearnableSkill(CustomSkill.MaitreBouclier, "Maître des Boucliers", "+1 Force (max 20)\n\nVous utilisez les boucliers non seulement pour vous protéger, mais aussi de manière offensive. Lorsque vous êtes équipé d'un bouclier, vous bénéficiez des effets ci-dessous\n- Vous pouvez utiliser une action bonus afin de tenter de renverser la cible\n- Ajoutez le bonus de base à la CA de votre bouclier à vos jets de sauvegarde de Dextérité\n- Une fois par round, si vous êtes soumis à un effet qui vous permet d'effectuer un jet de sauvegarde de Dextérité pour ne subir que la moitié des dégâts, vous interposez votre bouclier entre vous et la source de l'effet. Si vous réussissez le jet, vous ne subissez aucun dégât si vous l'échouez, vous n'en subissez que la moitié\n- Vous maîtrisez les pavois", Category.Feat, "is_ShieldMaster", 1, 5, Ability.Constitution, Ability.Strength, OnLearnMaitreBouclier));
      learnableDictionary.Add(CustomSkill.PourfendeurDeMages, new LearnableSkill(CustomSkill.PourfendeurDeMages, "Pourfendeur de Mages", "+1 Force ou Dextéritié (max 20)\n\nVous avez pratiqué des techniques utiles afin de contrer les lanceurs de sorts au corps à corps. Vous bénéficiez des effets ci-dessous\n- Quand une créature dont vous êtes au contact lance un sort, vous utilisez automatiquement votre réaction pour effectuer une attaque au corps à corps avec une arme contre cette créature (si vous avez une réaction disponible)\nSi vous touchez une créature qui se concentre sur un sort, cette créature a un désavantage à son jet de sauvegarde pour maintenir sa concentration\n- Vous avez un avantage aux jets de sauvegarde contre les sorts lancés par les créatures dont vous êtes au contact", Category.Feat, "is_MageSlayer", 1, 5, Ability.Dexterity, Ability.Strength, LearnPourfendeurDeMages));
      learnableDictionary.Add(CustomSkill.Mobile, new LearnableSkill(CustomSkill.Mobile, "Mobile", "Vous êtes exceptionnellement rapide. Vous bénéficiez des effets ci-dessous\n- +30% de vitesse de déplacement\nLorsque vous utilisez l'action Sprinter, vous n'êtes pas ralenti par les terrains difficiles\n- Après avoir effectué une attaque de mêlée contre une créature, celle-ci ne peut plus vous infliger d'attaque d'opportunité pendant 1 round", Category.Feat, "is_Mobile", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnMobile));
      learnableDictionary.Add(CustomSkill.Resilient, new LearnableSkill(CustomSkill.Resilient, "Résilient", "Choisissez une caractéristique dont vous ne maîtrisez pas les jets de sauvegarde. Vous gagnez +1 (max 20) et en maîtrisez les jets de sauvegardes", Category.Feat, "is_Resilient", 1, 5, Ability.Constitution, Ability.Charisma, OnLearnResilient));
      learnableDictionary.Add(CustomSkill.HastMaster, new LearnableSkill(CustomSkill.HastMaster, "Maître d'Hast", "+1 Force ou Dextérité (max 20)\n\nLes armes à allonge vous permettent de tenir vos ennemis à distance. Vous bénéficiez des effets ci-dessous\n- Lorsque vous attaquez avec une hallebarde, un bâton ou une lance, vous effectuez une attaque supplémentaire avec l'extrémité opposée de l'arme (1x par round, 1d4 + force ou dextérité contondant)\n- Lorsque vous portez une hallebarde un bâton ou une lance, vous effectuez une attaque d'opportunité lorsqu'une créature entre à portée de votre allonge", Category.Feat, "is_SavageAg", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnMaitreDHast));
      learnableDictionary.Add(CustomSkill.Sentinelle, new LearnableSkill(CustomSkill.Sentinelle, "Sentinelle", "+1 Force ou Dextérité (max 20)\n\nVous maîtrisez des techniques qui tirent avantage des faiblesses de la garde de vos ennemis et bénéficiez des effets ci-dessous\n- Lorsque vous touchez une créature avec une attaque d'opportunité, la vitesse de la créature est réduite à 0 pour un round\n- Vous pouvez effectuer une attaque d'opportunité même contre les créatures qui utilisent l'action Désengagement\n- Quand une créature hostile à portée de mêlée attaque une cible alliée et si cet allié ne dispose pas du don sentinelle, vous utilisez automatiquement votre réaction pour effectuer une attaque d'opportunité contre la créature avec une arme de mêlée\n- Vous avez l'avantage sur vos attaques d'opportunité", Category.Feat, "is_Sentinelle", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnSentinelle));
      learnableDictionary.Add(CustomSkill.TireurDelite, new LearnableSkill(CustomSkill.TireurDelite, "Tireur d'Elite", "+1 Dextérité (max 20)\n\nVous êtes un maître du combat à distance et êtes capables de prouesses que d'aucuns penseraient impossible. Vous obtenez les effets ci-dessous\n- Vous n'êtes pas désavantagé lorsque vous tirez au-delà de la capacité optimale de votre arme\n- Vous n'êtes pas désavantagé lorsque vous tirez sur une cible en hauteur\n- Lorsque vous attaquez avec une arme à distance que vous maîtrisez, ajoutez votre bonus de maîtrise aux dégâts", Category.Feat, "is_Sentinelle", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnTireurDelite));
      learnableDictionary.Add(CustomSkill.MageDeGuerre, new LearnableSkill(CustomSkill.MageDeGuerre, "Mage de guerre", "+1 Intelligence, Sagesse ou Charisme (max 20)\n\nVotre pratique de l'incantation en combat, vous permet de bénéficier des effets ci-dessous\n- Avantage sur les jets de sauvegarde de Constitution pour maintenir votre concentration\n- Vous pouvez effectuer les composantes somatiques d'un sort même si vous avez des armes ou un bouclier dans les mains\n- Si ce don est activé, lorsque vous avez la possibilité d'effectuer une attaque d'opportunité, au lieu de frapper avec votre arme vous lancez le sort décharge électrique sur la cible", Category.Feat, "is_WarMage", 1, 5, Ability.Charisma, Ability.Constitution, OnLearnMageDeGuerre));
      learnableDictionary.Add(CustomSkill.Broyeur, new LearnableSkill(CustomSkill.Broyeur, "Broyeur", "Vous êtes maître dans l'art d'écraser vos ennemis, ce qui vous confère les effets ci-dessous\n- +1 Force ou Constitution (max 20)\n- Diminue de 1 le jet nécessaire pour effectuer un critique avec les armes de mêlée contondante. Effet cumulable\n- Si vous infligez un critique avec une arme contondante, vous avez un avantage aux jets d'attaque jusqu'au début de votre prochain tour", Category.Feat, "is_Broyeur", 1, 5, Ability.Strength, Ability.Constitution, OnLearnBroyeur));
      learnableDictionary.Add(CustomSkill.ConstitutionInfernale, new LearnableSkill(CustomSkill.ConstitutionInfernale, "Constitution Infernale", "Prérequis : Tiefflin\n\nVotre héritage diabolique se manifeste de façon particulièrement puissante. Vous obtenez les effets ci-dessous\n- +1 Constitution (max 20)\n- Résistance aux dégâts de froid et de poison\n- Avantage aux jets de sauvegarde contre l'empoisonnement", Category.Feat, "race_tiefling", 1, 5, Ability.Constitution, Ability.Strength, OnLearnConstitutionInfernale, racePrerequiste: new() { CustomRace.InfernalThiefling, CustomRace.AbyssalThiefling, CustomRace.ChtonicThiefling }));
      learnableDictionary.Add(CustomSkill.FureurOrc, new LearnableSkill(CustomSkill.FureurOrc, "Fureur Orc", "Prérequis : Demi-Orc\n\nVotre furie brûle sans relâche. Vous gagnez les avantages ci-dessous\n- +1 Force ou Constitution (max 20)\n- Une fois par repos court, quand vous frappez avec une arme de mêlée, vous lancez un dé de dégâts supplémentaire\n- Lorsque votre don d'Endurance s'active et que vous êtes en train d'attaquer, vous utilisez votre réaction pour infliger une attaque supplémentaire", Category.Feat, "is_FureurOrc", 1, 5, Ability.Strength, Ability.Constitution, OnLearnFureurOrc, racePrerequiste: new() { CustomRace.HalfOrc }, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.Pourfendeur, new LearnableSkill(CustomSkill.Pourfendeur, "Pourfendeur", "Vous savez où trancher pour obtenir les meilleurs résultats, ce qui vous confère les effets suivants\n- +1 Force ou Constitution (max 20)\n- Une fois par round, lorsque vous infligez des dégâts tranchants, la vitesse de la cible est réduite de 30% pendant 1 round\n- Si vous infligez un critique sur des dégâts tranchants, la cible subit un désavantage à tous ses jets d'attaque pendant un round", Category.Feat, "is_Slayer", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnPourfendeur));
      learnableDictionary.Add(CustomSkill.Empaleur, new LearnableSkill(CustomSkill.Empaleur, "Empaleur", "Vos attaques perforantes sont d'une précision telle que vous obtenez les effets ci-dessous\n- +1 Force ou Dextérité (max 20)\n- Une fois par round, si vous faites 2- sur un dé de dégâts perforant, lorsque vous touchez une créature avec une attaque qui inflige des dégâts perforants, vous relancez le dé et conservez le résultat\n- Lorsque vous infligez un coup critique qui inflige des dégâts perforants, vous lancez un dé de dégâts supplémentaire", Category.Feat, "is_Empaleur", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnEmpaleur));
      learnableDictionary.Add(CustomSkill.EspritVif, new LearnableSkill(CustomSkill.EspritVif, "Esprit Vif", "+1 Intelligence (max 20)\n\n- Choisissez la maîtrise d'une compétence parmi  Arcanes, Histoire, Investigation, Nature ou Religion. Si vous la maîtrisez déjà, vous en obtenez l'expertise", Category.Feat, "is_EspritVif", 1, 5, Ability.Intelligence, Ability.Wisdom, OnLearnEspritVif));
      learnableDictionary.Add(CustomSkill.Observateur, new LearnableSkill(CustomSkill.Observateur, "Observateur", "+1 Intelligence ou Sagesse (max 20)\n\nVous remarquez des détails dans votre environnement qui échappent à d'autres. Vous obtenez les effets suivants\n- Vous pouvez lire sur les lèvres à partir du moment où vous maitrisez la langue\n- Choisissez une maîtrise parmi Intuition, Investigation ou Perception. Si vous la maîtrisez déjà, obtenez en l'expertise", Category.Feat, "is_Observant", 1, 5, Ability.Wisdom, Ability.Intelligence, OnLearnObservateur));
      learnableDictionary.Add(CustomSkill.MartialInitiate, new LearnableSkill(CustomSkill.MartialInitiate, "Initié Martial", "Votre entraînement martial vous a permis de développer un style particulier de combat.\n\nChoisissez un style de combat de votre choix de la liste des styles de guerrier. Vous ne pouvez pas choisir un style que vous connaissez déjà.\n\nChaque fois que vous pouvez choisir un nouveau don, vous pouvez également choisir de changer votre style de combat.", Category.Feat, "is_MartialIni", 1, 5, Ability.Wisdom, Ability.Intelligence, OnLearnMartialInitiate));
      learnableDictionary.Add(CustomSkill.CreateurMerveilleux, new LearnableSkill(CustomSkill.CreateurMerveilleux, "Créateur Merveilleux", "Prérequis : Gnome\n\nVous maîtrisez les techniques de bricolage de votre peuple. Vous gagnes les effets ci-dessous\n- +1 Dextérité ou Intelligence (max 20)\n- Lorsque vous fabriquez des gadgets, vous allez un cran plus loin que les autres et bénéficiez d'un effet supplémentaire sur celui-ci\n\n(Effet à déterminer avec votre MJ, le système artisanal de création de gadget n'étant pas encore en place)", Category.Feat, "is_CreateurMerv", 1, 5, Ability.Intelligence, Ability.Dexterity, OnLearnCreateurMerveilleux, racePrerequiste: new() { CustomRace.RockGnome }));
      learnableDictionary.Add(CustomSkill.LameDoutretombe, new LearnableSkill(CustomSkill.LameDoutretombe, "Lame d'outretombe", "Prérequis : Elfe\n\nVous êtes le descendant d'un maître de la double-lame. Une partie de cette maîtrise a pu vous être inculquée. Vous gagnez les effets ci-dessous\n- +1 Dextérité ou Force (max 20)\n- Lorsque vous maniez une double-lame, vous gagnez +1 à la CA\n- Lorsque vous maniez une double-lame, l'arme est considérée comme ayant la propriété Finesse\n- Vous obtenez les bases d'apprentissage de la maîtrise de la double-lame\n- L'apprentissage de la maîtrise de la double-lame est 25 % plus rapide", Category.Feat, "is_LameDoutre", 1, 5, Ability.Dexterity, Ability.Strength, OnLearnLameDoutretombe, racePrerequiste: new() { CustomRace.Elf, CustomRace.HalfElf, CustomRace.WoodHalfElf, CustomRace.WoodElf, CustomRace.DrowHalfElf, CustomRace.Drow, CustomRace.HighHalfElf, CustomRace.HighElf }));
      learnableDictionary.Add(CustomSkill.Prodige, new LearnableSkill(CustomSkill.Prodige, "Prodige", "Prérequis : Humain, Demi-Elfe, Demi-Orc\n\nVotre attrait pour apprendre des nouveautés est indéniable. Vous bénéficiez des effets ci-dessous\n- L'apprentissage de maîtrise de compétence est 25 % plus rapide\n- L'apprentissage d'expertise de compétence est 25 % plus rapide\n- Apprendre une langue est 25 % plus rapide", Category.Feat, "is_Prodige", 1, 5, Ability.Intelligence, Ability.Wisdom, OnLearnProdige, racePrerequiste: new() { CustomRace.HalfOrc, CustomRace.Human, CustomRace.HalfElf, CustomRace.HighHalfElf, CustomRace.DrowHalfElf, CustomRace.WoodHalfElf }));
      learnableDictionary.Add(CustomSkill.FlammesDePhlegetos, new LearnableSkill(CustomSkill.FlammesDePhlegetos, "Flammes de Phlegetos", "Prérequis : Tieffelin\n\nVous êtes capables de mettre les feux de l'enfer à votre service. Vous bénéficiez des effets ci-dessous.\n- +1 Intelligence ou Charisme (max 20)\n- Lorsque vous faites un 1 sur un jet de dégâts pour infliger des dégâts de feu, vous pouvez relancer le dé et devez utiliser le nouveau résultat quel qu'il soit\n-  Lorsque vous lancez un sort qui inflige des dégâts de feu, vous êtes entouré d'un bouclier de flammes pour un round. Ces flammes infligent 1d4 dégâts de feu à toutes les créatures qui vous touchent avec une attaque de mêlée", Category.Feat, "is_Phlegetos", 1, 5, Ability.Charisma, Ability.Intelligence, OnLearnFlammesDePhlegetos, racePrerequiste: new() { CustomRace.InfernalThiefling, CustomRace.AbyssalThiefling, CustomRace.ChtonicThiefling }));
      learnableDictionary.Add(CustomSkill.AmiDeToutLeMonde, new LearnableSkill(CustomSkill.AmiDeToutLeMonde, "L'ami de tout le monde", "Prérequis : Demi-Elfe\n\nVous avez une personnalité magnétique, ce qui facilite nettement vos relations avec les autres. Vous gagnez les effets ci-dessous\n- +1 Charisme (max 20)\n- Maîtrise de Tromperie et Persuasion. Si vous maîtrisez déjà ces compétences, vous en gagnez l'expertise", Category.Feat, "ife_X2EpicRepu", 1, 5, Ability.Charisma, Ability.Intelligence, OnLearnAmiDeToutLeMonde, racePrerequiste: new() { CustomRace.HalfElf, CustomRace.DrowHalfElf, CustomRace.WoodHalfElf, CustomRace.HighHalfElf }));
      learnableDictionary.Add(CustomSkill.Expert, new LearnableSkill(CustomSkill.Expert, "Expert", "Vous avez perfectionné votre maîtrise avec des compétences particulières. Vous bénéficiez des effets ci-dessous\n- +1 à la caractéristique de votre choix (max 20)\n- L'apprentissage de maîtrise de compétence est 25 % plus rapide\n- L'apprentissage d'expertise de compétence est 25 % plus rapide", Category.Feat, "ife_X1Expert", 1, 5, Ability.Intelligence, Ability.Constitution, OnLearnExpert));
      learnableDictionary.Add(CustomSkill.Linguiste, new LearnableSkill(CustomSkill.Linguiste, "Linguiste", "Vous avez étudié les langues et les codes, vous bénéficiez des effets ci-dessous\n- +1 Intelligence (max 20)\n- Vous apprenez les langues deux fois plus rapidement\n- Vous êtes capables de créer des codes écrits. Les autres sont incapables de déchiffrer vos codes, à moins que vous ne leur appreniez, qu'ils ne réussissent un jet d'intelligence (DD votre modificateur d'intelligence + bonus de maîtrise) ou qu'ils ne fassent appel à la magie", Category.Feat, "is_Linguiste", 1, 5, Ability.Intelligence, Ability.Wisdom, OnLearnLinguiste));
      learnableDictionary.Add(CustomSkill.MeneurExaltant, new LearnableSkill(CustomSkill.MeneurExaltant, "Meneur Exaltant", "- +1 Sagesse ou Charisme (max 20)\n- 1 fois par repos court, vous pouvez choisir 6 alliés (vous y compris) à moins de 9 mètres de vous et les inspirer, ce qui les fait bénéficier d'un nombre de points de vies temporaires égal à votre niveau + votre modificateur de Charisme", Category.Feat, "ife_X1HDenier", 1, 5, Ability.Charisma, Ability.Wisdom, OnLearnMeneurExaltant, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.AgressionOrc, new LearnableSkill(CustomSkill.AgressionOrc, "Agression", "Prérequis : Demi-Orc\n\nAction bonus\n\nVous sprintez vers votre cible pendant un round. Vous ne pouvez pas effectuer d'autre action ou changer de direction pendant ce round\n\n+1 Force ou Dextérité (max 20)", Category.Feat, "is_OrcFury", 1, 5, Ability.Strength, Ability.Constitution, OnLearnAgressionOrc, racePrerequiste: new() { CustomRace.HalfOrc }));
      learnableDictionary.Add(CustomSkill.Determination, new LearnableSkill(CustomSkill.Determination, "Détermination", "Prérequis : Humain\n\nVous êtes empli d'une détermination telle que des hauteurs inatteignables pour d'autres sont à votre portée. Vous obtenez les effets ci-dessous\n- +1 a une caractéristique de votre choix (max 20)\n- Une fois par repos court, vous pouvez choisir d'effectuer un jet avec avantage (principalement utilisable en animation pour le moment)", Category.Feat, "is_Determination", 1, 5, Ability.Constitution, Ability.Charisma, OnLearnDetermination, racePrerequiste: new() { CustomRace.Human }, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.MaitreDarme, new LearnableSkill(CustomSkill.MaitreDarme, "Maître d'armes", "- +1 Force ou Dextérité (max 20)\n- Vous obtenez les bases de la maîtrise de quatre armes simples ou martiales au choix\n- Vous apprenez à maîtriser les armes 50 % plus rapidement", Category.Feat, "is_MaitreDarme", 1, 5, Ability.Intelligence, Ability.Constitution, OnLearnMaitreDarme));
      learnableDictionary.Add(CustomSkill.PrecisionElfique, new LearnableSkill(CustomSkill.PrecisionElfique, "Précision elfique", "Prérequis : Elfe, Demi-Elfe\n\n- +1 Dextérité, Intelligence, Sagesse ou Charisme (max 20)\n- Lorsque vous avez un avantage sur un jet d'attaque utilisant la dextérité, l'intelligence, la sagesse ou le charisme, vous relancez le dé une fois de plus et prenez le meilleur résultat", Category.Feat, "is_ElvenAccuracy", 1, 5, Ability.Dexterity, Ability.Charisma, OnLearnPrecisionElfique, racePrerequiste: new() { CustomRace.Elf, CustomRace.HalfElf, CustomRace.WoodHalfElf, CustomRace.WoodElf, CustomRace.DrowHalfElf, CustomRace.Drow, CustomRace.HighHalfElf, CustomRace.HighElf }));
      learnableDictionary.Add(CustomSkill.SecondeChance, new LearnableSkill(CustomSkill.SecondeChance, "Seconde Chance", "Prérequis : Halfelin\n\nLa chance vous sourit lorsque quelqu'un tente de vous frapper. Vous bénéficiez des effets ci-dessous\n+1 Dextérité, Constitution ou Charisme (max 20)\n- Lorsqu'une créature vous inflige un coup critique, vous forcez cette créature à relancer son jet d'attaque\n\nVous ne pouvez utiliser cette capacité qu'une seule fois par combat (nécessite le lancer d'un nouveau jet d'initiative).", Category.Feat, "is_SecondChance", 1, 5, Ability.Charisma, Ability.Dexterity, OnLearnSecondeChance, racePrerequiste: new() { CustomRace.Halfling, CustomRace.Halfelin }));
      learnableDictionary.Add(CustomSkill.ChanceDebordante, new LearnableSkill(CustomSkill.ChanceDebordante, "Chance Débordante", "Prérequis : Halfelin\n\nVotre chance naturelle s'étend bien au-delà de votre simple personne.\n\nSi n'importe quel allié à moins de 9 m de vous obtient un 1 naturel sur un d20, cet allié relance son dé.\n\nPendant un round, vous ne pouvez alors plus utiliser votre propre trait racial Chanceux et l'allié en question ne peut plus être affecté par Chance Débordante ou Chanceux, quelle qu'en soit la source\n\n+1 Dextérité, Constitution ou Charisme (max 20)", Category.Feat, "is_BountifulLuck", 1, 5, Ability.Charisma, Ability.Dexterity, OnLearnChanceDebordante, racePrerequiste: new() { CustomRace.Halfling, CustomRace.Halfelin }));
      learnableDictionary.Add(CustomSkill.VigueurNaine, new LearnableSkill(CustomSkill.VigueurNaine, "Vigueur Naine", "Prérequis : Nain\n\nLe sang des héros nains coule dans vos veines. Vous bénéficiez des effets ci-dessous\n- +1 Constitution (max 20)\n- Lorsque vous utilisez l'action Esquiver en combat, vous dépensez un dé de vie (+ CON mod) pour vous soigner (minimum 1)\n- Les dés de vie correspondent aux dés utilisés par vos classes lors de la montée de niveau. Par exemple, si vous êtes Barbare 1, mage 4, vous disposez de 1d12 et 4d6 dés de vie\n- Ces dés sont tirés au hasard lorsque vous utilisez Vigueur Naine et ne peuvent plus être retirés une fois utilisés\n- Ces dés sont récupérés après chaque repos court", Category.Feat, "is_DwarfVigor", 1, 5, Ability.Constitution, Ability.Strength, OnLearnVigueurNaine, racePrerequiste: new() { CustomRace.Dwarf, CustomRace.GoldDwarf, CustomRace.Duergar }, restoreOnShortRest: true));

      // RACES
      // HUMAN

      learnableDictionary.Add(CustomSkill.InspirationHeroique, new LearnableSkill(CustomSkill.InspirationHeroique, "Inspiration Héroïque", "Votre prochain jet de dés dispose d'un avantage.", Category.Race, "is_HeroicInspi", 1, 1, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.HumanVersatility, new LearnableSkill(CustomSkill.HumanVersatility, "Versatile", "Les humains sont caractérisé par leur rapidité à s'adapter à leur environnement. Ils bénéficient des avantages suivants:\n- Maîtrise d'une compétence supplémentaire\n- Gain d'un don d'origine supplémentaire\n- Gain d'une inspiration héroïque à chaque repos long", Category.Race, "race_human", 1, 1, Ability.Constitution, Ability.Strength));

      // AASIMAR

      learnableDictionary.Add(CustomSkill.AilesAngeliques, new LearnableSkill(CustomSkill.AilesAngeliques, "Ailes Angéliques", "Vous pouvez faire apparaître et disparaître à volonté une paire d'ailes spectrales dans votre dos", Category.Race, "is_AngelicWings", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MainsGuerisseuses, new LearnableSkill(CustomSkill.MainsGuerisseuses, "Mains Guérisseuses", "Une fois par repos long, vous pouvez rendre des points de vie à une créature pour une valeur équivalente à votre bonus de maîtrise * d4", Category.Race, "is_HealHands", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RevelationCeleste, new LearnableSkill(CustomSkill.RevelationCeleste, "Révelation Céleste", "Une fois par repos long, vous pouvez bénéficier d'une des transformations ci-dessous pendant 1 minute\n- Vol : Vos ailes se renforcent et vous permettent de disposer d'une vitesse de vol égale à votre vitesse de déplacement\n- Rayonnement Intérieur : Une lumière calcinante irradie de vos yeux et de votre bouche. Chaque round, les créatures ennemies à portée de mêlée subissent l'équivalent de votre bonus de maîtrise en dégâts radiants\n- Voile Nécrotique : Vos yeux deviennent des puits de ténèbres. Chaque round, les créatures ennemies à portée de mêlée doivent réussir un jet de sauvegarde de charisme ou subir l'Effroi pendant 1 round ", Category.Race, "is_RevelCeleste", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));

      // EXPERTISES D'ARMES

      learnableDictionary.Add(CustomSkill.ExpertiseEraflure, new LearnableSkill(CustomSkill.ExpertiseEraflure, "Eraflure", "Si votre jet d'attaque avec cette arme échoue, vous infligez tout de même des dégâts équivalents au modificateur de caractéristique avec lequel l'attaque a été effectuée\n\nArmes Concernées\n- Fléau Léger et Lourd\n- Morgenstern\n- Masse et Masse Double\n- Marteau Léger et de Guerre", Category.Fight, "is_Eraflure", 1, 1, Ability.Strength, Ability.Constitution, OnLearnEraflure));
      learnableDictionary.Add(CustomSkill.ExpertiseCommotion, new LearnableSkill(CustomSkill.ExpertiseCommotion, "Commotion", "La cible doit réussir un jet de sauvegarde de Constitution ou subir l'Hébétement\n\nArmes Concernées\n- Fléau Léger\n- Marteau Léger et de Guerre\n- Masse et Double Masse\n- Morgenstern\n- Gourdin\n- Fronde", Category.Fight, "is_Commotion", 1, 1, Ability.Strength, Ability.Constitution, OnLearnCommotion));
      learnableDictionary.Add(CustomSkill.ExpertiseAffaiblissement, new LearnableSkill(CustomSkill.ExpertiseAffaiblissement, "Affaiblissement", "La cible subit un désavantage sur son prochain jet d'attaque effectué avant la fin du prochain round\n\nArmes Concernées\n- Fléau Léger et Lourd\n- Gourdin\n- Rapière\n- Fouet\n- Fronde", Category.Fight, "Affaiblissement", 1, 1, Ability.Strength, Ability.Dexterity, OnLearnAffaiblissement));
      learnableDictionary.Add(CustomSkill.ExpertiseArretCardiaque, new LearnableSkill(CustomSkill.ExpertiseArretCardiaque, "Arrêt Cardiaque", "La créature ciblée doit réussir un jet de sauvegarde de Constitution ou subir les effets de Lenteur et un désavantage sur ses jets de Constitution pendant 2 rounds\n- L'effet est retiré dès que la créature reçoit des soins\n- N'affecte pas les morts-vivants ni les créatures artificielles\n\nArmes Concernées\n- Fléau Lourd\n- Gourdin\n- Masse\n- Morgenstern", Category.Fight, "ArretCardiaque", 1, 1, Ability.Strength, Ability.Constitution, OnLearnArretCardiaque));
      learnableDictionary.Add(CustomSkill.ExpertiseTranspercer, new LearnableSkill(CustomSkill.ExpertiseTranspercer, "Transpercer", "La cible cible doit réussir un jet de sauvegarde de Constitution ou se voir infliger 2 dégâts supplémentaires sur les attaques qui portent pendant 2 rounds\n- L'effet est retiré dès que la créature reçoit des soins\n\nArmes Concernées\n- Dague\n- Lance\n- Rapière\n- Epée Courte", Category.Fight, "is_Transpercer", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnTranspercer));
      learnableDictionary.Add(CustomSkill.ExpertiseMoulinet, new LearnableSkill(CustomSkill.ExpertiseMoulinet, "Moulinet", "La cible doit réussir un jet de sauvegarde de Dextérité ou subir un désavantage sur ses jets de force et de dextérité. Toutes les attaques qui la ciblent ont l'avantage pendant 2 rounds\n\nArmes Concernées\n- Rapière\n- Cimeterre\n- Epée Courte\n- Dague\n- Kama\n- Kukri\n- Serpe", Category.Fight, "is_Moulinet", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnMoulinet));
      learnableDictionary.Add(CustomSkill.ExpertiseLaceration, new LearnableSkill(CustomSkill.ExpertiseLaceration, "Lacération", "La cible doit réussir un jet de sauvegarde de Constitution ou subir un désavantage sur ses jets de sauvegarde de Constitution ainsi que 2 dégâts tranchants à chaque tour pendant 2 tours\n- L'effet est supprimé dès que la créature reçoit des soins\n\nArmes Concernées\n- Lame Double\n- Epée Bâtarde\n- Epée à deux mains\n- Katana\n- Epée Longue\n- Cimeterre\n- Kama\n- Kukri\n- Serpe", Category.Fight, "is_Lacerer", 1, 1, Ability.Dexterity, Ability.Strength, OnLearnLaceration));
      learnableDictionary.Add(CustomSkill.ExpertiseMutilation, new LearnableSkill(CustomSkill.ExpertiseMutilation, "Mutilation", "La cible doit réussir un JDS de Constitution ou subir un désavantage sur les JDS de Dextérité et voir sa vitesse réduite à 0 pendant 2 rounds\n- L'effet est supprimé dès que la créature reçoit des soins\n\nArmes Concernées\n- Hachette\n- Hache de Guerre\n- Grande Hache\n- Hache Double\n- Hache Naine\n- Faux", Category.Fight, "is_Mutiler", 1, 1, Ability.Strength, Ability.Constitution, OnLearnMutilation));
      learnableDictionary.Add(CustomSkill.ExpertiseFendre, new LearnableSkill(CustomSkill.ExpertiseFendre, "Fendre", "Votre prochaine attaque touche également deux ennemis situés à moins de 1,5 m de la cible initiale. Les dégâts infligés sont divisés par 2\n\nArmes Concernées\n- Lame Double\n- Epée à deux mains\n- Hache de Guerre\n- Grande Hache\n- Hache Double\n- Hache Naine\n- Hallebarde\n- Faux", Category.Fight, "is_Fendre", 1, 1, Ability.Strength, Ability.Constitution, OnLearnFendre));
      learnableDictionary.Add(CustomSkill.ExpertiseCharge, new LearnableSkill(CustomSkill.ExpertiseCharge, "Charge", "Vous vous déplacez 2 fois plus rapidement pendant 1 round. La cible de votre prochaine attaque doit réussir un JDS de Force ou subir un désavantage sur ses JDS de Force et de Dextérité et toutes les attaques qui la ciblent ont l'avantage pendant 2 rounds\n\nArmes Concernées\n- Epée Bâtarde\n- Katana\n- Epée Longue\n- Lance\n- Hallebarde", Category.Fight, "is_Charge", 1, 1, Ability.Strength, Ability.Constitution, OnLearnCharge));
      learnableDictionary.Add(CustomSkill.ExpertiseFrappeDuPommeau, new LearnableSkill(CustomSkill.ExpertiseFrappeDuPommeau, "Frappe du Pommeau", "La cible doit réussir un JDS de Constitution ou subir l'Hébétement (Désavantage sur les JDS de Sagesse et perte de la Dextérité à la CA)\n\nArmes Concernées\n- Epée Bâtarde\n- Epée à deux mains\n- Epée Longue", Category.Fight, "is_Pommeau", 1, 1, Ability.Strength, Ability.Constitution, OnLearnFrappeDuPommeau));
      learnableDictionary.Add(CustomSkill.ExpertiseDesarmement, new LearnableSkill(CustomSkill.ExpertiseDesarmement, "Désarmement", "La cible doit réussir un JDS de Force ou se voir désarmée pour 2 rounds (son arme est déséquipée et elle ne peut pas la rééquiper)\n\nArmes Concernées\n- Fouet", Category.Fight, "is_ExpDisarm", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnDesarmement));
      learnableDictionary.Add(CustomSkill.ExpertiseBriseEchine, new LearnableSkill(CustomSkill.ExpertiseBriseEchine, "Brise-Echine", "La cible doit réussir un JDS de Constitution ou être Déstabilisée pendant 2 rounds\n\nArmes Concernées\n- Marteau de Guerre\n- Masse Double", Category.Fight, "is_BriseEchine", 1, 1, Ability.Strength, Ability.Constitution, OnLearnBriseEchine));
      learnableDictionary.Add(CustomSkill.ExpertiseRenforcement, new LearnableSkill(CustomSkill.ExpertiseRenforcement, "Renforcement", "Vous êtes ralenti de 75 %. Pendant 1 round, les jets de dégâts de vos attaques de mêlée sont jetés deux fois. Vous utilisez le meilleur résultat\n\nArmes Concernées\n- Lance\n- Hallebarde\n- Double Lame", Category.Fight, "is_Renforce", 1, 1, Ability.Strength, Ability.Constitution, OnLearnRenforcement));
      learnableDictionary.Add(CustomSkill.ExpertisePreparation, new LearnableSkill(CustomSkill.ExpertisePreparation, "Préparation", "Vous êtes ralenti de 75 % pendant 1 round. Vous ajoutez une deuxième fois votre modificateur de force à vos dégâts d'attaque\n\nArmes Concernées\n- Grande Hache\n- Hachette\n- Hache de Guerre\n- Double Hache\n- Hache Naine\n- Katana\n- Faux", Category.Fight, "is_Prepare", 1, 1, Ability.Strength, Ability.Constitution, OnLearnPreparation));
      learnableDictionary.Add(CustomSkill.ExpertiseTirPercant, new LearnableSkill(CustomSkill.ExpertiseTirPercant, "Tir Perçant", "La cible cible doit réussir un jet de sauvegarde de Constitution ou se voir infliger 2 dégâts supplémentaires sur les attaques qui portent pendant 2 rounds\n- L'effet est retiré dès que la créature ciblée reçoit des soins\n\nArmes Concernées\n- Arbalète de Poing\n- Arbalète Légère\n- Arbalète Lourde", Category.Fight, "is_TirPercant", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnTirPercant));
      learnableDictionary.Add(CustomSkill.ExpertiseAttaqueMobile, new LearnableSkill(CustomSkill.ExpertiseAttaqueMobile, "Attaque Mobile", "Après avoir utilisé Sprint ou Désengagement, vous bénéficiez d'une attaque supplémentaire\n\nArmes Concernées\n- Arbalète de Poing\n- Fronde\n- Dards\n- Hache de Lancer", Category.Fight, "is_AttaqueMobile", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ExpertiseStabilisation, new LearnableSkill(CustomSkill.ExpertiseStabilisation, "Stabilisation", "Vous êtes ralenti de 75 % pendant un round et lorsque vous infligez des dégâts avec une arme à distance, vous jetez deux fois les dés et utilisez le meilleur résultat\n\nArmes Concernées\n- Arbalète Lourde\n- Arc Long\n- Hache de Lancer", Category.Fight, "is_Stabilisation", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnStabilisation));
      learnableDictionary.Add(CustomSkill.ExpertiseCoupeJarret, new LearnableSkill(CustomSkill.ExpertiseCoupeJarret, "Coupe-Jarret", "La cible doit réussir un JDS de Constitution ou être ralentie de 50 %\n- L'effet prend fin dès que la créature reçoit des soins\n\nArmes Concernées\n- Arc Court\n- Arc Long\n- Dard\n- Hache de Lancer", Category.Fight, "is_CoupeJarret", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnCoupeJarret));
      learnableDictionary.Add(CustomSkill.ExpertiseDestabiliser, new LearnableSkill(CustomSkill.ExpertiseDestabiliser, "Déstabiliser", "La cible doit réussir un JDS de Dextérité ou être Déstabilisée pendant 2 rounds\n\nArmes Concernées\n- Bâton\n- Fouet", Category.Fight, "is_Destabiliser", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnDestabiliser));
      learnableDictionary.Add(CustomSkill.ExpertiseEntaille, new LearnableSkill(CustomSkill.ExpertiseEntaille, "Entaille", "La prochaine fois que vous effectuez une attaque avec une arme tenue dans votre main non directrice, effectuez une attaque supplémentaire\n\nArmes Concernées\n- Epée Courte\n- Dague\n- Hachette\n- Marteau Léger\n- Cimeterre\n- Kama\n- Kukri\n- Serpe", Category.Fight, "is_Entaille", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnEntaille));

      learnableDictionary.Add(CustomSkill.ExpertiseLance, new LearnableSkill(CustomSkill.ExpertiseLance, "Lance - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Renforcement, Charge et Transpercer)", Category.ExpertiseDarme, "ife_wepfoc_Spe", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseLance));
      learnableDictionary.Add(CustomSkill.ExpertiseEpeeLongue, new LearnableSkill(CustomSkill.ExpertiseEpeeLongue, "Epée longue - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Lacération, Charge et Frappe du Pommeau)", Category.ExpertiseDarme, "ife_wepfoc_LSw", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseEpeeLongue));
      learnableDictionary.Add(CustomSkill.ExpertiseEpeeCourte, new LearnableSkill(CustomSkill.ExpertiseEpeeCourte, "Epée courte - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Transpercer, Entaille et Moulinet)", Category.ExpertiseDarme, "ife_wepfoc_Ssw", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseEpeeCourte));
      learnableDictionary.Add(CustomSkill.ExpertiseArcLong, new LearnableSkill(CustomSkill.ExpertiseArcLong, "Arc long - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Stabilisation, Coupe-Jarret)", Category.ExpertiseDarme, "ife_wepfoc_Lbw", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseArcLong));
      learnableDictionary.Add(CustomSkill.ExpertiseArcCourt, new LearnableSkill(CustomSkill.ExpertiseArcCourt, "Arc court - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Coupe-Jarret)", Category.ExpertiseDarme, "ife_wepfoc_Sbw", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseArcCourt));
      learnableDictionary.Add(CustomSkill.ExpertiseRapiere, new LearnableSkill(CustomSkill.ExpertiseRapiere, "Rapière - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Transpercer, Affaiblissement, Moulinet)", Category.ExpertiseDarme, "ife_wepfoc_Rap", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseRapiere));
      learnableDictionary.Add(CustomSkill.ExpertiseMarteauLeger, new LearnableSkill(CustomSkill.ExpertiseMarteauLeger, "Marteau léger - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Commotion, Entaille, Eraflure)", Category.ExpertiseDarme, "ife_wepfoc_LHa", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseHallebarde));
      learnableDictionary.Add(CustomSkill.ExpertiseHachette, new LearnableSkill(CustomSkill.ExpertiseHachette, "Hachette - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Préparation, Mutilation, Entaille)", Category.ExpertiseDarme, "ife_wepfoc_Hax", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseHachette));
      learnableDictionary.Add(CustomSkill.ExpertiseHacheNaine, new LearnableSkill(CustomSkill.ExpertiseHacheNaine, "Hache naine - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Préparation, Mutilation, Fendre)", Category.ExpertiseDarme, "ife_X2WFDWAx", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseHacheNaine));
      learnableDictionary.Add(CustomSkill.ExpertiseShuriken, new LearnableSkill(CustomSkill.ExpertiseShuriken, "Arbalète de poing - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Attaque Mobile, Tir Perçant)", Category.ExpertiseDarme, "ife_wepfoc_Shu", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseShuriken));
      learnableDictionary.Add(CustomSkill.ExpertiseLameDouble, new LearnableSkill(CustomSkill.ExpertiseLameDouble, "Lame Double - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Lacération, Renforcement, Fendre)", Category.ExpertiseDarme, "ife_wepfoc_2sw", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseLameDouble));
      learnableDictionary.Add(CustomSkill.ExpertiseGourdin, new LearnableSkill(CustomSkill.ExpertiseGourdin, "Gourdin - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Commotion, Affaiblissement, Arrêt Cardiaque)", Category.ExpertiseDarme, "ife_wepfoc_Clu", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseGourdin));
      learnableDictionary.Add(CustomSkill.ExpertiseDague, new LearnableSkill(CustomSkill.ExpertiseDague, "Dague - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Transpercer, Entaille, Moulinet)", Category.ExpertiseDarme, "ife_wepfoc_Dag", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseDague));
      learnableDictionary.Add(CustomSkill.ExpertiseMasseLegere, new LearnableSkill(CustomSkill.ExpertiseMasseLegere, "Masse d'armes - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Commotion, Eraflure, Arrêt Cardiaque)", Category.ExpertiseDarme, "ife_wepfoc_Lma", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseMasseLegere));
      learnableDictionary.Add(CustomSkill.ExpertiseBaton, new LearnableSkill(CustomSkill.ExpertiseBaton, "Bâton - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Déstabiliser)", Category.ExpertiseDarme, "ife_wepfoc_Sta", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseLanceBaton));
      learnableDictionary.Add(CustomSkill.ExpertiseSerpe, new LearnableSkill(CustomSkill.ExpertiseSerpe, "Serpe - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Lacération, Entaille, Moulinet)", Category.ExpertiseDarme, "ife_wepfoc_Sic", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseSerpe));
      learnableDictionary.Add(CustomSkill.ExpertiseArbaleteLegere, new LearnableSkill(CustomSkill.ExpertiseArbaleteLegere, "Arbalète légère - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Tir Perçant)", Category.ExpertiseDarme, "ife_wepfoc_LXb", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseArbaleteLegere));
      learnableDictionary.Add(CustomSkill.ExpertiseDard, new LearnableSkill(CustomSkill.ExpertiseDard, "Dard - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Attaque Mobile, Coupe-Jarret)", Category.ExpertiseDarme, "ife_wepfoc_Dar", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseDard));
      learnableDictionary.Add(CustomSkill.ExpertiseFleauLeger, new LearnableSkill(CustomSkill.ExpertiseFleauLeger, "Fléau Léger - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Commotion, Eraflure, Affaiblissement)", Category.ExpertiseDarme, "ife_wepfoc_Lfl", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseFleauLeger));
      learnableDictionary.Add(CustomSkill.ExpertiseMorgenstern, new LearnableSkill(CustomSkill.ExpertiseMorgenstern, "Morgenstern - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Commotion, Eraflure, Arrêt Cardiaque)", Category.ExpertiseDarme, "ife_wepfoc_Mor", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseMorgenstern));
      learnableDictionary.Add(CustomSkill.ExpertiseFronde, new LearnableSkill(CustomSkill.ExpertiseFronde, "Fronde - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Attaque Mobile, Commotion, Affaiblissement)", Category.ExpertiseDarme, "ife_wepfoc_SLi", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseFronde));
      learnableDictionary.Add(CustomSkill.ExpertiseHacheDeGuerre, new LearnableSkill(CustomSkill.ExpertiseHacheDeGuerre, "Hache de Guerre - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Préparation, Mutilation, Fendre)", Category.ExpertiseDarme, "ife_wepfoc_Bax", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseHacheDeGuerre));
      learnableDictionary.Add(CustomSkill.ExpertiseHacheDarmes, new LearnableSkill(CustomSkill.ExpertiseHacheDarmes, "Hache d'Armes - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Préparation, Mutilation, Fendre)", Category.ExpertiseDarme, "ife_wepfoc_Gax", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseHacheDarmes));
      learnableDictionary.Add(CustomSkill.ExpertiseEspadon, new LearnableSkill(CustomSkill.ExpertiseEspadon, "Espadon - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Lacération, Frappe du Pommeau, Fendre)", Category.ExpertiseDarme, "ife_wepfoc_Gsw", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseEspadon));
      learnableDictionary.Add(CustomSkill.ExpertiseCimeterre, new LearnableSkill(CustomSkill.ExpertiseCimeterre, "Cimeterre - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Lacération, Entaille, Moulinet)", Category.ExpertiseDarme, "ife_wepfoc_Sci", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseCimeterre));
      learnableDictionary.Add(CustomSkill.ExpertiseHallebarde, new LearnableSkill(CustomSkill.ExpertiseHallebarde, "Hallebarde - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Renforcement, Charge, Fendre)", Category.ExpertiseDarme, "ife_wepfoc_Hal", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseHallebarde));
      learnableDictionary.Add(CustomSkill.ExpertiseFleauLourd, new LearnableSkill(CustomSkill.ExpertiseFleauLourd, "Fléau lourd - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Affaiblissement, Eraflure, Arrêt Cardiaque)", Category.ExpertiseDarme, "ife_wepfoc_Hfl", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseFleauLourd));
      learnableDictionary.Add(CustomSkill.ExpertiseHacheDeLancer, new LearnableSkill(CustomSkill.ExpertiseHacheDeLancer, "Hache de jet - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Attaque Mobile, Stabilisation, Coupe-Jarret)", Category.ExpertiseDarme, "ife_wepfoc_Tax", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseHacheDeLancer));
      learnableDictionary.Add(CustomSkill.ExpertiseMarteauDeGuerre, new LearnableSkill(CustomSkill.ExpertiseMarteauDeGuerre, "Marteau de guerre - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Commotion, Eraflure, Brise-Echine)", Category.ExpertiseDarme, "ife_wepfoc_Wha", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseMarteauDeGuerre));
      learnableDictionary.Add(CustomSkill.ExpertiseArbaleteLourde, new LearnableSkill(CustomSkill.ExpertiseArbaleteLourde, "Arbalète lourde - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Stabilisation, Tir Perçant)", Category.ExpertiseDarme, "ife_wepfoc_Hxb", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseArbaleteLourde));
      learnableDictionary.Add(CustomSkill.ExpertiseEpeeBatarde, new LearnableSkill(CustomSkill.ExpertiseEpeeBatarde, "Claymore - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Lacération, Frappe du Pommeau, Fendre)", Category.ExpertiseDarme, "ife_wepfoc_Bsw", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseEpeeBatarde));
      learnableDictionary.Add(CustomSkill.ExpertiseFaux, new LearnableSkill(CustomSkill.ExpertiseFaux, "Faux - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Préparation, Mutilation, Fendre)", Category.ExpertiseDarme, "ife_wepfoc_Scy", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseFaux));
      learnableDictionary.Add(CustomSkill.ExpertiseMasseDouble, new LearnableSkill(CustomSkill.ExpertiseMasseDouble, "Masse double - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Commotion, Eraflure, Brise-Echine)", Category.ExpertiseDarme, "ife_wepfoc_Dma", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseMasseDouble));
      learnableDictionary.Add(CustomSkill.ExpertiseHacheDouble, new LearnableSkill(CustomSkill.ExpertiseHacheDouble, "Hache double - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Préparation, Mutilation, Fendre)", Category.ExpertiseDarme, "ife_wepfoc_Dax", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseHacheDouble));
      learnableDictionary.Add(CustomSkill.ExpertiseKama, new LearnableSkill(CustomSkill.ExpertiseKama, "Kama - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Lacération, Entaille, Moulinet)", Category.ExpertiseDarme, "ife_wepfoc_Kam", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseKama));
      learnableDictionary.Add(CustomSkill.ExpertiseKatana, new LearnableSkill(CustomSkill.ExpertiseKatana, "Katana - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Lacération, Charge, Préparation)", Category.ExpertiseDarme, "ife_wepfoc_Kat", 1, 750, Ability.Constitution, Ability.Strength, OnLearnExpertiseKatana));
      learnableDictionary.Add(CustomSkill.ExpertiseKukri, new LearnableSkill(CustomSkill.ExpertiseKukri, "Kukri - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Lacération, Entaille, Moulinet)", Category.ExpertiseDarme, "ife_wepfoc_Kuk", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseKukri));
      learnableDictionary.Add(CustomSkill.ExpertiseFouet, new LearnableSkill(CustomSkill.ExpertiseFouet, "Fouet - Expertise", "Vous permet d'utiliser les attaques spéciales de ce type d'arme (Désarmement, Affaiblissement, Déstabiliser)", Category.ExpertiseDarme, "ife_X2WFWhip", 1, 750, Ability.Constitution, Ability.Dexterity, OnLearnExpertiseFouet));

      // CLASSES
      // FIGHTER

      learnableDictionary.Add(CustomSkill.Fighter, new LearnableSkill(CustomSkill.Fighter, "Guerrier", "", Category.Class, "fighter", 3, 1, Ability.Strength, Ability.Dexterity, Fighter.LevelUp, "14508VWlYNEYcZoXhO4vUo81s4AHbUOgJ6Rjh9nt86Ys"));
      learnableDictionary.Add(CustomSkill.FighterSecondWind, new LearnableSkill(CustomSkill.FighterSecondWind, "Second Souffle", "Action bonus\n- Vous récupérez 1d10 + niveau de guerrier points de vie\n- Vous récupérez une utilisation par repos court et toutes  vos utilisations sur repos long\n- Vous disposez de 2 utilisations au niveau 1, 3 au niveau 4, 4 au niveau 10", Category.Fight, "ief_SecondWind", 1, 1, Ability.Constitution, Ability.Strength, OnLearnSecondSouffle));
      learnableDictionary.Add(CustomSkill.FightingStyleArchery, new LearnableSkill(CustomSkill.FightingStyleArchery, "Style de combat - Archerie", "Bonus d'attaque de +2 pour toutes les attaques effectuées avec une arme à distance.", Category.FightingStyle, "ief_Archery", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FightingStyleCombatAveugle, new LearnableSkill(CustomSkill.FightingStyleCombatAveugle, "Style de combat - Combat Aveugle", "Vous ne souffrez pas de désavantage contre des ennemis sités à moins de 3 m et que vous ne pouvez pas voir", Category.FightingStyle, "ife_X1BliFig", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FightingStyleUnarmed, new LearnableSkill(CustomSkill.FightingStyleUnarmed, "Style de combat - Désarmé", "Lorsque vous infligez une attaque à mains nues, vous infligez 1d6 plus votre modificateur de force au lieu des dégâts habituels à mains nues. Si vous n'êtes équipé d'aucune arme ni bouclier, le d6 est remplacé par un d8", Category.FightingStyle, "ife_wepfoc_Una", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FightingStyleDefense, new LearnableSkill(CustomSkill.FightingStyleDefense, "Style de combat - Défense", "Bonus de +1 de CA tant que vous portez une armure ou un bouclier.", Category.FightingStyle, "ief_Defense", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FightingStyleDuel, new LearnableSkill(CustomSkill.FightingStyleDuel, "Style de combat - Duel", "Bonus de +2 dégâts lorsque vous utilisez une arme de mêlée à une main et que vous ne tenez pas d'arme dans votre autre main.\n\nNe fonctionne pas si vous utilisez une arme versatile en mode deux mains", Category.FightingStyle, "ief_Duel", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FightingStyleTwoHanded, new LearnableSkill(CustomSkill.FightingStyleTwoHanded, "Style de combat - Deux mains", "Si vous faites un 1 ou un 2 sur un jet de dégâts pour une attaque effectuée avec une arme à deux mains, vous le transformez en 3", Category.FightingStyle, "is_GreatWeapon", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FightingStyleProtection, new LearnableSkill(CustomSkill.FightingStyleProtection, "Style de combat - Protection", "Lorsque vous utilisez un bouclier, infligez un désavantage aux ennemis qui attaquent vos alliés situés à portée de mêlée.\n\nVous devez être en mesure de voir l'attaquant pour que l'effet s'applique.", Category.FightingStyle, "ief_Protection", 1, 1, Ability.Strength, Ability.Constitution, OnLearnProtectionStyle));
      learnableDictionary.Add(CustomSkill.FightingStyleDualWield, new LearnableSkill(CustomSkill.FightingStyleDualWield, "Style de combat - Deux armes", "Lorsque vous effectuez une attaque avec votre main secondaire, ajoutez votre modificateur de caractéristiques aux dégâts de l'attaque. Cette attaque n'utilise plus votre action bonus", Category.FightingStyle, "ief_TwoWeapon", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FightingStylePoidsPlume, new LearnableSkill(CustomSkill.FightingStylePoidsPlume, "Style de combat - Poids Plume", "Tant que vous ne portez pas d'armure intermédiaire ou lourde et que vous ne maniez pas d'arme ou des armes légères, votre vitesse de déplacement augmente de 30 % et bénéficiez de +1 aux dégâts de vos attaques", Category.FightingStyle, "is_StylePlume", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnPoidsPlumeStyle));
      learnableDictionary.Add(CustomSkill.FightingStyleArcherDeForce, new LearnableSkill(CustomSkill.FightingStyleArcherDeForce, "Style de combat - Archer de Force", "Vos attaques avec les arcs longs ou courts utilisent la Force au lieu de la Dextérité. Vous bénéficiez également d'un bonus de +1 aux dégâts avec ces armes", Category.FightingStyle, "is_StrongBow", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FightingStyleArmeDeJet, new LearnableSkill(CustomSkill.FightingStyleArmeDeJet, "Style de combat - Arme de Jet", "Vos dégâts avec des armes de jet bénéficient d'un bonus de +2", Category.FightingStyle, "is_ThrownStyle", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FighterSurge, new LearnableSkill(CustomSkill.FighterSurge, "Fougue Martiale", "Une fois par repos court, double votre nombre d'attaques de base. Vous obtenez une seconde utilisation au niveau 17", Category.Fight, "is_ActionSurge", 1, 2, Ability.Constitution, Ability.Strength, LearnActivableFeat, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.FighterAvantageTactique, new LearnableSkill(CustomSkill.FighterAvantageTactique, "Avantage Tactique", "Lorsque vous utilisez Second Souffle, vous vous déplacez 50 % plus rapidement pendant 1 round et ne provoquez pas d'attaque d'opportunité", Category.Fight, "ief_SecondWind", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FighterAttaquesEtudiees, new LearnableSkill(CustomSkill.FighterAttaquesEtudiees, "Attaques Étudiées", "Si vous échouez un jet d'attaque, vous avez l'avantage sur votre prochain jet d'attaque pendant 1 round", Category.MindBody, "ief_SecondWind", 1, 1, Ability.Constitution, Ability.Strength, OnLearnAttaquesEtudiees));
      learnableDictionary.Add(CustomSkill.FighterInflexible, new LearnableSkill(CustomSkill.FighterInflexible, "Inflexible", "Lorsque cette capacité est activée, le prochain jet de sauvegarde échoué est relancé. Vous ajoutez votre niveau de Guerrier au jet.\n\nUtilisable 1 fois par repos long. 2 fois au niveau 13, 3 au niveau 17", Category.Fight, "is_Inflexible", 1, 3, Ability.Strength, Ability.Wisdom, OnLearnInflexible));

      learnableDictionary.Add(CustomSkill.FighterChampion, new LearnableSkill(CustomSkill.FighterChampion, "Champion", "", Category.FighterSubClass, "champion", 20, 1, Ability.Strength, Ability.Dexterity, Fighter.LevelUp, "1Qw48sfNLCHaHY0VFvhkfdkBPjkBqldUD3yBd9OVUelE"));
      learnableDictionary.Add(CustomSkill.FighterChampionBonusCombatStyle, new LearnableSkill(CustomSkill.FighterChampionBonusCombatStyle, "Style de combat supplémentaire", "Vous maîtrisez un style de combat supplémentaire", Category.Fight, "champion", 1, 1, Ability.Strength, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.FighterChampionImprovedCritical, new LearnableSkill(CustomSkill.FighterChampionImprovedCritical, "Coup Critique Supérieur", "Vous avez besoin d'un dé moins élevé pour porter des coups critiques (1 au level 3, 2 au level 15).\n\nStack avec les effets similaires", Category.Fight, "is_ImprovedCrit", 1, 2, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FighterChampionAthleteAccompli, new LearnableSkill(CustomSkill.FighterChampionAthleteAccompli, "Athlète accompli", "Vous avez l'avantage sur vos jets d'Athlétisme. Lorsque vous infligez un coup critique, vous vous déplacez 50 % plus vite pendant un round sans déclencher d'attaque d'opportunité", Category.Fight, "is_RemarkAthlete", 1, 1, Ability.Strength, Ability.Dexterity, OnLearnAthleteAccompli));
      learnableDictionary.Add(CustomSkill.ChampionGuerrierHeroique, new LearnableSkill(CustomSkill.ChampionGuerrierHeroique, "Guerrier Héroique", "Vous bénéficiez d'un avantage sur la première attaque de chaque round", Category.Fight, "is_RemarkAthlete", 1, 1, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FighterChampionUltimeSurvivant, new LearnableSkill(CustomSkill.FighterChampionUltimeSurvivant, "Ultime Survivant", "S'il vous reste moins de de la moitié de vos points de vie et que vous n'êtes pas KO, vous récupérez 5 + modificateur CON PV à chaque début de round", Category.Fight, "is_UltimSurvivor", 1, 2, Ability.Constitution, Ability.Strength));

      learnableDictionary.Add(CustomSkill.FighterArcaneArcher, new LearnableSkill(CustomSkill.FighterArcaneArcher, "Archer-Mage", "", Category.FighterSubClass, "arcanearcher", 20, 1, Ability.Dexterity, Ability.Strength, Fighter.LevelUp, "1vqEeNsEmg2VSjaoGN6ApmcbY7ALjEbxT9itTmeMedJA"));
      learnableDictionary.Add(CustomSkill.ArcaneArcherPrestidigitation, new LearnableSkill(CustomSkill.ArcaneArcherPrestidigitation, "Prestidigitation (Archer-Mage)", NwSpell.FromSpellId(CustomSpell.Prestidigitation).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Prestidigitation).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherDruidisme, new LearnableSkill(CustomSkill.ArcaneArcherDruidisme, "Druidisme (Archer-Mage)", NwSpell.FromSpellId(CustomSpell.Druidisme).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Druidisme).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirAffaiblissant, new LearnableSkill(CustomSkill.ArcaneArcherTirAffaiblissant, "Tir Affaiblissant", "Votre prochaine attaque avec un arc inflige +2d6 nécrotique (4d6 au niveau 18) et JDS CON ou divise par 2 les dégâts d'attaque de la cible pour un round\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirAffaib", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirAgrippant, new LearnableSkill(CustomSkill.ArcaneArcherTirAgrippant, "Tir Agrippant", "Votre prochaine attaque avec un arc inflige +2d6 poison (4d6 au niveau 18) et vitesse réduite de 30 %\nChaque round, si la cible s'est déplacée, elle subit 2d6 dégâts tranchants\n\nUn jet d'Athlétisme réussi permet de dissiper l'effet\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirAgrippant", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirBannissement, new LearnableSkill(CustomSkill.ArcaneArcherTirBannissement, "Tir de Bannissement", "Votre prochaine attaque avec un arc bannie la cible en Féerie pour un round en cas d'échec de son JDS de charisme. Elle ne peut ni agir ni se de déplacer\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirBanniss", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirChercheur, new LearnableSkill(CustomSkill.ArcaneArcherTirChercheur, "Tir Chercheur", "Sélectionner une cible. Dans la minute qui suit, vous pouvez réutiliser cette capacité pour envoyer une flèche à tête chercheuse sur la cible d'origine, où que celle-ci se trouve et inflige les dégâts normaux +1d6 (force) (+2d6 au niveau 18)\n\nAucun jet d'attaque n'est nécessaire, la cible doit réussir un JDS de dextérité pour ne subir que la moitié des dégâts\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirChercheur", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirOmbres, new LearnableSkill(CustomSkill.ArcaneArcherTirOmbres, "Tir des Ombres", "Votre prochaine attaque avec un arc inflige +2d6 psychique (4d6 au niveau 18). La cible doit réussir un JDS de sagesse ou être aveuglée pendant 1 round\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirDesOmbres", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirEnvoutant, new LearnableSkill(CustomSkill.ArcaneArcherTirEnvoutant, "Tir Envoûtant", "Votre prochaine attaque avec un arc inflige +2d6 psychique (4d6 au niveau 18). La cible doit réussir un JDS de sagesse ou être charmée pendant 1 round. Le charme se dissipe si vous effectuer une action hostile contre la cible\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirEnvoutant", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirExplosif, new LearnableSkill(CustomSkill.ArcaneArcherTirExplosif, "Tir Explosif", "Votre prochaine attaque avec un arc provoque une explosion (+2d6 force, 4d6 au niveau 18) d'un rayon de 3 mètres\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirExplosif", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirPerforant, new LearnableSkill(CustomSkill.ArcaneArcherTirPerforant, "Tir Perforant", "+1d6 perforant (2d6 au niveau 18)\nVous tirez une flèche éthérée en ligne droite. Celle-ci traverse les objets sans les affecter. Les créatures traversées doivent réussir un JDS dextérité pour ne subir que la moitié des dégâts\n\nZone d'effet : 30 cm de largeur, 9 m de longueur \n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirPerforant", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirIncurve, new LearnableSkill(CustomSkill.ArcaneArcherTirIncurve, "Tir Incurvé", "Action Bonus\n\nLorsque vous manquez votre cible, vous relancez automatiquement le jet d'attaque contre une autre cible située à moins de 18 m", Category.Fight, "is_TirPerforant", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.FighterWarMaster, new LearnableSkill(CustomSkill.FighterWarMaster, "Maître de guerre", "", Category.FighterSubClass, "warmaster", 20, 1, Ability.Strength, Ability.Dexterity, Fighter.LevelUp, "1f5Hx-Yt0kRTVj4RrbMv0K225hfdzIZeg4qqpHiWIEts"));
      learnableDictionary.Add(CustomSkill.WarMasterAttaqueMenacante, new LearnableSkill(CustomSkill.WarMasterAttaqueMenacante, "Attaque Menaçante", "La prochaine attaque qui touche votre cible ajoute un dé de supériorité aux dégâts et effraie la cible pour un round si celle-ci échoue un JDS de sagesse.\nDD : 8 + bonus de maîtrise + modificateur de force ou dextérité (en fonction du plus élevé)\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_MenacingAtta", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterAttaquePrecise, new LearnableSkill(CustomSkill.WarMasterAttaquePrecise, "Attaque Précise", "Vous ajoutez un dé de supériorité à la prochaine attaque que vous échouez, vous donnant une seconde chance de la réussir\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_PrecisionAtt", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterBalayage, new LearnableSkill(CustomSkill.WarMasterBalayage, "Balayage", "La prochaine attaque qui touche votre cible vous permet d'effectuer une nouvelle attaque gratuite sur une autre cible à portée de mêlée en échange d'un dé de supériorité\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Balayage", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterRenversement, new LearnableSkill(CustomSkill.WarMasterRenversement, "Renversement", "Votre prochaine attaque qui touche une cible d'une catégorie ou moins de taille supérieure à la votre provoque un JDS de force en échange d'un dé de supériorité. Si la cible échoue, elle est renversée. Dé ajouté aux dégâts\nDD : 8 + bonus de maîtrise + modificateur de force ou dextérité (en fonction du plus élevé)\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Renversement", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterDesarmement, new LearnableSkill(CustomSkill.WarMasterDesarmement, "Désarmement", "Votre prochaine attaque qui touche votre cible provoque un JDS de force. Si la cible échoue, son arme est rangée dans son inventaire et elle ne peut pas équiper de nouvelle arme avant le prochain round. Dé ajouté aux dégâts\nDD : 8 + bonus de maîtrise + modificateur de force ou dextérité (en fonction du plus élevé)\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Disarm", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterDiversion, new LearnableSkill(CustomSkill.WarMasterDiversion, "Diversion", "Votre prochaine attaque qui touche votre cible permet aux alliés d'effectuer leur  prochaine attaque contre cette cible avec un avantage. L'effet expire après 1 round. Dé ajouté aux dégâts\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Diversion", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterFeinte, new LearnableSkill(CustomSkill.WarMasterFeinte, "Feinte", "Votre prochaine attaque utilise votre action bonus afin d'être portée avec avantage. Dé ajouté aux dégâts\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Feinte", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterInstruction, new LearnableSkill(CustomSkill.WarMasterInstruction, "Instruction", "Vous utilisez votre action bonus pour donner une attaque supplémentaire à l'allié ciblé au prochain round qui consomme sa réaction. En échange, vous disposerez d'une attaque de moins au prochain round. Dé ajouté aux dégâts de l'allié\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Instruction", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterJeuDeJambe, new LearnableSkill(CustomSkill.WarMasterJeuDeJambe, "Jeu de Jambe", "Pendant un round, toutes les attaques de mêlée portées contre vous ont un désavantage\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Footwork", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterManoeuvreTactique, new LearnableSkill(CustomSkill.WarMasterManoeuvreTactique, "Manoeuvre Tactique", "Pendant un round, la vitesse de déplacement de l'allié ciblé augmente de 50 %. Celui-ci ne provoque pas d'attaque d'opportunité\n\nVous ajoutez votre dé de supériorité aux dégâts de votre prochaine attaque.\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_TacticMan", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterParade, new LearnableSkill(CustomSkill.WarMasterParade, "Parade", "Lorsque cette manoeuvre est active, si une attaque de mêlée vous touche, vous utilisez un dé de supériorité et votre réaction pour réduire les dégâts d'un montant égal au résultat du dé + votre modificateur de dextérité \n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "ife_impparry", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterProvocation, new LearnableSkill(CustomSkill.WarMasterProvocation, "Provocation", "Votre prochaine attaque qui touche votre cible la force à effectuer ses prochaines contre toute autre cible que vous avec désavantage si elle échoue un JDS de sagesse. Dure un round. Dé de supériorité ajouté aux dégâts\nDD : 8 + bonus de maîtrise + modificateur de force ou dextérité (en fonction du plus élevé)\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "warmaster", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterRalliement, new LearnableSkill(CustomSkill.WarMasterRalliement, "Ralliement", "Action bonus\nL'allié ciblé, gagne le résultat du dé de supériorité + votre modificateur de charisme en points de vie temporaires. Portée : 18m\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Rally", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterRiposte, new LearnableSkill(CustomSkill.WarMasterRiposte, "Riposte", "La prochaine fois qu'un adversaire rate une attaque de mêlée contre vous, vous utilisez votre réaction et un dé de supériorité pour déclencher une attaque supplémentaire contre cette créature. Si vous touchez, ajoutez le dé aux dégâts\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Riposte", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterEvaluationTactique, new LearnableSkill(CustomSkill.WarMasterEvaluationTactique, "Evalution Tactique", "Lorsque vous effectuez un jet d'Investigation, d'Histoire ou d'Intuition, vous pouvez dépenser un dé de supériorité pour l'ajouter au résultat du jet.\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Observation", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterConnaisTonEnnemi, new LearnableSkill(CustomSkill.WarMasterConnaisTonEnnemi, "Connais ton Ennemi", "Une fois par repos court, vous pouvez déterminer les immunités, résistances et vulnérabilités de la créature ciblée", Category.Fight, "ife_X1HDenier", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat, restoreOnShortRest:true));

      learnableDictionary.Add(CustomSkill.Barbarian, new LearnableSkill(CustomSkill.Barbarian, "Barbare", "", Category.Class, "barbarian", 3, 1, Ability.Strength, Ability.Constitution, Barbarian.LevelUp, "1fz5tHKt-49jRze5YM6MyVTmCo_K1PDlRMyJgs5Hr5yc"));
      learnableDictionary.Add(CustomSkill.BarbarianUnarmoredDefence, new LearnableSkill(CustomSkill.BarbarianUnarmoredDefence, "Défense sans armure", "Si vous ne portez pas d'armure, ajoute votre bonus de constitution (si positif) en tant que bonus d'armure", Category.Fight, "is_UnarmoredDef", 1, 1, Ability.Constitution, Ability.Strength, OnLearnUnarmoredDefence));
      learnableDictionary.Add(CustomSkill.BarbarianRage, new LearnableSkill(CustomSkill.BarbarianRage, "Rage", NwSpell.FromSpellType(Spell.AbilityBarbarianRage).Description.ToString(), Category.Fight, NwSpell.FromSpellType(Spell.AbilityBarbarianRage).IconResRef, 1, 1, Ability.Strength, Ability.Constitution, OnLearnBarbarianRage));
      learnableDictionary.Add(CustomSkill.BarbarianRecklessAttack, new LearnableSkill(CustomSkill.BarbarianRecklessAttack, "Frappe Téméraire", "Pour un round, vous avez l'avantage sur vos jets d'attaques effectués avec une arme de mêlée, mais vos adversaires ont également l'avantage sur toutes leurs attaques qui vous ciblent", Category.Fight, "is_RecklessAttac", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BarbarianFastMovement, new LearnableSkill(CustomSkill.BarbarianFastMovement, "Déplacement Rapide", "Votre niveau de barbare vous permet de bénéficier de vous déplacer 30 % plus rapidement", Category.Fight, "is_FastMovement", 1, 1, Ability.Constitution, Ability.Strength, OnLearnBarbarianFastMovement));
      learnableDictionary.Add(CustomSkill.BarbarianInstinctSauvage, new LearnableSkill(CustomSkill.BarbarianInstinctSauvage, "Instinct Sauvage", "Vous conservez votre bonus de dextérité à la CA même pris au dépourvu.\n\nVous ne subissez plus de malus lorsque vous êtes pris en tenaille\n\nLorsque vous êtes surpris, vous pouvez entrer en rage afin d'agir normalement", Category.Fight, "ife_uncdodge", 1, 1, Ability.Constitution, Ability.Dexterity, OnLearnInstinctSauvage));
      learnableDictionary.Add(CustomSkill.BarbarianCritiqueBrutal, new LearnableSkill(CustomSkill.BarbarianCritiqueBrutal, "Critique Brutal", "Ajoute un dé de dégât supplémentaire aux coups critiques portés avec une arme de mêlée (2 dés au level  13, 3 dés au level 17)", Category.Fight, "is_BrutalCritical", 1, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.BarbarianRageImplacable, new LearnableSkill(CustomSkill.BarbarianRageImplacable, "Rage Implacable", "Tant que vous êtes en rage, si vous tombez à 0 PV, vous lancez un JDS de constitution DD 10\n\nEn cas de réussite, vous récupérez un nombre de points de vie équivalent à deux fois votre niveau de Barbare et le DD du prochain jet augmente de 5.\n\nLe DD est réinitialisé à 10 après un repos court", Category.Fight, "is_RelentlesRage", 1, 1, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.BarbarianRagePersistante, new LearnableSkill(CustomSkill.BarbarianRagePersistante, "Rage Persistante", "Votre Rage ne s'interrompt prématurément que si vous êtes mis KO", Category.Fight, "is_RagePersist", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BarbarianPuissanceIndomptable, new LearnableSkill(CustomSkill.BarbarianPuissanceIndomptable, "Puissance Indomptable", "Si le résultat d'un de vos jets de force est inférieur à la valeur de votre force, vous utilisez votre valeur de force à la place", Category.Fight, "is_IndomMight", 1, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.BarbarianChampionPrimitif, new LearnableSkill(CustomSkill.BarbarianChampionPrimitif, "Champion Primitif", "Force et Constitution +4. Vos valeurs maximum dans ces caractéristiques est désormais de 24", Category.Fight, "is_ChampPrimitif", 1, 1, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.BarbarianBerseker, new LearnableSkill(CustomSkill.BarbarianBerseker, "Berserker", "", Category.BarbarianSubClass, "berseker", 20, 1, Ability.Strength, Ability.Constitution, Barbarian.LevelUp, "19vKrKk6syyslazraiEOjTqzGErEuTVFnZnOU8U4f7KI"));
      learnableDictionary.Add(CustomSkill.BersekerFrenziedStrike, new LearnableSkill(CustomSkill.BersekerFrenziedStrike, "Frappe Frénétique", "Lorsque vous êtes sous l'effet de Rage et que vous utilisez Frappe Téméraire, la prochaine attaque que vous infligez à partir d'un jet de force inflige Xd6 dégâts supplémentaires, X correspondant à vos dégâts bonus de Rage", Category.Fight, "is_FrenzyStrike", 1, 1, Ability.Strength, Ability.Constitution, OnLearnFrenziedStrike));
      learnableDictionary.Add(CustomSkill.BersekerRageAveugle, new LearnableSkill(CustomSkill.BersekerRageAveugle, "Rage Aveugle", "Sous l'effet de Rage, vous ne pouvez plus être charmé, effrayé ou terrorisé\n\nCalm Emotions ne met plus fin à Rage\n\nDissipe les effets de charme, de peur et de terreur que vous subissez", Category.Fight, "is_MindlessRage", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BersekerRepresailles, new LearnableSkill(CustomSkill.BersekerRepresailles, "Représailles", "Une fois par round, lorsque vous subissez des dégâts de la part d'une créature que vous pouvez atteindre avec une arme de mêlée, vous effectuez une attaque gratuite contre cette créature", Category.Fight, "is_Represailles", 1, 1, Ability.Strength, Ability.Constitution, OnLearnBerserkerRepresailles));
      learnableDictionary.Add(CustomSkill.BersekerPresenceIntimidante, new LearnableSkill(CustomSkill.BersekerPresenceIntimidante, "Présence Intimidante", "Action bonus\n\nToutes les créatures hostiles dans un rayon de 9 m doivent effectuer un JDS de sagesse ou subir l'Effroi pour 1 minute\n- DD : 8 + bonus de maîtrise + modificateur de force\n- Chaque round, les créatures sous Effroi effectuent un nouveau jet afin de tenter de dissiper l'effet\n- Peut être utilisé gratuitement une fois par repos long, puis nécessite de dépenser une utilisation de Rage", Category.Fight, "is_Intimidating", 1, 1, Ability.Strength, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BersekerRestorePresenceIntimidante, new LearnableSkill(CustomSkill.BersekerRestorePresenceIntimidante, "Présence Intimidante (Récupération)", "Sacrifie une utilisation de Rage pour récupérer une utilisation de Présence Intimidante", Category.Fight, "is_RestoreIntimi", 1, 1, Ability.Strength, Ability.Charisma, OnLearnRestorePresenceIntimidante));

      learnableDictionary.Add(CustomSkill.BarbarianTotem, new LearnableSkill(CustomSkill.BarbarianTotem, "Totem", "", Category.BarbarianSubClass, "totem", 20, 1, Ability.Strength, Ability.Constitution, Barbarian.LevelUp, "1zMgiYOS_r39s-uv0A3bAK4582Srv8Dn00WPbayF8lTo"));
      learnableDictionary.Add(CustomSkill.TotemSpeakAnimal, new LearnableSkill(CustomSkill.TotemSpeakAnimal, "Communication Animale (Voie du Totem)", NwSpell.FromSpellId(CustomSpell.SpeakAnimal).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.SpeakAnimal).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemSensAnimal, new LearnableSkill(CustomSkill.TotemSensAnimal, "Sens Animal (Voie du Totem)", NwSpell.FromSpellId(CustomSpell.SpeakAnimal).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.SensAnimal).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemRage, new LearnableSkill(CustomSkill.TotemRage, "Rage Sauvage", "Votre rage peut-être utilisée avec trois options différentes :\n- Ours : Sous rage, vous bénéficiez d'une résistance à tous les dégâts, à l'exception de force, nécrotique, psychique et radiant. Lorsque votre rage prend fin, vous récupérez 1d8 + modificateur de Constitution points de vie\n- Aigle : Lorsque vous activez votre rage, vous déclenchez à la fois les effets de Sprint et de Désengagement. Tant que votre rage est active, Sprint peut-être utilisé comme action bonus et vous permet de bénéficier des effets de Désengagement\n- Loup : Sous  rage, les attaques contre vos ennemis à portée de mêlée bénéficient d'un avantage lorsqu'elles sont effectuées par des créatures autres que vous", Category.Fight, "ife_rage", 1, 1, Ability.Constitution, Ability.Strength, OnLearnTotemRage));
      learnableDictionary.Add(CustomSkill.TotemAspectSauvage, new LearnableSkill(CustomSkill.TotemAspectSauvage, "Aspect Sauvage", "Une fois par repos court, vous pouvez choisir l'une des option ci-dessous\n- Chouette : Vision dans le noir\n- Saumon : Vous disposez d'une vitesse de nage égale à votre vitesse de déplacement\n- Panthère : Vous disposez d'une vitesse d'escalade égale à votre vitesse de déplacement", Category.MindBody, "is_FerociteIndom", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.TotemPuissanceSauvage, new LearnableSkill(CustomSkill.TotemPuissanceSauvage, "Puissance Sauvage", "Vous pouvez ajouter à votre rage l’un des six effets ci-dessous :\n\n- Ours : Sous rage, vous bénéficiez d’une résistance à tous les dégâts, à l’exception de force, nécrotique, psychique et radiant. Une fois par rage, vous pouvez utilisez l’action Férocité Indomptable pour vous soigner de 1d8 + modificateur de Constitution\n\n- Aigle : Lorsque vous activez votre rage, vous déclenchez à la fois les effets de Sprint et de Désengagement. Tant que votre rage est active, Sprint peut être utilisé comme action bonus et vous permet de bénéficier des effets de Désengagement\n\n- Loup : Sous  rage, les attaques contre vos ennemis à portée de mêlée bénéficient d’un avantage lorsqu’elles sont effectuées par des créatures autres que vous\n\n- Faucon : Vous bénéficiez d’une vitesse de vol égale à votre vitesse de déplacement\n\n- Tigre : Les attaques de vos ennemis à portée de mêlée subissent un désavantage si elles sont effectuées contre une cible n’ayant pas un effet de Provocation actif\n\n- Bélier : Vos attaques de mêlée réussies sur des cibles de taille Large ou inférieure infligent la Déstabilisation", Category.Fight, "is_FerociteIndom", 1, 1, Ability.Strength, Ability.Constitution, OnLearnTotemPuissanceSauvage, restoreOnShortRest:true));

      learnableDictionary.Add(CustomSkill.TotemCommunionAvecLaNature, new LearnableSkill(CustomSkill.TotemCommunionAvecLaNature, "Communion avec la nature (Voie du Totem)", NwSpell.FromSpellId(CustomSpell.CommunionAvecLaNature).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.CommunionAvecLaNature).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.BarbarianWildMagic, new LearnableSkill(CustomSkill.BarbarianWildMagic, "Magie Sauvage", "", Category.BarbarianSubClass, "wildmagic", 20, 1, Ability.Strength, Ability.Constitution, Barbarian.LevelUp, "1RBe7LTYRb-s8J1D91oHMOOZD5MrOiOdPiDH9hCsS2MA"));
      learnableDictionary.Add(CustomSkill.WildMagicSense, new LearnableSkill(CustomSkill.WildMagicSense, "Sens de la magie", "Action bonus\nPendant 1 round, vous déployez une aura de 3 m qui permet à vos alliés d'ajouter leur bonus de maîtrises aux JDS contre les sorts\n\nVous pouvez alors sentir la présence de tout effet magique non dissimulé qui se situe à moins de 30 m et en deviner l'école d'origine", Category.Magic, "is_MagicAware", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnWildMagicSensDeLaMagie, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.WildMagicTeleportation, new LearnableSkill(CustomSkill.WildMagicTeleportation, "Téléportation (voie de la magie sauvage)", "Action bonus\n\nVous pouvez vous téléporter jusqu'à une distance de 18m sur un espace inoccupé sur lequel vous disposez d'une ligne de vue", Category.Magic, "is_MagicTeleport", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnWildMagicTeleportation));
      learnableDictionary.Add(CustomSkill.WildMagicMagieGalvanisanteBienfait, new LearnableSkill(CustomSkill.WildMagicMagieGalvanisanteBienfait, "Magie Galvanisante - Bienfait", "Pendant 10 rounds, +1d4 aux jets d'attaques et de caractéristiques de la cible. Non cumulable", Category.Magic, "is_MagicBoon", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnWildMagicBienfait));
      learnableDictionary.Add(CustomSkill.WildMagicMagieGalvanisanteRecuperation, new LearnableSkill(CustomSkill.WildMagicMagieGalvanisanteRecuperation, "Magie Galvanisante - Récupération", "La cible lance 1d3 et récupère un emplacement de sort du niveau correspondant au dé", Category.Magic, "is_MagicRecup", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnWildMagicRecuperation));
      learnableDictionary.Add(CustomSkill.RepercussionInstable, new LearnableSkill(CustomSkill.RepercussionInstable, "Répercussion Instable", "Réaction\n\nSi l'option est activée, vous générez un nouvel effet de Magie Sauvage si vous subissez des dégâts ou ratez un JDS sous l'effet de rage. Le nouvel effet remplace l'effet actif", Category.Magic, "is_ReperInstable", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Rogue, new LearnableSkill(CustomSkill.Rogue, "Roublard", "", Category.Class, "rogue", 3, 1, Ability.Dexterity, Ability.Intelligence, Rogue.LevelUp, "1tppeF4hJsDjOmL9HBo4FOJfcJYKmeEngkTTk6OapSHQ"));
      learnableDictionary.Add(CustomSkill.RogueThief, new LearnableSkill(CustomSkill.RogueThief, "Voleur", "", Category.RogueSubClass, "thief", 20, 1, Ability.Dexterity, Ability.Intelligence, Rogue.LevelUp, "1X5nCJFGForGD5hRHuMEOG-a6MutROrkupp4lYFEwF8w"));
      //learnableDictionary.Add(CustomSkill.RogueConspirateur, new LearnableSkill(CustomSkill.RogueConspirateur, "Conspirateur", "", Category.RogueSubClass, "conspirateur", 20, 1, Ability.Intelligence, Ability.Dexterity, Rogue.LevelUp, "1ePqbUdzMRBANxrZ9og3hMHV-9XDSJl-Em9hHU_56YBY"));
      learnableDictionary.Add(CustomSkill.RogueAssassin, new LearnableSkill(CustomSkill.RogueAssassin, "Assassin", "", Category.RogueSubClass, "assassin", 20, 1, Ability.Dexterity, Ability.Intelligence, Rogue.LevelUp, "1cVn8KNYkU3gB8KJCu2Q_Qivh2t8LCKEWyAPKZXE-v4g"));

      learnableDictionary.Add(CustomSkill.RoublardViseeStable, new LearnableSkill(CustomSkill.RoublardViseeStable, "Visée Stable", "Action Bonus\n\nVous bénéficiez d'un avantage sur votre prochaine attaque. Votre vitesse est réduite à 0 pour 2 rounds", Category.Fight, "is_RangerSaint", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RoublardFrappeRusee, new LearnableSkill(CustomSkill.RoublardFrappeRusee, "Frappe Rusée", "Vous pouvez choisir d'appliquer un effet supplémentaire à vos attaques sournoises en échange d'un coût de 1d6 dégâts retiré de votre attaque\n- Poison : Votre cible doit réussir un JDS de Constitution ou être empoisonnée pour 1 minute. Chaque round, la cible a droit à un nouveau jet afin de dissiper l'effet\n- Bousculade : Si la cible est de taille G ou inférieure, elle doit réussir un JDS de dextérité ou être déstabilisée pour 2 rounds\n- Retraite : Immédiatement après avoir réussi votre attaque sournoise, vous vous déplacez 50 % plus rapidement et ne provoquez pas d'attaque d'opportunité", Category.Fight, "is_SneakAttack", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RoublardSavoirFaire, new LearnableSkill(CustomSkill.RoublardSavoirFaire, "Savoir Faire", "Si vous faites moins de 10 sur un jet d'une compétence que vous maîtrisez et sur lequel vous pouvez ajouter votre bonus de maîtrise, alors considérez le comme un 10", Category.Fight, "is_SavoirFaire", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RoublardFrappeRuseeAmelioree, new LearnableSkill(CustomSkill.RoublardFrappeRuseeAmelioree, "Frappe Rusée Ameliorée", "Vous pouvez appliquer un deuxième effet de Frappe Rusée à vos Attaques Sournoises, les coûts en d6 sont cumulés", Category.Fight, "is_SneakAttack", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RoublardFrappePerfide, new LearnableSkill(CustomSkill.RoublardFrappePerfide, "Frappe Perfide", "Vous pouvez choisir d'appliquer jusqu'à deux effets supplémentaires ci-dessous à vos attaques sournoises. Chaque effet retire un certain nombre de dés aux dégâts de vos sournoises\n- Poison : Votre cible doit réussir un JDS de Constitution ou être empoisonnée pour 1 minute. Chaque round, la cible a droit à un nouveau jet afin de dissiper l'effet. Coût 1d6\n- Bousculade : Si la cible est de taille G ou inférieure, elle doit réussir un JDS de dextérité ou être déstabilisée pour 2 rounds. Coût 1d6\n- Retraite : Immédiatement après avoir réussi votre attaque sournoise, vous vous déplacez 50 % plus rapidement et ne provoquez pas d'attaque d'opportunité. Coût 1d6\n- Hébéter : La cible doit réussir un JDS de Constitution ou subir les effets de LEnteur pour 1 round. Coût : 2d6\n- Obscurcir : La cible doit réussir un JDS de Dextérité ou être aveuglée pour 1 round. Coût : 3d6\n- Assommer: La cible doit réussir un JDS de Constitution ou perdre connaissance pour 1 minute ou jusqu'à ce qu'elle subisse des dégâts. La cible répète le JDS à chaque round afin d'essayer de dissiper l'effet. Coût 6d6", Category.Fight, "is_SneakAttack", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RoublardCoupDeChance, new LearnableSkill(CustomSkill.RoublardCoupDeChance, "Coup de Chance", "En rp ou animation, une fois par repos court, lorsque vous échouez un jet, vous le transformez en 20", Category.Fight, "ife_lucky", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.ThiefDiscretionSupreme, new LearnableSkill(CustomSkill.ThiefDiscretionSupreme, "Voleur - Discrétion Suprême", "Vos jets de Furtivité ont l'avantage\n\nVous pouvez utiliser le sort invisibilité une fois par repos court", Category.Fight, "is_ThiefReflex", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.ThiefReflex, new LearnableSkill(CustomSkill.ThiefReflex, "Voleur - Réflexes", "Lors de votre premier round de combat, vous bénéficiez d'une attaque supplémentaire", Category.Fight, "is_ThiefReflex", 1, 1, Ability.Dexterity, Ability.Intelligence, OnLearnThiefReflex));

      learnableDictionary.Add(CustomSkill.ConspirateurMaitriseTactique, new LearnableSkill(CustomSkill.ConspirateurMaitriseTactique, "Maîtrise Tactique", "Vous pouvez utiliser votre action bonus pour donner l'avantage à un allié sur sa prochaine attaque (Portée 9m)", Category.Fight, "is_TacticalCon", 1, 1, Ability.Intelligence, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ConspirateurRedirection, new LearnableSkill(CustomSkill.ConspirateurRedirection, "Retour de Bâton", "Vous utilisez automatiquement votre réaction pour rediriger la première attaque portée contre vous vers un autre ennemi à votre contact au hasard", Category.HunterDefenseSuperieure, "is_Redirect", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.AssassinAssassinate, new LearnableSkill(CustomSkill.AssassinAssassinate, "Assassinat", "Vous bénéficiez d’un avantage sur vos jets d’initiative\n\nPendant un round après avoir lancé votre jet d’initiative vos attaques qui ciblent des créatures ayant effectué un jet d’initiative inférieur au vôtre bénéficient d’un avantage, ajoutent votre niveau de Roublard à vos dégâts habituels ainsi qu’à votre Attaque Sournoise", Category.Fight, "is_Assassinate", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AssassinInfiltrationExpert, new LearnableSkill(CustomSkill.AssassinInfiltrationExpert, "Expert en Infiltration", "Vous pouvez imiter avec exactitude la façon de parler et d'écrire de n'importe quelle personne que vous avez pu étudier pendant au moins une heure\n\nLorsque vous utilisez Visée Stable, votre vitesse n'est pas réduite à 0", Category.Fight, "is_InfExpert", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AssassinEnvenimer, new LearnableSkill(CustomSkill.AssassinEnvenimer, "Envenimer", "Lorsque vous utilisez de Frappe Rusée Empoisonnée et que celle-ci échoue son JDS, vous infligez à la cible une vulnérabilité aux dégâts de poison pendant 1 round ainsi que 2d6 dégâts de poison", Category.Fight, "is_PoisonStrike", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Monk, new LearnableSkill(CustomSkill.Monk, "Moine", "", Category.Class, "monk", 3, 1, Ability.Dexterity, Ability.Strength, Monk.LevelUp, "1S89vtFohS-YuCDsdMLaoOd3RFpbCtB4zoRGnoi_Tl4I"));
      learnableDictionary.Add(CustomSkill.MonkUnarmoredDefence, new LearnableSkill(CustomSkill.MonkUnarmoredDefence, "Défense sans armure", "Si vous ne portez pas d'armure ni de bouclier, ajoutez votre bonus de sagesse (si positif) en tant que bonus d'armure\n\nNOTE : Ne se stack pas avec l'équivalent barbare", Category.Fight, "is_MonkUnarmDef", 1, 1, Ability.Constitution, Ability.Strength, OnLearnMonkUnarmoredDefence));
      learnableDictionary.Add(CustomSkill.MonkBonusAttack, new LearnableSkill(CustomSkill.MonkBonusAttack, "Art Martial", "A mains nues ou avec une arme de moine, vous pouvez utiliser votre action bonus afin d'effectuer une attaque à main nue supplémentaire", Category.Fight, "is_MonkBonusAtt", 1, 1, Ability.Dexterity, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkPatience, new LearnableSkill(CustomSkill.MonkPatience, "Patience", "Action bonus\n\nDésavantage sur les attaques qui vous ciblent\n\nVous avez l'avantage sur les JDS de dextérité\n\nDurée : 1 round\nCoût : 1 ki", Category.Ki, "is_PatientDef", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkDelugeDeCoups, new LearnableSkill(CustomSkill.MonkDelugeDeCoups, "Déluge de coups", "Action bonus\n\nVotre prochaine attaque vous permet d'enchaîner deux attaques à mains nues supplémentaires\nCoût : 1 ki", Category.Ki, "is_FlurryOfBlows", 1, 1, Ability.Dexterity, Ability.Strength, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkUnarmoredSpeed, new LearnableSkill(CustomSkill.MonkUnarmoredSpeed, "Célérité sans armure", "Tant que vous n'avez ni armure ni bouclier équipé, vous vous déplacez plus rapidement en fonction de votre niveau de moine\n- Niveau 2 : +20 %\n- Niveau 6 : +40 %\n- Niveau 10 : +60 %\n- Niveau 14 : +80 %\n- Niveau 18 : +100 %", Category.Fight, "is_MonkSpeed", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnUnarmoredSpeed));
      learnableDictionary.Add(CustomSkill.MonkMetabolismeSurnaturel, new LearnableSkill(CustomSkill.MonkMetabolismeSurnaturel, "Métaoblisme Surnaturel", "Si vous n'êtes pas en combat, vous regagnez tout votre Ki.\nUtilisable une fois par repos long.", Category.MindBody, "is_Harmony", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkParade, new LearnableSkill(CustomSkill.MonkParade, "Parade", "Une fois par round, vous réduisez les dégâts d'attaques de 1d10 + modificateur DEX + niveau de moine", Category.MindBody, "is_MonkParade", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnMonkParade));
      learnableDictionary.Add(CustomSkill.MonkSlowFall, new LearnableSkill(CustomSkill.MonkSlowFall, "Chute contrôlée", "Vous pouvez utiliser votre réaction lorsque vous tombez afin de réduire les dégâts de chute d'un montant égal 5 fois votre niveau de moine", Category.Fight, "is_SlowFall", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkStunStrike, new LearnableSkill(CustomSkill.MonkStunStrike, "Frappe étourdissante", "Si la créature ciblée échoue un JDS constitution, votre prochaine attaque de mêlée l'étourdit, si elle réussit, sa vitesse de déplacement est réduite de 50 % et la prochaine attaque contre elle bénéficie d'un avantage\n\nDurée : 1 round\nCoût : 1 Ki\nCooldown : 1 round", Category.Ki, "is_StunStrike", 1, 1, Ability.Dexterity, Ability.Strength, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkSerenity, new LearnableSkill(CustomSkill.MonkSerenity, "Sérénité", "Met fin à un effet de charme ou de peur qui vous affecte", Category.Fight, "is_Serenity", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkFrappesRenforcees, new LearnableSkill(CustomSkill.MonkFrappesRenforcees, "Frappes Renforcées", "Lorsque vous infligez des dégâts avec vos attaques à mains nues, vous pouvez choisir de remplacer les dégâts contondants par des dégâts de force", Category.MindBody, "is_PowerStrikes", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkDiamondSoul, new LearnableSkill(CustomSkill.MonkDiamondSoul, "Âme de diamant", "Tant que âme de diamant est activé, si vous échouez un jet de sauvegarde, vous dépensez un point de ki et le relancez. Le nouveau résultat est conservé.", Category.Fight, "is_DiamondSoul", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkDesertion, new LearnableSkill(CustomSkill.MonkDesertion, "Désertion de l'âme", "Vous devenez invisible et êtes résistant à tous les types de dégâts à l'exception de ceux de force\nDurée : 1 minutes\nCoût : 4 ki", Category.Ki, "ife_emptybod", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnKiFeat));

      learnableDictionary.Add(CustomSkill.MonkPaume, new LearnableSkill(CustomSkill.MonkPaume, "Voie de la Paume", "", Category.MonkSubClass, "monk_paume", 20, 1, Ability.Dexterity, Ability.Strength, Monk.LevelUp, "1ZZkR07V6l2q5s9HGQ2cd8uLhfMS5NLSynd9d1aqLuTo"));
      learnableDictionary.Add(CustomSkill.MonkPaumeTechnique, new LearnableSkill(CustomSkill.MonkPaumeTechnique, "Technique de la Paume", "Les attaques portées avec Déluge de coups infligent renversement si la cible échoue un JDS de force ou de dextérité", Category.Fight, "is_PaumeKD", 1, 1, Ability.Dexterity, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkPlenitude, new LearnableSkill(CustomSkill.MonkPlenitude, "Plénitude", "Vous récupérez trois fois votre niveau de moine en points de vie", Category.Fight, "is_Plenitude", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkManifestationAme, new LearnableSkill(CustomSkill.MonkManifestationAme, "Manifestation de l'âme", "Vos attaques à mains nues infligent +1d4 + modificateur de sagesse dégâts radiants", Category.Fight, "is_ManifSoul", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkManifestationCorps, new LearnableSkill(CustomSkill.MonkManifestationCorps, "Manifestation du corps", "Vos attaques à mains nues infligent +1d4 + modificateur de sagesse dégâts nécrotiques", Category.Fight, "is_ManifBody", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkManifestationEsprit, new LearnableSkill(CustomSkill.MonkManifestationEsprit, "Manifestation de l'esprit", "Vos attaques à mains nues infligent +1d4 + modificateur de sagesse dégâts psychiques", Category.Fight, "is_ManifMind", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkResonanceKi, new LearnableSkill(CustomSkill.MonkResonanceKi, "Résonance du Ki", "Action bonus\n\nVous portez une attaque à mains nues supplémentaire. Si celle-ci touche, elle fait entrer le ki de la cible en résonance pour 10 round", Category.Fight, "is_ResonanceKi", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkExplosionKi, new LearnableSkill(CustomSkill.MonkExplosionKi, "Explosion Ki", "Les créatures en résonance avec vous et à moins de 18 m déclenchent une explosion de 5 m et de 3d6 dégâts de force. Si elles réussissent un JDS de dextérité, elles n'en subissent que la moitié\nCoût : 1 Ki", Category.Ki, "is_ExplosionKi", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkPaumeVibratoire, new LearnableSkill(CustomSkill.MonkPaumeVibratoire, "Paume Vibratoire", "La prochaine attaque à mains nues réussie fait tomber la cible à 0 PV. Si elle réussit un JDS de constitution, elle subit 10d10 dégâts nécrotiques à la place\nCoût : 3 Ki", Category.Ki, "is_PaumeVib", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnKiFeat));

      learnableDictionary.Add(CustomSkill.MonkOmbre, new LearnableSkill(CustomSkill.MonkOmbre, "Voie de l'Ombre", "", Category.MonkSubClass, "monk_shadow", 20, 1, Ability.Dexterity, Ability.Strength, Monk.LevelUp, "102uzVDKTvDTh1hyLBvIZvedh0vAE4QPVEa07MG2aouU"));
      learnableDictionary.Add(CustomSkill.MonkTenebres, new LearnableSkill(CustomSkill.MonkTenebres, "Ténèbres (Voie des Ombres)", "Pour un coût de 1 Ki, vous reproduisez les effets du sort Ténèbres", Category.Ki, "is_Darkness", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkDarkVision, new LearnableSkill(CustomSkill.MonkDarkVision, "Vision dans le noir (Voie des Ombres)", "Pour un coût de 1 Ki, vous reproduisez les effets du sort Vision dans le noir", Category.Ki, "is_DarkVis", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkLinceulDombre, new LearnableSkill(CustomSkill.MonkLinceulDombre, "Linceul d'ombre (moine)", "Si vous êtes dans une zone sombre, vous devenez invisible pour 10 rounds\n\nTechniquement, pour le moment : ne fonctionne que la nuit ou en intérieur", Category.Fight, "is_ShadowCloak", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkFouleeDombre, new LearnableSkill(CustomSkill.MonkFouleeDombre, "Foulée d'ombre", "Action bonus\n\nSi vous êtes sous le couvert des ombres, vous vous téléportez dans l'ombre de la créature ciblée et pour un round obtenez un avantage sur votre prochaine attaque de mêlée\nPortée : 18 m\n\nPour le moment, ne peut être utilisé qu'en intérieur ou de nuit sur une créature qui ne dispose d'aucun effet de lumière", Category.Fight, "is_ShadowStep", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkFrappeDombre, new LearnableSkill(CustomSkill.MonkFrappeDombre, "Frappe d'ombre", "Action bonus\n\nSi vous êtes totalement invisible pour la créature ciblée, vous vous téléportez dans son ombre et lui infligez 3d8 dégâts psychiques\nPortée : 18 m\nCoût : 3 Ki\nLa cible ne doit disposer d'aucun effet de lumière", Category.Ki, "is_ShadowStrike", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkOpportuniste, new LearnableSkill(CustomSkill.MonkOpportuniste, "Opportuniste", "Si la créature que vous attaquez en mêlée subit une attaque de la part d'une autre créature, vous utilisez automatiquement votre réaction pour lui infliger une attaque de corps à corps supplémentaire", Category.Fight, "ife_opportunist", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnOpportunist));

      //learnableDictionary.Add(CustomSkill.MonkElements, new LearnableSkill(CustomSkill.MonkElements, "Voie des Quatre Éléments", "", Category.MonkSubClass, "monk_elements", 20, 1, Ability.Wisdom, Ability.Dexterity, Monk.LevelUp, "1cIYF31KIj7KnV06OUPm-P8PbUFpotvNsjCPS4gFkPRk"));
      learnableDictionary.Add(CustomSkill.MonkLienElementaire, new LearnableSkill(CustomSkill.MonkLienElementaire, "Lien Elémentaire", "En RP, vous pouvez utiliser votre action pour contrôler brièvement les forces élémentaires dans un rayon de 9 mètres autour de vous, provoquant l'un des effets suivants de votre choix\n- Créer un effet sensoriel inoffensif et instantané en relation avec l'air, la terre, le feu ou l'eau, comme une pluie d'étincelles, une bouffée d'air, un jet de brume éparse ou un léger frémissement de pierres.\n- Allumer ou éteindre instantanément une bougie, une torche ou un petit feu de camp\n- Refroidir ou réchauffer jusqu'à 500 g de matière non-vivante pour 1 heure\n- Modeler le feu, la terre, l'eau ou la brume (pour un volume maximal équivalent à un cube de 30 cm d'arêtes) pour lui donner une forme grossière de votre choix pendant 1 minute", Category.TechniqueElementaire, "is_ElementalLink", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkDagueDeGivre, new LearnableSkill(CustomSkill.MonkDagueDeGivre, "Dague de Givre", "Reproduit l'effet du sort Dague de Givre pour un coût de 2 Ki", Category.TechniqueElementaire, "is_X2IceDagg", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkFrissonDeLaMontagne, new LearnableSkill(CustomSkill.MonkFrissonDeLaMontagne, "Frisson de la Montagne", "Reproduit l'effet du sort Rayon de Givre pour un coût de 1 Ki", Category.TechniqueElementaire, "is_RayFrost", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkCrochetsDuSerpentDeFeu, new LearnableSkill(CustomSkill.MonkCrochetsDuSerpentDeFeu, "Crochets du Serpent de Feu", "Votre prochaine attaque inflige +1d10 de feu, puis vos attaques suivantes infligent +1d4 de feu pendant 1 round\n\nCoût : 1 Ki", Category.TechniqueElementaire, "is_FireSnake", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkPoingDesQuatreTonnerres, new LearnableSkill(CustomSkill.MonkPoingDesQuatreTonnerres, "Poing des Quatre Tonnerres", "Reproduit l'effet de Vague Tonnante pour un coût de 2 Ki", Category.TechniqueElementaire, "is_ThunderWave", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkPoingDeLair, new LearnableSkill(CustomSkill.MonkPoingDeLair, "Poing de l'air", "La cible doit réussir un JDS force ou subir 3d10 dégâts contondants et être renversée pour 1 round. En cas de réussite, elle subit la moitié des dégâts. Coût : 2 Ki", Category.TechniqueElementaire, "is_FistOfAir", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkRueeDesEspritsDuVent, new LearnableSkill(CustomSkill.MonkRueeDesEspritsDuVent, "Ruée des Esprits du Vent", "Reproduit les effets de Bourrasque pour un coût de 2 Ki", Category.TechniqueElementaire, "is_X1GustWind", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkSphereDequilibreElementaire, new LearnableSkill(CustomSkill.MonkSphereDequilibreElementaire, "Sphère d'Equilibre Elémentaire", "Reproduit les effets de Orbe Chromatique pour un coût de 2 Ki", Category.TechniqueElementaire, "is_ChromaticOrb", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkFrappeDesCendres, new LearnableSkill(CustomSkill.MonkFrappeDesCendres, "Frappe des Cendres", "Reproduit les effets de Mains Brûlantes pour un coût de 2 Ki", Category.TechniqueElementaire, "is_ChromaticOrb", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkFrappeDeLaTempete, new LearnableSkill(CustomSkill.MonkFrappeDeLaTempete, "Frappe de la Tempête", "Reproduit les effets de Poigne Electrique pour un coût de 2 Ki", Category.TechniqueElementaire, "is_X1EleJol", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkFouetDeLonde, new LearnableSkill(CustomSkill.MonkFouetDeLonde, "Fouet de l'Onde", "La cible doit réussir un JDS de dextérité ou subir 3d10 dégâts contondants et être renversée. En cas de réussite, elle ne subit que la moitié des dégâts.\n\nCoût : 2 Ki", Category.TechniqueElementaire, "is_WaterWhip", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkFaconnageDeLaRiviere, new LearnableSkill(CustomSkill.MonkFaconnageDeLaRiviere, "Façonnage de la Riviere", "Par une action, vous pouvez dépenser 1 point ki pour choisir une zone de glace ou d'eau, large de 9 mètres de côté maximum, se trouvant à moins de 36 mètres de vous\n\nVous pouvez changer l'eau dans la zone en glace, et vice versa, et vous pouvez remodeler la glace dans la zone de la façon dont vous le souhaitez\n\nVous pouvez augmenter ou réduire le niveau d'élévation de la glace, créer ou remplir une tranchée, ériger ou abattre un mur, ou créer un pilier\n\nL'ampleur de tous ces changements ne peut pas dépasser la moitié de la plus grande dimension de la zone ciblée. Par exemple, si vous ciblez une surface carrée de 9 mètres de côté, vous pouvez créer un pilier allant jusqu'à 4,50 mètres de haut, augmenter ou réduire le niveau d'élévation de ce carré de 4,50 mètres, creuser une tranchée profonde de 4,50 mètres, etc\n\nVous ne pouvez pas modeler la glace de sorte à créer un piège ou à bloquer une créature dans la zone", Category.TechniqueElementaire, "is_IceShaping", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat));
      learnableDictionary.Add(CustomSkill.MonkPoigneDuVentDuNord, new LearnableSkill(CustomSkill.MonkPoigneDuVentDuNord, "Poigne du Vent du Nord", "Reproduit les effets d'Immobilisation de Personne pour un coût de 3 Ki", Category.TechniqueElementaire, "is_HoldPers", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel:6));
      learnableDictionary.Add(CustomSkill.MonkEtreinteDeLenfer, new LearnableSkill(CustomSkill.MonkEtreinteDeLenfer, "Etreinte de l'Enfer", "Reproduit les effets de Rayon Ardent pour un coût de 3 Ki", Category.TechniqueElementaire, "is_X1Firebra", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel: 6));
      learnableDictionary.Add(CustomSkill.MonkGongDuSommet, new LearnableSkill(CustomSkill.MonkGongDuSommet, "Gong du Sommet", "Reproduit les effets de Fracassement pour un coût de 3 Ki", Category.TechniqueElementaire, "is_Shatter", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel: 6));
      learnableDictionary.Add(CustomSkill.MonkFlammesDuPhenix, new LearnableSkill(CustomSkill.MonkFlammesDuPhenix, "Flammes du Phénix", "Reproduit les effets de Boule de Feu pour un coût de 4 Ki", Category.TechniqueElementaire, "is_Fireball", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel: 11));
      learnableDictionary.Add(CustomSkill.MonkPostureBrumeuse, new LearnableSkill(CustomSkill.MonkPostureBrumeuse, "Posture Brumeuse", "Reproduit les effets de Forme Gazeuse pour un coût de 4 Ki", Category.TechniqueElementaire, "is_GazForm", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel: 11));
      learnableDictionary.Add(CustomSkill.MonkPorteParLeVent, new LearnableSkill(CustomSkill.MonkPorteParLeVent, "Porté par le Vent", "Note : Uniquement utilisable en rp ou animation\n\nVous disposez d'une vitesse de vol égale à votre vitesse de déplacement\n\nRequiert concentration\n\nCoût : 4 Ki", Category.TechniqueElementaire, "is_Fly", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel: 11));
      learnableDictionary.Add(CustomSkill.MonkDefenseDeLaMontagne, new LearnableSkill(CustomSkill.MonkDefenseDeLaMontagne, "Défense de la Montagne", "Reproduit les effets de Peau de Pierre pour un coût de 5 Ki", Category.TechniqueElementaire, "is_Stoneskn", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel: 17));
      learnableDictionary.Add(CustomSkill.MonkTorrentDeFlammes, new LearnableSkill(CustomSkill.MonkTorrentDeFlammes, "Torrent de Flammes", "Reproduit les effets de Mur de Feu pour un coût de 5 Ki", Category.TechniqueElementaire, "is_WallFire", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel: 17));
      learnableDictionary.Add(CustomSkill.MonkVagueDeTerre, new LearnableSkill(CustomSkill.MonkVagueDeTerre, "Vague de Terre", "Reproduit les effets de Mur de Pierre pour un coût de 6 Ki", Category.TechniqueElementaire, "is_WallStone", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel: 17));
      learnableDictionary.Add(CustomSkill.MonkSouffleDeLhiver, new LearnableSkill(CustomSkill.MonkSouffleDeLhiver, "Souffle de l'Hiver", "Reproduit les effets de Cône de Froid pour un coût de 6 Ki", Category.TechniqueElementaire, "is_ConeCold", 1, 1, Ability.Wisdom, Ability.Dexterity, OnLearnKiFeat, minLevel: 17));
      learnableDictionary.Add(CustomSkill.MonkIncantationElementaire, new LearnableSkill(CustomSkill.MonkIncantationElementaire, "Incantation Elémentaire", "Vous approfondissez votre affinité avec le Ki élémentaire\n- Poing des Quatre Tonnerres : +1d8\n- Poing de l'Air : +1d10\n- Frappe des Cendres : +1d6\n- Frappe de la Tempête : +1d10\n- Fouet de l'Onde : +1d10\n- Gong du Sommet : +1d8\n- Poigne du Vent du Nord : +1 cible\n- Etreinte de l'Enfer : +1 cible", Category.MindBody, "is_ElemCasting", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Wizard, new LearnableSkill(CustomSkill.Wizard, "Magicien", "", Category.Class, "wizard", 3, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1ymEMqm6nx6CsYoEktRjfQYm6IKs3XmG5a-abbOcdtUU"));
      learnableDictionary.Add(CustomSkill.WizardRestaurationArcanique, new LearnableSkill(CustomSkill.WizardRestaurationArcanique, "Restauration Arcanique", "Si vous n'êtes pas en combat, choisissez un niveau de sort pour lequel vous souhaitez récuperer des emplacements\nNombre de charges : la moitié de votre niveau de magicien\nCharges récupérées à chaque repos long", Category.Magic, "is_ArcaneRecover", 1, 1, Ability.Intelligence, Ability.Wisdom, OnLearnRestaurationArcanique));

      learnableDictionary.Add(CustomSkill.WizardAbjuration, new LearnableSkill(CustomSkill.WizardAbjuration, "Ecole - Abjuration", "", Category.WizardSubClass, "abjuration", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1R9MbWOTrYAeeVTEIcXvQ1tM_MltYnyNgHXvqXGo8K_E"));
      learnableDictionary.Add(CustomSkill.AbjurationWard, new LearnableSkill(CustomSkill.AbjurationWard, "Protection Arcanique", "Vous disposez d'une protection dont l'intensité maximale est de 2x votre level de mage\nChaque fois que vous lancez un sort d'abjuration, l'intensité augmente d'une valeur correspondant au niveau du sort\nChaque fois que vous subissez des dégâts, la protection annule des dégâts correspondant à son niveau d'intensité actuel et l'intensité diminue de 1\nA chaque repos long, l'intensité se réinitialise à un niveau correspondant à votre level de mage", Category.Magic, "is_AbjWard", 1, 1, Ability.Intelligence, Ability.Wisdom, OnLearnAbjurationWard));
      learnableDictionary.Add(CustomSkill.AbjurationWardProjetee, new LearnableSkill(CustomSkill.AbjurationWardProjetee, "Protection Projetée", "Action bonus\nL'allié ciblé bénéficie des effets de Protection Arcanique à votre place. Si l'allié s'éloigne de plus de 9m, alors il perd l'effet et vous en récupérez le bénéfice", Category.Magic, "is_AbjWardPrj", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AbjurationImproved, new LearnableSkill(CustomSkill.AbjurationImproved, "Abjuration Supérieure", "Lorsque vous prenez un repos court, l'intensité de Protection Arcanique est doublée", Category.Magic, "is_ImpAbjuration", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AbjurationSpellResistance, new LearnableSkill(CustomSkill.AbjurationSpellResistance, "Résistance aux sorts", "Vous avez l'avantage sur vos jets de sauvegarde contre les sorts et obtenez résistance contre les dégâts des sorts", Category.Magic, "ife_hardspel", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.WizardDivination, new LearnableSkill(CustomSkill.WizardDivination, "Ecole - Divination", "", Category.WizardSubClass, "divination", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1hfNBRd6kJ4O54ck79fYaTsDYcXsUCsvl_O5FKYfIOY8"));
      learnableDictionary.Add(CustomSkill.DivinationPresage, new LearnableSkill(CustomSkill.DivinationPresage, "Présage", "A chaque repos long, vous lancez 2 dés et conservez ces jets anticipés\n\nVous pouvez utilisez une action bonus pour remplacer le prochain jet de la cible par le dés de votre choix\n\nNote : en animation, pensez bien à annoncer le présage AVANT que la cible ne fasse son jet et sur quel type de jet vous souhaitez l'appliquer", Category.Magic, "is_Presage", 1, 1, Ability.Intelligence, Ability.Wisdom, OnLearnDivinationPresage));
      learnableDictionary.Add(CustomSkill.DivinationPresage2, new LearnableSkill(CustomSkill.DivinationPresage2, "Présage", "A chaque repos long, vous lancez 2 dés et conservez ces jets anticipés\n\nVous pouvez utilisez une action bonus pour remplacer le prochain jet de la cible par le dés de votre choix\n\nNote : en animation, pensez bien à annoncer le présage AVANT que la cible ne fasse son jet et sur quel type de jet vous souhaitez l'appliquer", Category.Magic, "is_Presage", 1, 1, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.DivinationExpert, new LearnableSkill(CustomSkill.DivinationExpert, "Devin Expert", "Lorsque vous utilisez un emplacement de sort pour lancer un sort de divination de niveau 2+, vous récupérez un emplacement de sort de niveau inférieur au sort lancé et inférieur à 6", Category.Magic, "is_DevinExpert", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DivinationDarkVision, new LearnableSkill(CustomSkill.DivinationDarkVision, "Vision dans le noir (Devin)", "Vous bénéficiez des effets du sort Vision dans le noir jusqu'à votre prochain repos long", Category.Magic, "is_DivDarkVision", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DivinationSeeInvisibility, new LearnableSkill(CustomSkill.DivinationSeeInvisibility, "Voir l'invisible (Devin)", "Vous bénéficiez des effets du sort Détection de l'invisibilité jusqu'à votre prochain repos long", Category.Magic, "is_DivSeeInvis", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DivinationSeeEthereal, new LearnableSkill(CustomSkill.DivinationSeeEthereal, "Vision éthérée (Devin)", "Vous pouvez voir dans le plan éthéré dans un rayon de 18m autour de vous jusqu'à votre prochain repos long", Category.Magic, "is_EthVis", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DivinationPresageSuperieur, new LearnableSkill(CustomSkill.DivinationPresageSuperieur, "Présage Supérieur", "Vous obtenez un troisième dé de présage", Category.Magic, "is_Presage", 1, 1, Ability.Intelligence, Ability.Wisdom, OnLearnDivinationPresageSuperieur));

      learnableDictionary.Add(CustomSkill.WizardEnchantement, new LearnableSkill(CustomSkill.WizardEnchantement, "Ecole - Enchantement", "", Category.WizardSubClass, "enchantement", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1PXUw4Ryw05MjbSPAkwAjCnleqNovo2eRusFBFgwgfPI"));
      learnableDictionary.Add(CustomSkill.EnchantementCharmeInstinctif, new LearnableSkill(CustomSkill.EnchantementCharmeInstinctif, "Charme Instinctif (Enchanteur)", "Réaction\n\nLorsqu'une créature vous attaque vous utilisez votre réaction afin de dévier l'attaque vers une autre créature à moins de 2m de vous\n\nUne même créature ne peut être affectée par Charme Instinctif qu'une fois par repos court", Category.Magic, "is_CharmInstinct", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnchantementRegardHypnotique, new LearnableSkill(CustomSkill.EnchantementRegardHypnotique, "Regard Hypnotique (Enchanteur)", "Concentration\n\n Si La créature ciblée échoue un JDS de sagesse, elle devient incapable de se déplacer et d'agir\n\nPortée : mêlée\n\nL'effet prend fin si vous n'êtes plus à portée de mêlée de la cible si celle-ci subit des dégâts ou si vous cessez de vous concentrer\n\nVous ne pouvez tenter une hypnose qu'une fois par repos long contre la même créature", Category.Magic, "is_HypnoGaze", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnchantementPartage, new LearnableSkill(CustomSkill.EnchantementPartage, "Enchantement Partagé (Enchanteur)", "Lorsque vous lancez un sort d'enchantement mono-cible, vous pouvez choisir de cibler une seconde créature", Category.Magic, "is_SplitEnchant", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnchantementAlterationMemorielle, new LearnableSkill(CustomSkill.EnchantementAlterationMemorielle, "Altération Mémorielle (Enchanteur)", "Lorsque plusieurs créatures sont soumises à vos effets de charme, vous pouvez choisir l'une d'entre elle qui ne sera pas consciente d'avoir subi l'effet d'un sort\n\nVous pouvez faire oublier à cette créature une une partie du temps durant lequel elle a été charmée (max 1 h + mod CHA (min 1), JDS INT)\n\nNote : Uniquement utile en animation", Category.Magic, "ife_stillmind", 1, 1, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.WizardEvocation, new LearnableSkill(CustomSkill.WizardEvocation, "Ecole - Evocation", "", Category.WizardSubClass, "evocation", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1MltSvd-ow_KVYm-8MMprdwYdfQQtf04zflKl7kGyoB8"));
      learnableDictionary.Add(CustomSkill.EvocateurFaconneurDeSorts, new LearnableSkill(CustomSkill.EvocateurFaconneurDeSorts, "Façonneur de sorts (Evocateur)", "Vos alliés ne sont pas affectés par les effets négatifs de vos sorts d'évocation", Category.Magic, "is_SculptSpells", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EvocateurToursPuissants, new LearnableSkill(CustomSkill.EvocateurToursPuissants, "Tours puissants (Evocateur)", "Vos tours de magie infligent la moitié de leurs dégâts, même si la cible réussit son jet de sauvegarde", Category.Magic, "is_TourPuissant", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EvocateurSuperieur, new LearnableSkill(CustomSkill.EvocateurSuperieur, "Evocateur Supérieur", "Vous ajoutez votre modificateur d'intelligence aux jets dégâts de vos sorts d'évocation\n\n(Note : si jamais l'effet est trop puissant, cette capacité sera nerfée en ajoutant le bonus uniquement aux dégâts totaux du sort)", Category.Magic, "is_EvoImproved", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EvocateurSurcharge, new LearnableSkill(CustomSkill.EvocateurSurcharge, "Surcharge Arcanique (Evocateur)", "Lorsque vous utilisez cette capacité, votre prochain sort de niveau entre 1 et 5 inflige le maximum de dégâts possible\n\nA partir de la seconde utilisation par repos long, vous subissez 2d12 dégâts nécrotiques par niveau de sort. Ceux-ci augmentent de 1d12 par utilisation successive\n\nCes dégâts ignorent toute résistance ou immunité", Category.Magic, "is_EvoSurge", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.WizardIllusion, new LearnableSkill(CustomSkill.WizardIllusion, "Ecole - Illusion", "", Category.WizardSubClass, "illusion", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1FhC82E9mdoliQyl2KOE89nBHk53QQwXtgLNjyzgpJEU"));
      learnableDictionary.Add(CustomSkill.WizardIllusionAmelioree, new LearnableSkill(CustomSkill.WizardIllusionAmelioree, "Illusion Mineure améliorée", "Vous pouvez lancer le sort Illusion Mineure en action bonus\n\nLancer ce sort en action bonus ne brise ni l'invisibilité ni la furtivité\n\nCe sort n'utilise pas de composantes verbales\n\nEn rp, vous pouvez à la fois créer un son et un image en une seule utilisation du sort", Category.Magic, "is_MinorIlluImp", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WizardIllusionMalleable, new LearnableSkill(CustomSkill.WizardIllusionMalleable, "Illusions Malléables", "Lorsque vous lancez un sort d'illusion qui dure plus d'une minute, vous pouvez utiliser votre action pour changer la nature de l'illusion (en respectant les paramètres normaux du sort) tant que vous pouvez voir l'illusion\n\nNote : Utilisable en rp et en animation", Category.Magic, "is_SculptSpells", 1, 1, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.IllusionVoirLinvisible, new LearnableSkill(CustomSkill.IllusionVoirLinvisible, "Illusion - Détection de l'invisibilité", "Une fois par repos court, vous pouvez lancer le sort Détection de l'invisibilité sans consommer d'emplacement", Category.Magic, "is_SeeInvi", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.IllusionDouble, new LearnableSkill(CustomSkill.IllusionDouble, "Illusion - Double Illusoire", "Une fois par repos court, vous pouvez utiliser votre réaction afin de faire échouer la prochaine attaque portée contre vous", Category.Magic, "is_IllusorySelf", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.WizardRealiteIllusoire, new LearnableSkill(CustomSkill.WizardRealiteIllusoire, "Illusion - Réalité Illusoire", "Lorsque vous lancez un sort d'illusion de niveau 1+, vous pouvez rendre réel pendant 1 minute un objet inanimé non magique\n\n  L'objet ne peut pas infliger de dégâts ou nuire directement à quiconque\n\nNote : Utile uniquement en rp et en animation", Category.Magic, "ife_foc_spel", 1, 1, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.WizardInvocation, new LearnableSkill(CustomSkill.WizardInvocation, "Ecole - Invocation", "", Category.WizardSubClass, "invocation", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1FSP_upDOMeg9i-f3kCBz6oPhRqaFv5shYtW7MjcW5oc"));
      learnableDictionary.Add(CustomSkill.InvocationMineure, new LearnableSkill(CustomSkill.InvocationMineure, "Invocation Mineure", "Vous pouvez invoquer un objet inanimé dans un rayon de 3m\n\nCet objet ne peut pas avoir plus d'1 mètre de côté et ne peut pas peser plus 5 kg\n\nSa forme doit être celle d'un objet non magique que vous avez déjà vu\n\nL'objet disparaît après 1 heure, si vous en invoquez un autre, s'il subi ou inflige des dégâts\n\nNote : Utile uniquement en rp et animation", Category.Magic, "is_InvoMineur", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.InvocationPermutation, new LearnableSkill(CustomSkill.InvocationPermutation, "Invocation - Permutation", "Vous vous téléportez à une distance de 9m sur un espace inoccupé que vous pouvez voir ou échangez de place avec l'allié ciblé", Category.Magic, "is_Transpo", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.InvocationConcentration, new LearnableSkill(CustomSkill.InvocationConcentration, "Invocation - Concentration Suprême", "Lorsque vous vous concentrez sur un sort d'invocation, celle-ci ne peut plus être brisée par des dégâts", Category.Magic, "is_FocusConju", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.InvocationSupreme, new LearnableSkill(CustomSkill.InvocationSupreme, "Invocation Suprême", "Vos créatures invoquées bénéficient de 30 points de vie temporaires", Category.Magic, "is_InvoSupreme", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.WizardNecromancie, new LearnableSkill(CustomSkill.WizardNecromancie, "Ecole - Nécromancie", "", Category.WizardSubClass, "necromancie", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1Mb9YuAl0QiajconTQ32cnLYmwho_YS8EdTA7AF-tU0I"));
      learnableDictionary.Add(CustomSkill.NecromancieMoissonDuFiel, new LearnableSkill(CustomSkill.NecromancieMoissonDuFiel, "Nécromancie - Moisson du Fiel", "Si un de vos sorts de niveau 1+ tue une créature vivante, vous êtes soigné d'un nombre de points de vie égal à 2x le niveau du sort (3x s'il s'agit d'un sort de nécromancie)", Category.Magic, "is_GrimHarvest", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.NecromancieUndeadThralls, new LearnableSkill(CustomSkill.NecromancieUndeadThralls, "Nécromancie - Serviteurs mort-vivants", "Vous apprenez le sort Animation des Morts\n\nAnimation des Morts anime un cadavre supplémentaire\n\nLes morts-vivants animés par vos sorts de nécromancie ajoutent votre niveau de magicien à leurs PV et votre bonus de maîtrise à leurs jets de dégâts", Category.Magic, "is_UndeadThralls", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.NecromancieInsensible, new LearnableSkill(CustomSkill.NecromancieInsensible, "Nécromancie - Insensible", "Vous obtenez la résistance aux dégâts nécrotiques\n\nVotre maximum de points de vie ne peut pas être réduit", Category.Magic, "is_Insensible", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.NecromancieUndeadControl, new LearnableSkill(CustomSkill.NecromancieUndeadControl, "Nécromancie - Contrôle des mort-vivants", "Si le mort-vivant ciblé échoue son JDS de charisme, il vous obéit\n\nSi la cible réussit son JDS, elle devient immunisée à votre contrôle\n\nSi la cible a plus de 8 d'intelligence, elle a l'avantage sur son JDS\n\nSi la cible a plus de 12 d'intelligence, elle tente un nouveau JDS toutes les heures", Category.Magic, "is_ConUnd", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.WizardTransmutation, new LearnableSkill(CustomSkill.WizardTransmutation, "Ecole - Transmutation", "", Category.WizardSubClass, "transmutation", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1W5CHtTiH0L-4i703SuxxK08kZEtX3HDMXFiHXJ9HG2E"));
      learnableDictionary.Add(CustomSkill.TransmutationAlchimieMineure, new LearnableSkill(CustomSkill.TransmutationAlchimieMineure, "Transmutation - Alchimie Mineure", "Vous pouvez transformer un objet entièrement composé de bois, pierre, fer, cuivre ou argent en un autre de ces matériaux\n\nIl vous faut 10 minutes pour transformer un cube de 30 cm d'arrête de matériaux\n\nAu bout d'une heure ou si vous perdez votre concentration, la matière retrouve sa substance d'origine\n\nNote : Utile uniquemenet en rp et animation", Category.Magic, "is_TransAlchimie", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TransmutationStone, new LearnableSkill(CustomSkill.TransmutationStone, "Pierre de Transmutation", "Vous pouvez passer 8h à créer une pierre de transmutation. Chaque fois que vous lancez un sort de transmutation de niveau 1+, vous pouvez lui donner un nouvel effet à la pierre parmi :\n  - Vitesse de déplacement +30%\n  - Résistance à l'acide, froid, feu, électricité ou foudre (au choix)\n  - Vision dans le noir (18m)\n  - Maîtrise des JDS CON\n\nLa créature en possession de la pierre bénéficie de l'effet choisi\n\nSi vous créez une nouvelle pierre, la précédente perd son effet", Category.Magic, "is_TranStone", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TransmutationMetamorphose, new LearnableSkill(CustomSkill.TransmutationMetamorphose, "Transmutation - Métamorphe", "Vous apprenez le sort Métamorphose\n\nUne fois par repos court, ce sort ne vous coûte pas d'emplacement si vous vous ciblez vous-même et que vous vous transformez en une bête de FP1-", Category.Magic, "is_TransMeta", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TransmutationMaitre, new LearnableSkill(CustomSkill.TransmutationMaitre, "Transmutation - Maître", "Vous pouvez consumer d'un seul coup toute l'énergie de votre pierre de transmutation afin de produire l'un des effets ci-dessous\n  - Jouvence : L'âge apparent de la créature consentante ciblée de 3d10 années jusqu'à un minimum de 18 ans. N'augmente pas l'espérance de vie\n  - Panacée : Guérit la créature ciblée de toutes les maladies, malédictions et poisons\n  - Restitution : Guérit la créature ciblée d'un effet négatif majeur de KO et lui rend tous ses points de vie\n  - Transformation majeure : L'objet non-magique ciblé (taille max 1,5 m3) est transformé en un autre objet de taille et masse similaire et d'une valeur inférieure. Nécessite 10 minutes de concentration", Category.Magic, "is_TransMaster", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.RogueArcaneTrickster, new LearnableSkill(CustomSkill.RogueArcaneTrickster, "Escroc Arcanique", "", Category.RogueSubClass, "arcane_trickster", 20, 1, Ability.Dexterity, Ability.Intelligence, Rogue.LevelUp, "1i1qrycz6Frk3uJ6FWgXuyjbIqY8fO8eMyO6ITi5W4H8"));
      learnableDictionary.Add(CustomSkill.ArcaneTricksterMagicalAmbush, new LearnableSkill(CustomSkill.ArcaneTricksterMagicalAmbush, "Embuscade Arcanique", "Les ennemis qui ne peuvent pas vous voir ont un désavantage sur les jets de sauvegarde contre vos sorts", Category.Magic, "is_MagicalAmbush", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneTricksterPolyvalent, new LearnableSkill(CustomSkill.ArcaneTricksterPolyvalent, "Escroc Polyvalent", "", Category.Magic, "is_PolyTrick", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.FighterEldritchKnight, new LearnableSkill(CustomSkill.FighterEldritchKnight, "Guerrier Occulte", "", Category.FighterSubClass, "eldritchknight", 20, 1, Ability.Constitution, Ability.Intelligence, Fighter.LevelUp, "1lLsqIE8zc66j6YxedEb6MZvhYo_Sy3FBeMsJqIc4fMQ"));
      learnableDictionary.Add(CustomSkill.EldritchKnightArmeLiee, new LearnableSkill(CustomSkill.EldritchKnightArmeLiee, "Arme Liée", "Une fois par repos court, vous pouvez choisir deux armes  auxquelles vous lier (rp parlant, la création de ce lien se fait avec un rituel d'une heure et vous devez tenir l'arme en main pendant tout le rituel)\n- Lorsque vous maniez cette arme, vous ne pouvez pas être désarmé\n- Si l'arme se trouve sur le même plan d'existence que vous, vous pouvez utiliser votre action bonus pour la téléporter dans votre main \n- Tout nouveau rituel annule le précédent", Category.Fight, "is_WeaponBond1", 1, 1, Ability.Constitution, Ability.Intelligence, OnLearnArmeLiee));
      learnableDictionary.Add(CustomSkill.EldritchKnightArmeLieeInvocation, new LearnableSkill(CustomSkill.EldritchKnightArmeLieeInvocation, "Arme Liée - Invocation", "Action bonus\n\nSi votre arme liée se trouve sur le même plan d'existence que vous, vous pouvez la téléporter dans votre main", Category.Fight, "is_WeaponSummon1", 1, 1, Ability.Constitution, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.EldritchKnightMagieDeGuerre, new LearnableSkill(CustomSkill.EldritchKnightMagieDeGuerre, "Magie de guerre", "Tant que vous êtes en train d'attaquer, vos tours de magie sont considérés comme des actions bonus\n\nA partir du niveau 18, vous n'êtes vous plus restreint aux tours de magie : tous vos sorts sont élligibles", Category.Fight, "is_WarMagic", 1, 1, Ability.Constitution, Ability.Intelligence, OnLearnMagieDeGuerre));
      learnableDictionary.Add(CustomSkill.EldritchKnightFrappeOcculte, new LearnableSkill(CustomSkill.EldritchKnightFrappeOcculte, "Frappe Occulte", "Lorsque vous touchez une créature avec une attaque d'arme, celle-ci subit un désavantage sur les jets de sauvegarde contre vos sorts pendant un round", Category.Fight, "is_EldritchStrike", 1, 1, Ability.Constitution, Ability.Intelligence, OnLearnFrappeOcculte));
      learnableDictionary.Add(CustomSkill.EldritchKnightChargeArcanique, new LearnableSkill(CustomSkill.EldritchKnightChargeArcanique, "Charge Arcanique", "Après avoir utilisé fougue, vous pouvez vous téléporter jusqu'à 9 m dans un espace inoccupé", Category.Fight, "is_ArcaneCharge", 1, 1, Ability.Constitution, Ability.Intelligence, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Bard, new LearnableSkill(CustomSkill.Bard, "Barde", "", Category.Class, "bard", 3, 1, Ability.Charisma, Ability.Dexterity, Bard.LevelUp, "1aXLSIaVPxH-_YiPs7kI2ix7aeCKV7fyeH0bcdKR54-s"));
      learnableDictionary.Add(CustomSkill.BardInspiration, new LearnableSkill(CustomSkill.BardInspiration, "Inspiration Bardique", "Action bonus\n\nLe prochain jet d'attaque, de sauvegarde ou de compétence que la créature ciblée (autre que vous même) aurait échoué sans votre aide bénéficie de votre bonus d'inspiration\n\n- Bonus d'inspiration : +1d6 au niveau 1, +1d8 au niveau 5, +1d10 au niveau 10, +1d12 au niveau 15\n\nDurée : 1 heure ou jusqu'à utilisation\n\nA chaque repos long, vous disposez d'un nombre d'utilisations égal à votre modificateur de charisme (minimum 1)", Category.Magic, "is_BardicInspi", 1, 1, Ability.Charisma, Ability.Dexterity, OnLearnInspirationBardique));
      learnableDictionary.Add(CustomSkill.ToucheATout, new LearnableSkill(CustomSkill.ToucheATout, "Touche à tout", "Vous ajoutez la moitié de votre bonus de maîtrise (arrondi à l'inférieur) aux jets de caractéristique que vous ne maîtrisez pas", Category.MindBody, "is_JackAllTrades", 1, 1, Ability.Charisma, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.SourceDinspiration, new LearnableSkill(CustomSkill.SourceDinspiration, "Source d'Inspiration", "Vous récupérez vos inspirations bardiques sur un repos court\n\nVous pouvez également sacrifier un emplacement de sort pour récupérer une Inspiration Bardique", Category.MindBody, "is_FontInspi", 1, 1, Ability.Charisma, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ContreCharme, new LearnableSkill(CustomSkill.ContreCharme, "Contre Charme", "Tant que vous êtes n'êtes pas sous l'effet de Silence, vos alliés à moins de 9 m et qui peuvent vous entendre ont l'avantage contre les effets de charmes et de peur", Category.Fight, "is_CounterCharm", 1, 1, Ability.Charisma, Ability.Dexterity, OnLearnContreCharme));
      learnableDictionary.Add(CustomSkill.SecretsMagiques, new LearnableSkill(CustomSkill.SecretsMagiques, "Secrets Magiques", "Vous pouvez également ajouter à votre répertoire de sorts connus des sorts de Clerc, de Druide ou encore de Magicien", Category.Magic, "is_MagicalSecret", 1, 1, Ability.Charisma, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BardInspirationSuperieure, new LearnableSkill(CustomSkill.BardInspirationSuperieure, "Inspiration Supérieure", "S'il vous reste moins de 2 Inspirations Bardiques au moment de lancer l'initiative pour un combat, vous en récupérez deux", Category.Fight, "is_BardicInspi", 1, 1, Ability.Charisma, Ability.Dexterity, OnLearnInspirationSuperieure));


      learnableDictionary.Add(CustomSkill.BardCollegeDuSavoir, new LearnableSkill(CustomSkill.BardCollegeDuSavoir, "Collège du Savoir", "", Category.BardSubClass, "college_lore", 20, 1, Ability.Charisma, Ability.Dexterity, Bard.LevelUp, "1XQdcTWnYkD5McVKqqMf14Y4uoPGmpHSP0Zy4rf7-V88"));
      learnableDictionary.Add(CustomSkill.MotsCinglants, new LearnableSkill(CustomSkill.MotsCinglants, "Mots Cinglants", "Action bonus\n\nLorsque vous utilisez Inspiration Bardique sur un ennemi, vous lui infligez un malus équivalent sur le prochain jet d'attaque, de sauvegarde ou de caractéristique que votre cible aurait réussi sans votre intervention", Category.Magic, "is_CutWords", 1, 1, Ability.Charisma, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BardeSavoirCompetenceSansEgale, new LearnableSkill(CustomSkill.BardeSavoirCompetenceSansEgale, "Compétence Sans Egale", "Vous pouvez utiliser Inspiration Bardique sur vous même sans utiliser aucune action", Category.Magic, "ife_X2Epbard", 1, 1, Ability.Charisma, Ability.Dexterity));

      learnableDictionary.Add(CustomSkill.BardCollegeDeLaVaillance, new LearnableSkill(CustomSkill.BardCollegeDeLaVaillance, "Collège de la Vaillance", "", Category.BardSubClass, "vaillance", 20, 1, Ability.Charisma, Ability.Dexterity, Bard.LevelUp, "1i5B3nOzSFVQFIHyZlziJ6ZJF9eoA4ijEgFWlxVBJBqQ"));
      learnableDictionary.Add(CustomSkill.DefenseVaillante, new LearnableSkill(CustomSkill.DefenseVaillante, "Défense Vaillante", "Action bonus\n\nVous utilisez une Inspiration Bardique afin d'octroyer son bonus à la CA de votre cible contre la prochaine attaque qui la cible", Category.Fight, "is_ValDefense", 1, 1, Ability.Charisma, Ability.Dexterity, OnLearnDefenseVaillante));
      learnableDictionary.Add(CustomSkill.DegatsVaillants, new LearnableSkill(CustomSkill.DegatsVaillants, "Dégâts Vaillants", "Action bonus\n\nVous utilisez une Inspiration Bardique afin d'octroyer son bonus aux prochains dégâts dégâts d'attaque de votre cible", Category.Fight, "is_ValDamage", 1, 1, Ability.Charisma, Ability.Dexterity));

      learnableDictionary.Add(CustomSkill.BardCollegeDeLescrime, new LearnableSkill(CustomSkill.BardCollegeDeLescrime, "Collège de l'Escrime", "", Category.BardSubClass, "escrime", 20, 1, Ability.Charisma, Ability.Dexterity, Bard.LevelUp, "11L6e9VaUtnEq40PJfnRYT6dJFWGPtp-13FZNNWtMHqk"));
      learnableDictionary.Add(CustomSkill.BotteDefensive, new LearnableSkill(CustomSkill.BotteDefensive, "Botte Defensive", "Action bonus\n\nSi votre prochaine attaque touche, ajoutez votre bonus d'inspiration bardique à vos dégâts sur cette attaque ainsi qu'à votre CA pendant un round\n\nCoût : une inspiration bardique", Category.Fight, "is_BotteDef", 1, 1, Ability.Charisma, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BotteTranchante, new LearnableSkill(CustomSkill.BotteTranchante, "Botte Tranchante", "Action bonus\n\nVous ajoutez votre bonus d'inspiration bardique aux dégâts de votre prochaine attaque. Vous effectuez également une attaque gratuite contre un autre ennemi à portée de mêlée\n\nCoût : une inspiration bardique", Category.Fight, "is_BotteSlash", 1, 1, Ability.Charisma, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BotteDefensiveDeMaitre, new LearnableSkill(CustomSkill.BotteDefensiveDeMaitre, "Botte Défensive de Maître", "Au lieu d'utiliser une Inspiration Bardique, vous pouvez utiliser 1d6 pour votre Botte Défensive", Category.Fight, "BotteDefMaster", 1, 1, Ability.Charisma, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BotteTranchanteDeMaitre, new LearnableSkill(CustomSkill.BotteTranchanteDeMaitre, "Botte Tranchante de Maître", "Au lieu d'utiliser une Inspiration Bardique, vous pouvez utiliser 1d6 pour votre Botte Tranchante", Category.Fight, "BotteSlashMaster", 1, 1, Ability.Charisma, Ability.Dexterity, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Ranger, new LearnableSkill(CustomSkill.Ranger, "Rôdeur", "", Category.Class, "ranger", 3, 1, Ability.Dexterity, Ability.Wisdom, Ranger.LevelUp, "1OLc0iUiM5ZvPIlJdqiEehICCDXghQucJKrRP3XXWATU")); 
      learnableDictionary.Add(CustomSkill.RangerEnnemiJuré, new LearnableSkill(CustomSkill.RangerEnnemiJuré, "Ennemi Juré", "Vous disposez du sort Marque du Chasseur toujours préparé\n\nVous pouvez le lancer 2 fois par repos long sans consommer d'emplacement de sort\n- 3x au level 5\n- 4x au level 9\n- 5x au level 13\n- 6x au level 17\n\nChanger votre Marque de cible coûte une Réaction", Category.Fight, "is_VeilKeeper", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnEnnemiJure));
      learnableDictionary.Add(CustomSkill.RangerExplorationHabile, new LearnableSkill(CustomSkill.RangerExplorationHabile, "Exploration Habile", "Gain d'une expertise de compétence parmi vos maîtrises", Category.MindBody, "is_UrbanTracker", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RangerGuerrierDruidique, new LearnableSkill(CustomSkill.RangerGuerrierDruidique, "Guerrier Druidique", "Choix de maîtrise de deux tours de magie de druide", Category.FightingStyle, "is_RangerKnight", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnGuerrierDruidique, learnablePrerequiste: new List<int>() { CustomSkill.Ranger }));
      learnableDictionary.Add(CustomSkill.RangerVagabondage, new LearnableSkill(CustomSkill.RangerVagabondage, "Vagabondage", "Votre vitesse augmente de 30 % tant que vous ne portez pas d'armure lourde", Category.MindBody, "is_MageBreaker", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnVagabondage));
      learnableDictionary.Add(CustomSkill.RangerInfatiguable, new LearnableSkill(CustomSkill.RangerInfatiguable, "Infatigable", "Vous bénéficiez d'1d8 + modification de Sagesse (min 1) points de vie temporaires. Utilisable à hauteur de votre modificateur de sagesse (min 1) par repos long", Category.MindBody, "is_FireWanderer", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnInfatiguable));
      learnableDictionary.Add(CustomSkill.RangerImplacable, new LearnableSkill(CustomSkill.RangerImplacable, "Chasseur Impitoyable", "Si vous avez une Marque du Chasseur active, vous bénéficiez d’un avantage sur vos jets de sauvegarde de Constitution pour maintenir votre Concentration", Category.MindBody, "is_RangerSaint", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RangerVoileNaturel, new LearnableSkill(CustomSkill.RangerVoileNaturel, "Voile Naturel", "Action bonus\n\nVous devenez invisible pendant 1 round. Chaque repos long, vous pouvez utiliser cette capacité un nombre de fois équivalent à votre modificateur de sagesse (min 1)", Category.MindBody, "ife_X1HideSight", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnVoileNaturel));
      learnableDictionary.Add(CustomSkill.RangerPrecis, new LearnableSkill(CustomSkill.RangerPrecis, "Chasseur Précis", "Vous avez l'avantage sur les jets d'attaque qui ciblent les créatures affectées par votre Marque du Chasseur", Category.MindBody, "is_PoisWanderer", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RangerSensSauvages, new LearnableSkill(CustomSkill.RangerSensSauvages, "Sens Sauvages", "Vous ne subissez pas de désavantage lorsque vous tentez d'attaquer une créature que vous ne pouvez pas voir", Category.MindBody, "ife_X1BliFig", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
    
      learnableDictionary.Add(CustomSkill.RangerChasseur, new LearnableSkill(CustomSkill.RangerChasseur, "Conclave des Chasseurs", "", Category.RangerSubClass, "chasseur", 20, 1, Ability.Dexterity, Ability.Wisdom, Ranger.LevelUp, "1p2EAqtXajVb9yqIiNxVoTg9c8Io1gHnRjmG7HzzdIU8"));
      learnableDictionary.Add(CustomSkill.RangerBelluaire, new LearnableSkill(CustomSkill.RangerBelluaire, "Conclave des Belluaires", "", Category.RangerSubClass, "conclave_betes", 20, 1, Ability.Dexterity, Ability.Wisdom, Ranger.LevelUp, "1NgRb4wzFGfsx4Kp7YQGETXUlRrQpR6i7LQKKhwod7Oc"));
      learnableDictionary.Add(CustomSkill.RangerProfondeurs, new LearnableSkill(CustomSkill.RangerProfondeurs, "Conclave des Profondeurs", "", Category.RangerSubClass, "profondeurs", 20, 1, Ability.Dexterity, Ability.Wisdom, Ranger.LevelUp, "1P4uNuoQmIKHpYOJ5fEJ-3Kk-KZfp_bWBystc14hqKu4"));

      learnableDictionary.Add(CustomSkill.ChasseurMythes, new LearnableSkill(CustomSkill.ChasseurMythes, "Mythes des Chasseurs", "Vous pouvez déterminer les immunités, résistances et vulnérabilités de la créature affectée par votre Marque du Chasseur", Category.MindBody, "is_BeastTamer", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ChasseurProie, new LearnableSkill(CustomSkill.ChasseurProie, "Proie du Chasseur", "À chaque repos court, vous pouvez activer l'un des effets ci-dessous\n- Briseur de horde : Une fois par round, lorsque vous attaquez avec une arme, vous bénéficiez d'une attaque supplémentaire contre une autre créature située à moins de 3 m de la cible initiale\n- Pourfendeur de colosses : Une fois par round, l'une de vos attaques avec une arme inflige 1d8 dégâts supplémentaires aux cibles auxquelles il manquent des points de vie", Category.Fight, "is_GiantKiller", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.ChasseurTactiquesDefensives, new LearnableSkill(CustomSkill.ChasseurTactiquesDefensives, "Tactiques Défensives", "À chaque repos court, vous pouvez activer l'un des effets ci-dessous\n- Échapper à la horde : Les attaques d'opportunités qui vous ciblent ont un désavantage\n- Défense adaptative : Si une créature vous inflige des dégâts, celle se voit un infliger un désavantage sur ses prochaines contre vous pendant 1 round", Category.Fight, "is_MoralDacier", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.ChasseurVolee, new LearnableSkill(CustomSkill.ChasseurVolee, "Volée", "Lorsque vous infligez des dégâts à une créature sous l'effet de votre Marque du Chasseur, vous infligez également ces dégâts à une autre créature ennemie à moins de 9 m de votre cible", Category.Magic, "is_Volee", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ChasseurDefenseSuperieure, new LearnableSkill(CustomSkill.ChasseurDefenseSuperieure, "Défense Supérieure", "La première fois que vous subissez des dégâts au cours d'un round, vous devenez résistant à ce type dégâts pendant un round", Category.Fight, NwFeat.FromFeatType(Feat.UncannyDodge1).IconResRef, 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      
      learnableDictionary.Add(CustomSkill.EsquiveSurnaturelle, new LearnableSkill(CustomSkill.EsquiveSurnaturelle, "Esquive Totale", "Lorsque vous devez effectuer un jet de sauvegarde de dextérité qui permet de ne prendre que la moitié des dégâts, vous n'en subissez aucun si vous le réussissez et la moitié si vous échouez", Category.HunterDefenseSuperieure, NwFeat.FromFeatType(Feat.ImprovedEvasion).IconResRef, 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnEsquiveTotale));
      learnableDictionary.Add(CustomSkill.EsquiveInstinctive, new LearnableSkill(CustomSkill.EsquiveInstinctive, "Esquive Instinctive", "Vous utilisez automatiquement votre réaction pour réduire de moitié les dégâts qu'un attaquant vous inflige", Category.HunterDefenseSuperieure, NwFeat.FromFeatType(Feat.UncannyDodge1).IconResRef, 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      
      learnableDictionary.Add(CustomSkill.TraqueurRedoutable, new LearnableSkill(CustomSkill.TraqueurRedoutable, "Traqueur Redoutable", "Lorsque vous entrez en combat, vous obtenez +30 % de vitesse de déplacement pendant un round\n\nVous pouvez vous rendre invisible tant que vous n'êtes pas en pleine lumière\n\nVous pouvez utiliser Se Dissimuler en tant qu'action bonus", Category.MindBody, "is_DreadAmbusher", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnTraqueurRedoutable));
      learnableDictionary.Add(CustomSkill.ProfondeursFrappeRedoutable, new LearnableSkill(CustomSkill.ProfondeursFrappeRedoutable, "Frappe Redoutable", "Votre prochaine attaque qui porte inflige 2d6 dégâts supplémentaires\n\nUtilisable un nombre de fois équivalent à votre modificateur de sagesse par repos long", Category.Fight, "is_DreadAmbusher", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnFrappeRedoutable));
      learnableDictionary.Add(CustomSkill.TraqueurLinceulDombre, new LearnableSkill(CustomSkill.TraqueurLinceulDombre, "Linceul d'Ombre (rôdeur)", "Si vous êtes dans une zone sombre, vous devenez invisible pour 10 rounds\n\nTechniquement, pour le moment : ne fonctionne que la nuit ou en intérieur", Category.Fight, "is_ShadowCloak", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.TraqueurRafale, new LearnableSkill(CustomSkill.TraqueurRafale, "Rafale du Traqueur", "Une fois par round, lorsque vous manquez une attaque, vous effectuez une attaque supplémentaire\n\nLes dégâts de votre frappe redoutable passent à 2d8", Category.Fight, "is_StalkerFlurry", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TraqueurEsquive, new LearnableSkill(CustomSkill.TraqueurEsquive, "Esquive du Traqueur", "Une fois par round, lorsqu'une créature vous attaque vous utilisez votre réaction afin de lui imposer un désavantage", Category.Fight, "ife_X2EpicDodge", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      
      learnableDictionary.Add(CustomSkill.BelluaireCompagnonAnimal, new LearnableSkill(CustomSkill.BelluaireCompagnonAnimal, "Compagnon Animal", "Invoque un compagnon animal de votre choix en lui rendant ses pleines capacités de combat\n\nConsomme un emplacement de sort", Category.BelluaireCompanion, "is_AnimalComp", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.BelluaireAttaqueCoordonnee, new LearnableSkill(CustomSkill.BelluaireAttaqueCoordonnee, "Attaque Coordonnée", "Lorsque vous attaquez, votre compagnon bénéficie d'une attaque supplémentaire", Category.Fight, "is_AttackCoord", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireDefenseDeLaBeteSuperieure, new LearnableSkill(CustomSkill.BelluaireDefenseDeLaBeteSuperieure, "Défense de la Bête supérieure", "Lorsqu'il subit des dégâts, votre compagnon utilise sa réaction afin de les réduire de moitié", Category.Fight, "is_BeastDefSup", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireFurieBestiale, new LearnableSkill(CustomSkill.BelluaireFurieBestiale, "Furie Bestiale", "Votre compagnon utilise son action pour réaliser une attaque de corps à corps contre tous les ennemis à portée de mêlée", Category.Fight, "is_BestialFury", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireEntrainementExceptionnel, new LearnableSkill(CustomSkill.BelluaireEntrainementExceptionnel, "Entrainement Exceptionnel", "Lorsque vous utilisez Sprint, Désengagement ou Esquive, votre créature bénéficie également de ces effets", Category.MindBody, "is_BeastDef", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.BelluaireRugissementProvoquant, new LearnableSkill(CustomSkill.BelluaireRugissementProvoquant, "Rugissement Provocant : Compagnon", "Votre compagnon laisse entendre un rugissement. Tous les ennemis à moins de 9 m qui échouent leur jet de sagesse sont affectés par la provocation pendant 2 tours\n\nLeurs attaques non dirigées vers l'ours subissent un désavantage\n\nCooldown : 10 rounds", Category.Fight, "is_GoadingRoar", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluairePatteMielleuse, new LearnableSkill(CustomSkill.BelluairePatteMielleuse, "Patte Mielleuse : Compagnon", "Action bonus\n\nSi elle touche, la prochaine attaque de votre compagnon désarme sa cible pour 1 round. Si celle-ci ne porte pas d'arme et est de taille inférieure à G, elle est renversée pendant un round", Category.Fight, "is_HoneyedPaws", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireChargeSanglier, new LearnableSkill(CustomSkill.BelluaireChargeSanglier, "Charge du Sanglier : Compagnon", "Votre compagnon charge la créature ciblée infligeant 1d4+1 dégâts tranchants aux créatures rencontrées et les renversant si elles échouent leur jet de sauvegarde de force", Category.Fight, "is_BoarCharge", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireRageSanglier, new LearnableSkill(CustomSkill.BelluaireRageSanglier, "Rage du Sanglier : Compagnon", "Votre compagnon entre en rage pendant 10 rounds et gagne une attaque supplémentaire, un bonus de 2 à ses dégâts d'attaque ainsi que la résistance aux dégâts physiques et l'avantage sur ses jets de sauvegarde\n\nLa rage prend fin si votre compagnon ne subit ou n'inflige pas de dégâts durant un round", Category.Fight, "is_BoarCharge", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireCorbeauAveuglement, new LearnableSkill(CustomSkill.BelluaireCorbeauAveuglement, "Aveuglement : Compagnon", "Action bonus\n\nSi la prochaine attaque de votre compagnon touche, elle inflige l'aveuglement pour 2 rounds", Category.Fight, "is_RavenBlind", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireCorbeauMauvaisAugure, new LearnableSkill(CustomSkill.BelluaireCorbeauMauvaisAugure, "Mauvais Augure : Compagnon", "Votre compagnon prononce un augure contre la créature ciblée. Si celle-ci échoue son jet de sauvegarde de sagesse, elle subit 2d8 dégâts perçants, toutes les attaques effectuées contre elles bénéficient d'un avantage pendant 2 rounds\n\nSi la créature réussit son jet de sauvegarde, elle subit tout de même la moitié des dégâts", Category.Fight, "is_RavenBadOmen", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireLoupMorsurePlongeante, new LearnableSkill(CustomSkill.BelluaireLoupMorsurePlongeante, "Morsure Plongeante : Compagnon", "Action bonus\n\nSi la prochaine attaque de votre compagnon touche sa cible et que cette dernière est de taille inférieure à G, alors elle est renversée", Category.Fight, "is_WolfBite", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireLoupEffetDeMeute, new LearnableSkill(CustomSkill.BelluaireLoupEffetDeMeute, "Effet de Meute : Compagnon", "Si vous et votre compagnon attaquez la même cible, alors les attaques de celui-ci se font avec avantage", Category.Fight, "is_WolfPack", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireLoupMorsureInfectieuse, new LearnableSkill(CustomSkill.BelluaireLoupMorsureInfectieuse, "Morsure Infectieuse : Compagnon", "La morsure de votre compagnon inflige désormais des dégâts nécrotiques plutôt que perçants ainsi qu'un désavantage aux jets de constitution pendant un round", Category.MindBody, "is_WolfInfectious", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireSpiderWeb, new LearnableSkill(CustomSkill.BelluaireSpiderWeb, "Toile : Compagnon", "Votre compagnon lance une toile à l'emplacement ciblé", Category.Magic, "is_SpiderWeb", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BelluaireSpiderCocoon, new LearnableSkill(CustomSkill.BelluaireSpiderCocoon, "Cocon : Compagnon", "Votre compagnon piège la cible dans un cocon pour une durée de 3 rounds si celle-ci échoue un jet de sauvegarde de dextérité\n\nChaque round, la créature affectée peut tenter un jet de sauvegarde de force pour briser le cocon\n\nTout dégât infligé à la créature détruit le cocon et met fin à l'effet", Category.Magic, "is_SpiderCocoon", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Paladin, new LearnableSkill(CustomSkill.Paladin, "Paladin", "", Category.Class, "paladin", 3, 1, Ability.Strength, Ability.Charisma, Paladin.LevelUp, "1H1cfnGqWorxGb70xsXyovIimdablMrdkEA4EUxvB_gE"));
      learnableDictionary.Add(CustomSkill.ImpositionDesMains, new LearnableSkill(CustomSkill.ImpositionDesMains, "Imposition des Mains", "Action Bonus\n\nVous pouvez utiliser l'une des trois versions ci-dessous :\n- Mineure : Soigne de 2 fois votre niveau de paladin. Coût : 1 charge\n- Majeure : Soigne de 4 fois votre niveau de paladin. Coût : 2 charges\n- Guérison : Guérit des  poisons. Coût : 2 charges", Category.Magic, "is_LayHandsMax", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnImpositionDesMains));
      learnableDictionary.Add(CustomSkill.SensDivin, new LearnableSkill(CustomSkill.SensDivin, "Sens Divin", "Action bonus\n\nPour 2 rounds, vos attaques ont l'avantage contre les fiélons, les célestes et les morts-vivants\nUtilise une canalisation de serment\n\nEn animation, vous pouvez percevoir la présence de tout extérieur, mort-vivant et objet consacré ou profané dans un rayon de 20 m pendant 10 minutes", Category.Fight, "is_DivineSense", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.CombattantBeni, new LearnableSkill(CustomSkill.CombattantBeni, "Combattant Béni", "Choix de maîtrise de deux tours de magie de clerc", Category.FightingStyle, "is_RangerKnight", 1, 1, Ability.Charisma, Ability.Wisdom, OnLearnCombattantBeni, learnablePrerequiste: new List<int>() { CustomSkill.Paladin }));
      learnableDictionary.Add(CustomSkill.ChatimentDivin, new LearnableSkill(CustomSkill.ChatimentDivin, "Châtiment Divin", "Vous consommez un emplacement de sort de niveau 1 pour ajouter 2d8 dégâts radiants à votre prochaine attaque qui porte\n- +1d8 par niveau d'emplacement de sort consommé au delà du niveau 1 (max 5d8)\n- +1d8 contre les fiélons et mort-vivants", Category.Fight, "is_DivineSmite", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.PaladinConspuerEnnemi, new LearnableSkill(CustomSkill.PaladinConspuerEnnemi, "Conspuer l'Ennemi", "La cible doit réussir un JDS de sagesse ou subir l'effroi pendant 3 rounds\n\nEn cas de réussite, la vitesse de déplacement de la cible est réduite de 50 %\n\nLes extérieurs et mort-vivants ont un désavantage sur leur jet\n\nConsomme une charge de serment, récupérable sur repos court", Category.Fight, "is_AbjureEnemy", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.PaladinChatimentAmeliore, new LearnableSkill(CustomSkill.PaladinChatimentAmeliore, "Frappes Eblouissantes", "Vos attaques de mêlée infligent +1d8 dégâts divins", Category.Fight, "is_ImprovedSmite", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnChatimentAmeliore));
      learnableDictionary.Add(CustomSkill.AuraDeProtection, new LearnableSkill(CustomSkill.AuraDeProtection, "Aura de Protection", "Vous et vos alliés à moins de 3 m ajoutez votre modificateur de charisme (min +1) à vos jets de sauvegardes\n\nAu niveau 18, le rayon passe à 9 m", Category.Fight, "is_ProtAura", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAuraDeProtection));
      learnableDictionary.Add(CustomSkill.AuraDeCourage, new LearnableSkill(CustomSkill.AuraDeCourage, "Aura de Courage", "Les créatures affectées par votre Aura de Protection sont immunisées à l'Effroi", Category.Fight, "is_CourageAura", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAuraDeCourage));

      learnableDictionary.Add(CustomSkill.PaladinSermentDevotion, new LearnableSkill(CustomSkill.PaladinSermentDevotion, "Serment de Dévotion", "", Category.PaladinSubClass, "devotion", 20, 1, Ability.Strength, Ability.Charisma, Paladin.LevelUp, "1Z_FQErKCgzsKkCEHFraMyTcL5XEfZmgycORnRTT0BWw"));
      learnableDictionary.Add(CustomSkill.DevotionArmeSacree, new LearnableSkill(CustomSkill.DevotionArmeSacree, "Arme Sacrée", "Vous canalisez votre serment pour ajouter votre modificateur CHA aux jets d'attaque avec l'arme ciblée (minimum +1) pour 10 minutes", Category.Fight, "is_SacredWeapon", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.DevotionSaintesRepresailles, new LearnableSkill(CustomSkill.DevotionSaintesRepresailles, "Saintes Représailles", "Vous canalisez votre serment afin que la créature ciblée bénéficie pour 2 rounds d'une aura vengeresse qui inflige 1d4 dégâts radiants à ceux qui lui portent une attaque de mêlée", Category.Fight, "is_HolyRebuke", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.DevotionRenvoiDesImpies, new LearnableSkill(CustomSkill.DevotionRenvoiDesImpies, "Renvoi des Impies", "Chaque mort-vivant et extérieur à moins de 9 m doit réussir un jet de sauvegarde de sagesse ou être renvoyée pendant 1 minute ou jusqu'à ce qu'elle subisse des dégâts (Consomme une charge de serment, récupérable sur repos court)", Category.Fight, "is_TurnUnholy", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.DevotionChatimentProtecteur, new LearnableSkill(CustomSkill.DevotionChatimentProtecteur, "Châtiment Protecteur", "Lorsque vous utilisez Châtiment Divin, vous et vos alliés qui se trouvent dans votre Aura de Protection bénéficiez de +2 CA pour 1 round", Category.Fight, "ife_divgrace", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.PaladinAuraDeDevotion, new LearnableSkill(CustomSkill.PaladinAuraDeDevotion, "Aura de Dévotion", "Les alliés affectés par votre Aura de Protection ne peuvent pas être charmés", Category.MindBody, "is_DevotionAura", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAuraDeDevotion));
      learnableDictionary.Add(CustomSkill.DevotionNimbeSacree, new LearnableSkill(CustomSkill.DevotionNimbeSacree, "Nimbe Sacrée", "Vous émettez une lumière solaire sur 9 m pendant 10 minutes\n\nLes ennemis qui commencent leur tour dans cette lumière subissent 10 dégâts radiants\n\nVous gagnez l'avantage sur vos jets de sauvegarde contre les sorts des fiélons et des mort-vivants\n\nSe recharge sur un repos long", Category.MindBody, "is_HolyNimbus", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.PaladinSermentDesAnciens, new LearnableSkill(CustomSkill.PaladinSermentDesAnciens, "Serment des Anciens", "", Category.PaladinSubClass, "anciens", 20, 1, Ability.Strength, Ability.Charisma, Paladin.LevelUp, "1rlcbc7txwL5VjUH_P_-XmzGSuYkiYypzq-tEjchqD1o"));
      learnableDictionary.Add(CustomSkill.AnciensRenvoiDesInfideles, new LearnableSkill(CustomSkill.AnciensRenvoiDesInfideles, "Renvoi des Infidèles", "Chaque créature féerique et extérieur à moins de 9 m doit réussir un jet de sauvegarde de sagesse ou être renvoyée pendant 1 minute ou jusqu'à ce qu'elle subisse des dégâts\n\nConsomme une charge de serment, récupérable sur repos court", Category.Fight, "is_TurnFaithless", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.AnciensGuerisonRayonnante, new LearnableSkill(CustomSkill.AnciensGuerisonRayonnante, "Guérison Rayonnante", "Action bonus\n\nImmédiatement et au début de votre prochain round, les alliés à moins de 3m sont soignés de votre bonus de maîtrise + niveau de paladin + modificateur de charisme\n\nConsomme une charge de serment récupérable sur repos court", Category.Fight, "is_HealRadiance", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.AnciensCourrouxDeLaNature, new LearnableSkill(CustomSkill.AnciensCourrouxDeLaNature, "Courroux de la Nature", "La cible doit réussir un jet de sauvegarde de force ou de dextérité (le plus élevé) ou être immobilisée pour 10 rounds et subir un désavantage sur ses attaques et ses jets de sauvegarde de dextérité alors que les attaques portées contre elle ont un avantage\n\n- Chaque round, la cible effectue un nouveau JDS\n- Portée 3 m\n- Consomme une charge de serment", Category.Fight, "is_NatureWrath", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.PaladinAuraDeGarde, new LearnableSkill(CustomSkill.PaladinAuraDeGarde, "Aura de Garde", "Les alliés affectés par votre Aura de Protection sont résistants aux dégâts nécrotiques, psychiques et radiants", Category.Fight, "is_GardeAura", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAuraDeGarde));
      learnableDictionary.Add(CustomSkill.PaladinSentinelleImmortelle, new LearnableSkill(CustomSkill.PaladinSentinelleImmortelle, "Sentinelle Immortelle", "La prochaine fois que vos points de vie sont réduits à 0, vous récupérez un point de vie. Une fois par repos long.\n\nDe plus, vous ne souffrez d'aucun inconvénient dû à la vieillesse et ne pouvez pas vieillir magiquement.", Category.Fight, "anciens", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnSentinelleImmortelle));
      learnableDictionary.Add(CustomSkill.AnciensChampionAntique, new LearnableSkill(CustomSkill.AnciensChampionAntique, "Champion Antique", "Action\n- Vos sorts de paladin peuvent être lancés en tant qu'actions bonus\n- Vous regagnez 10 points de vie à chaque début de round\n- Les ennemis à moins de 3m ont un désavantage contre vos sorts de paladin\n- Durée : 1 minute\n- Récupérable sur repos long", Category.Fight, "is_AncientChamp", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.PaladinSermentVengeance, new LearnableSkill(CustomSkill.PaladinSermentVengeance, "Serment de Vengeance", "", Category.PaladinSubClass, "vengeance", 20, 1, Ability.Strength, Ability.Charisma, Paladin.LevelUp, "1sTPds0J64QWNhMtusqjw3ezSgovvvvJJV9QAAu1PILg"));
      learnableDictionary.Add(CustomSkill.PaladinVoeuHostile, new LearnableSkill(CustomSkill.PaladinVoeuHostile, "Voeu d'Hostilité", "Pendant 10 secondes, vos jets d'attaque ont l'avantage sur la cible\n\nConsomme une charge de serment, récupérable sur repos court\n\nA partir du niveau 15, lorsque la créature affectée par votre voeu réalise une attaque en se trouvant à votre portée de mêlée, vous lui infligez une attaque supplémentaire", Category.Fight, "is_HostileVow", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.PaladinPuissanceInquisitrice, new LearnableSkill(CustomSkill.PaladinPuissanceInquisitrice, "Puissance Inquisitrice", "Action bonus\n\nPendant 2 rounds, vous ajoutez votre modificateur de charisme aux dégâts d'attaque de votre cible (minimum 1, dégâts radiants)\n\nCes attaques peuvent infliger l'étourdissement (1 round)\n\nConsomme une charge de serment, récupérable sur repos court", Category.Fight, "is_InquisiMight", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOathFeat));
      learnableDictionary.Add(CustomSkill.PaladinVengeurImplacable, new LearnableSkill(CustomSkill.PaladinVengeurImplacable, "Vengeur Implacable", "Lorsque vous réussissez une attaque d'opportunité, vous vous déplacez 50% plus vite pendant 1 round et réduisez à 0 la vitesse de la cible\n\nVous ne déclenchez pas d'attaque d'opportunité tant que vous êtes sous cet effet", Category.Fight, "is_VengeurImp", 1, 1, Ability.Charisma, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.AngeDeLaVengeance, new LearnableSkill(CustomSkill.AngeDeLaVengeance, "Ange de la Vengeance", "Pendant 10 minutes, les ennemis qui se trouvent à moins de 9 mètres de vous doivent réussir un jet de sagesse ou être saisis d'effroi pendant 10 rounds\n\nRécupération sur repos long", Category.Fight, "is_Avenger", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Clerc, new LearnableSkill(CustomSkill.Clerc, "Clerc", "", Category.Class, "clerc", 3, 1, Ability.Wisdom, Ability.Charisma, Clerc.LevelUp, "16J-DSpd33S_TnAqsi0pgbYDRaU_KW9uVCTm3L2n-om0"));
      learnableDictionary.Add(CustomSkill.ClercProtecteur, new LearnableSkill(CustomSkill.ClercProtecteur, "Ordre Divin - Protecteur", "Vous disposez des bases pour apprendre la maîtrise des armes martiales et des armures lourdes et les apprenez 25 % plus rapidement", Category.OrdreDivin, "is_DruidGuardian", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnClercProtecteur));
      learnableDictionary.Add(CustomSkill.ClercThaumaturge, new LearnableSkill(CustomSkill.ClercThaumaturge, "Ordre Divin - Thaumaturge", "Vous maîtrisez un tour de magie de clerc supplémentaire et ajoutez à vos jets d'Arcanes et de Religion un bonus égal à votre modificateur de Sagesse (min 1)", Category.OrdreDivin, "is_DruidSage", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnClercThaumaturge));
      learnableDictionary.Add(CustomSkill.ClercEtincelleDivine, new LearnableSkill(CustomSkill.ClercEtincelleDivine, "Etincelle Divine", "Vous utilisez votre Canalisation Divine sur une créature ciblée et lancez 1d8 + votre modificateur de Sagesse (min 1)\n- Soin :  La cible récupère un nombre de points de vie égal à votre jet\n- Dégâts : La cible doit réussir un JDS de Constitution ou subir votre jet en dégâts Radiants ou Nécrotiques au choix. En cas de réussite, elle ne subit que la moitié des dégâts", Category.Magic, "is_DivineSpark", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnEtincelleDivine));
      learnableDictionary.Add(CustomSkill.ClercRenvoiDesMortsVivants, new LearnableSkill(CustomSkill.ClercRenvoiDesMortsVivants, "Renvoi des morts-vivants", "Chaque mort-vivant à moins de 9 m doit réussir un jet de sauvegarde de Sagesse ou être renvoyé pendant 1 minute ou jusqu'à ce qu'il subisse des dégâts", Category.Magic, "ife_turn", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnRenvoiDesMortsVivants));
      learnableDictionary.Add(CustomSkill.ClercFrappeDivine, new LearnableSkill(CustomSkill.ClercFrappeDivine, "Frappe Divine", "Une fois par round, lorsque vous réussissez un jet d'attaque avec une arme, la créature touchée subit 1d8 dégâts supplémentaires (Radiants ou Nécrotiques au choix)\n\nA partir du niveau 14, Les dégâts passent à 2d8", Category.FrappesBenies, "is_DivineStrike", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ClercIncantationPuissante, new LearnableSkill(CustomSkill.ClercIncantationPuissante, "Incantation Puissante (Clerc)", "Ajoutez votre modificateur de sagesse aux dégâts de vos tours de magie de clerc\n\nA partir du niveau 14, lorsque vous infligez des dégâts à une créature à l'aide d'un tour de magie de clerc, vous pouvez choisir une créature à laquelle donner 2 fois votre modificateur de sagesse (min 1) en points de vie temporaires", Category.FrappesBenies, "is_PotentSpell", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnIncantationPuissante));
      learnableDictionary.Add(CustomSkill.ClercDestructionDesMortsVivants, new LearnableSkill(CustomSkill.ClercDestructionDesMortsVivants, "Destruction des morts-vivants", "Lorsque vous parvenez à renvoyer un mort-vivant, celui-ci subit 4d6 dégâts radiant", Category.Magic, "ife_xturn", 1, 1, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.ClercInterventionDivine, new LearnableSkill(CustomSkill.ClercInterventionDivine, "Intervention Divine", "Une fois par repos long, votre prochain sort de clerc de niveau inférieur à 6 et qui n'utilise pas de réaction ne consomme pas d'emplacement ni composants matériels", Category.Magic, "is_DivineInt", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.ClercDuperie, new LearnableSkill(CustomSkill.ClercDuperie, "Domaine de la Duperie", "", Category.ClercSubClass, "duperie", 20, 1, Ability.Wisdom, Ability.Charisma, Clerc.LevelUp, "1UthM868O0BfspkaDWWZgrpRNJMVFbTNRMdM8KSqpE8g"));
      learnableDictionary.Add(CustomSkill.ClercBenedictionDuFilou, new LearnableSkill(CustomSkill.ClercBenedictionDuFilou, "Bénédiction du Filou", "La créature ciblée à moins de 9 mètres a l'avantage sur ses jets de Discrétion jusqu’à votre prochain repos long, jusqu’à ce que vous utilisiez à nouveau cette capacité, ou jusqu’à ce que la cible se déconnecte", Category.Magic, "is_TrickBless", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ClercRepliqueInvoquee, new LearnableSkill(CustomSkill.ClercRepliqueInvoquee, "Réplique de Duplicité", "Concentration\n\nPendant 10 rounds, vous avez 50 % de chances d'éviter les attaques\nVos alliés ont l'avantage sur leurs attaques contre les ennemis à votre contact\nSi vous subissez des dégâts, l'effet est dissipé\nConsomme une canalisation divine\n\nL'aura passe à 6 m à partir du niveau 17", Category.Magic, "is_InvoDuplicity", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnRepliqueInvoquee));
      learnableDictionary.Add(CustomSkill.TeleportRepliqueDuplicite, new LearnableSkill(CustomSkill.TeleportRepliqueDuplicite, "Transposition du Filou", "Vous pouvez échanger de place avec votre réplique si celle-ci se trouve à moins de 40 mètres", Category.Magic, "is_InvoDuplicity", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      //learnableDictionary.Add(CustomSkill.ClercLinceulDombre, new LearnableSkill(CustomSkill.ClercLinceulDombre, "Linceul d'Ombre (clerc)", "Si vous êtes dans une zone sombre, vous devenez invisible pour 10 rounds\n\nTechniquement, pour le moment : ne fonctionne que la nuit ou en intérieur\n\nConsomme une canalisation divine", Category.Magic, "is_ShadowCloak", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnClercLinceulDombre));

      learnableDictionary.Add(CustomSkill.ClercGuerre, new LearnableSkill(CustomSkill.ClercGuerre, "Domaine de la Guerre", "", Category.ClercSubClass, "guerre", 20, 1, Ability.Wisdom, Ability.Charisma, Clerc.LevelUp, "1UthM868O0BfspkaDWWZgrpRNJMVFbTNRMdM8KSqpE8g"));
      learnableDictionary.Add(CustomSkill.ClercBenedictionDuDieuDeLaGuerre, new LearnableSkill(CustomSkill.ClercBenedictionDuDieuDeLaGuerre, "Bénédiction du  Dieu de La Guerre", "Vous pouvez lancer Bouclier de la Foi et Arme Spirituelle sans consommer d’emplacement de sort, ni nécessiter de concentration. Ces sorts durent alors 1 minute\n\nConsomme une canalisation divine", Category.Magic, "is_WarPriest", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnCanalisationFeat));
      learnableDictionary.Add(CustomSkill.ClercFrappeGuidee, new LearnableSkill(CustomSkill.ClercFrappeGuidee, "Frappe Guidée", "La créature ciblée bénéficie de +10 au prochain jet d'attaque échoué, ce qui pourrait lui permettre de le réussir\n\nCibler une autre créature que vous-même consomme votre réaction", Category.Fight, "is_GuidedStrike", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnFrappeGuidee));
      learnableDictionary.Add(CustomSkill.ClercGuerreAvatarDeBataille, new LearnableSkill(CustomSkill.ClercGuerreAvatarDeBataille, "Avatar de Bataille", "Vous obtenez la résistance aux dégâts contondants, perforants et tranchants", Category.Fight, "is_WarAvatar", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnAvatarDeBataille));

      learnableDictionary.Add(CustomSkill.ClercLumiere, new LearnableSkill(CustomSkill.ClercLumiere, "Domaine de la Lumière", "", Category.ClercSubClass, "light_domain", 20, 1, Ability.Wisdom, Ability.Charisma, Clerc.LevelUp, "19dNzT5qLJPNIgfcivIHNPP_GE_TjJ4Ho-nPRcojfYtM"));
      learnableDictionary.Add(CustomSkill.ClercIllumination, new LearnableSkill(CustomSkill.ClercIllumination, "Illumination", "La prochaine attaque qui cible la créature sélectionnée subit un désavantage\n\nCibler une créature autre que vous-même consomme une Réaction\n\nUtilisable X fois votre modificateur de sagesse par repos long", Category.Magic, "is_WardingFlare", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnIllumination));
      learnableDictionary.Add(CustomSkill.ClercRadianceDeLaube, new LearnableSkill(CustomSkill.ClercRadianceDeLaube, "Radiance de l'Aube", "- Dissipe les ténèbres magiques\n- Chaque ennemi visible, avec ligne de vue, à moins de 9 m doit réussir un JDS de Constitution ou subir 2d10 + niveau de prêtre de dégâts radiants\n- En cas de réussite du JDS, les dégâts sont divisés par 2\n- Consomme une canalisation divine", Category.Magic, "is_DawnRadiance", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnClercRadianceDeLaube));
      learnableDictionary.Add(CustomSkill.ClercHaloDeLumiere, new LearnableSkill(CustomSkill.ClercHaloDeLumiere, "Halo de Lumière", "Pendant 1 minute, tous les ennemis à moins de 18 m ont un désavantage à leurs JDS contre les sorts qui infligent des dégâts de feu ou radiants. Récupération sur repos long", Category.Magic, "is_LightHalo", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.ClercNature, new LearnableSkill(CustomSkill.ClercNature, "Domaine de la Nature", "", Category.ClercSubClass, "nature_domain", 20, 1, Ability.Wisdom, Ability.Charisma, Clerc.LevelUp, "12uhEPQ0-6DL5G-9ie4aGhJoBmVnvdVG8QyqyBRu8Zvs"));
      learnableDictionary.Add(CustomSkill.ClercCharmePlanteEtAnimaux, new LearnableSkill(CustomSkill.ClercCharmePlanteEtAnimaux, "Charme Plantes et Animaux", "Pendant 1 minute, les animaux et plantes à moins de 9 m qui échouent un jet de sagesse deviennent amicaux envers vos alliés et vous\n\nConsomme une canalisation divine", Category.Magic, "is_CharmAnimal", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnCharmePlanteEtAnimaux));
      learnableDictionary.Add(CustomSkill.ClercAttenuationElementaire, new LearnableSkill(CustomSkill.ClercAttenuationElementaire, "Atténuation Elémentaire", "Lorsque vous subissez des dégâts d'acide, feu, froid, foudre, vous utilisez votre réaction afin de les diviser par deux", Category.Magic, "is_AttenuElem", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ClercMaitreDeLaNature, new LearnableSkill(CustomSkill.ClercMaitreDeLaNature, "Maître de la Nature", "Les créatures sous l'effet de votre charme de canalisation obéissent à vos ordres", Category.Fight, "is_NatureMaster", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.ClercSavoir, new LearnableSkill(CustomSkill.ClercSavoir, "Domaine du Savoir", "", Category.ClercSubClass, "domaine_savoir", 20, 1, Ability.Wisdom, Ability.Charisma, Clerc.LevelUp, "1g1iyMlwsnFnQa3QO-gesGoq3bNA60zvbAomuRopfUg8"));
      learnableDictionary.Add(CustomSkill.ClercSavoirAncestral, new LearnableSkill(CustomSkill.ClercSavoirAncestral, "Savoir Ancestral", "Pendant 8 heures, vous gagnez la maîtrise de toutes les compétences liées à la caractéristique choisie\n\nConsomme une canalisation divine", Category.Magic, "is_SavoirAnc", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnCanalisationFeat));
      learnableDictionary.Add(CustomSkill.ClercDetectionDesPensees, new LearnableSkill(CustomSkill.ClercDetectionDesPensees, "Détection des Pensées", "Vous bénéficiez des effets du sort Détection des Pensées\n\nConsomme une canalisation divine", Category.Magic, "is_SavoirAnc", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnCanalisationFeat));
      learnableDictionary.Add(CustomSkill.ClercVisionDuPasse, new LearnableSkill(CustomSkill.ClercVisionDuPasse, "Vision du Passé", "Vous pouvez rappeler les visions du passé en relation avec un objet que vous tenez, ou proche de vous. Vous passez au moins une minute à prier et à méditer, puis vous recevez sous forme de rêve de vagues aperçus des événements récents. Vous pouvez méditer de cette manière un nombre de minutes égal votre valeur de Sagesse et devez maintenir votre concentration comme pour lancer un sort. Une fois que vous avez utilisé cette capacité, vous ne pouvez plus l'utiliser avant d'avoir terminé un repos court ou long.\n\nLecture sur un objet\n\nSi vous tenez un objet lorsque vous méditez, vous pouvez voir des visions de son précédent propriétaire. Après 1 minute de méditation, vous apprenez comment son propriétaire a acquis et perdu l'objet, ainsi que les événements importants les plus récents concernant cet objet et ce propriétaire. Si l'objet a appartenu à une autre créature dans un passé récent (un nombre de jours égal à votre valeur de Sagesse), vous pouvez passer 1 minute supplémentaire pour chaque possesseur de l'objet afin d'apprendre les mêmes informations sur ces créatures.\n\nLecture sur une zone\n\nPendant que vous méditez, vous observez des visions des environs proches (une salle, une rue, un tunnel, une clairière ou autre, d'une taille maximale d'un cube de 15 mètres d'arête) jusqu'à un nombre de jours passés égal à votre valeur de Sagesse. Pour chaque minute passée à méditer, vous apprenez des informations sur un événement important, en commençant par le plus récent. Ces événements incluent de fortes émotions telles que des batailles ou des trahisons, mariages ou meurtres, naissances et funérailles. Cependant, ils peuvent aussi inclure des événements sans importance qui sont néanmoins importants dans votre situation actuelle.", Category.Magic, "is_VisionDuPasse", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat, restoreOnShortRest:true));

      learnableDictionary.Add(CustomSkill.ClercTempete, new LearnableSkill(CustomSkill.ClercTempete, "Domaine de la Tempête", "", Category.ClercSubClass, "domaine_tempete", 20, 1, Ability.Wisdom, Ability.Charisma, Clerc.LevelUp, "1yfhpUTx-OA_wV30sXKQIqN2l2BdzcYoh2muj6xlnq2Q"));
      learnableDictionary.Add(CustomSkill.ClercFureurOuragan, new LearnableSkill(CustomSkill.ClercFureurOuragan, "Fureur de l'Ouragan", "La prochaine créature qui vous touche avec une attaque de mêlée doit réussir un jet de sauvegarde de Dextérité ou subir 2d8 dégâts d'électricité ou de tonnerre (au choix, la moitié en cas de réussite)\n\nConsomme votre réaction\n\nUtilisable une fois par modificateur de sagesse (min 1). Récupération sur repos long", Category.Magic, "thunder", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnClercFureurOuraganFoudre));
      learnableDictionary.Add(CustomSkill.ClercFureurDestructrice, new LearnableSkill(CustomSkill.ClercFureurDestructrice, "Fureur Destructrice", "La prochaine fois que vous infligez des dégâts de foudre ou de tonnerre à l'aide d'un sort, vous utilisez une canalisation divine afin d'effectuer le maximum de dégâts", Category.Magic, "is_DestruWrath", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnClercFureurDestructrice));
      learnableDictionary.Add(CustomSkill.ClercElectrocution, new LearnableSkill(CustomSkill.ClercElectrocution, "Electrocution", "Lorsque vous infligez des dégâts de foudre ou de tonnerre à une cible de taille inférieure à TG, celle-ci doit effectuer une jet de sauvegarde de constitution ou être renversée pour 1 round", Category.Magic, "is_Electrocution", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnClercElectrocution));
      learnableDictionary.Add(CustomSkill.ClercEnfantDeLaTempete, new LearnableSkill(CustomSkill.ClercEnfantDeLaTempete, "Enfant de la Tempête", "Vous obtenez une vitesse de vol égale à votre vitesse de déplacement tant que vous n'êtes ni sous terre, ni dans un intérieur\n\nValable uniquement en rp", Category.Magic, "domaine_tempete", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.ClercVie, new LearnableSkill(CustomSkill.ClercVie, "Domaine de la Vie", "", Category.ClercSubClass, "domaine_vie", 20, 1, Ability.Wisdom, Ability.Charisma, Clerc.LevelUp, "19tqn9e7qi3W1eCIfn7e-DTpw1ZVi9iEWOOQdOjefk6A"));
      learnableDictionary.Add(CustomSkill.ClercDiscipleDeLaVie, new LearnableSkill(CustomSkill.ClercDiscipleDeLaVie, "Disciple de la Vie", "Vos sorts de soins de prêtre sont renforcés de 2 + niveau du sort", Category.Magic, "is_LifeDisciple", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ClercPreservationDeLaVie, new LearnableSkill(CustomSkill.ClercPreservationDeLaVie, "Préservation de la Vie", "Sélectionnez  jusqu'à 5 créatures à moins de 9 mètres et partagez l'équivalent de 5 fois votre niveau Clerc en points de vie récupérés pour chacune des créatures ciblées\n\nConsomme une canalisation divine", Category.Magic, "is_PreserveLife", 1, 1, Ability.Wisdom, Ability.Charisma, OnLearnPreservationDeLaVie));
      learnableDictionary.Add(CustomSkill.ClercGuerriseurBeni, new LearnableSkill(CustomSkill.ClercGuerriseurBeni, "Guérisseur Béni", "Lorsque vous lancez un sort de soin de prêtre afin de guérir une autre créature que vous même, vous récupérez également 2 + niveau du sort points de vie", Category.Magic, "is_GenHealing", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ClercGuerisonSupreme, new LearnableSkill(CustomSkill.ClercGuerisonSupreme, "Guérison Suprême", "Vos sorts de prêtre rendent systématiquement le maximum de points de vie", Category.Magic, "is_DivineStrike", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Ensorceleur, new LearnableSkill(CustomSkill.Ensorceleur, "Ensorceleur", "", Category.Class, "ensorceleur", 3, 1, Ability.Wisdom, Ability.Charisma, Ensorceleur.LevelUp, "1NTe2UvSHDdrdlYHY_HCN_HbeqEoig05Kz-_foH94R2g"));
      learnableDictionary.Add(CustomSkill.SorcellerieInnee, new LearnableSkill(CustomSkill.SorcellerieInnee, "Sorcellerie Innée", "Action Bonus\n\n Pendant 1 minute, vous déchaînez votre magie intérieure\n- Vous augmentez le DD de vos sorts d'ensorceleur de 1\n-Vous avez l'avantage sur les jets d'attaques de vos sorts d'ensorceleur\n- Utilisable 2x par repos long", Category.Magic, "ensorceleur", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnsoPrudence, new LearnableSkill(CustomSkill.EnsoPrudence, "Prudence", "Vos alliés réussissent automatiquement les JDS causées par votre prochain sort et ne subissent pas de dégâts\n\nCoût : 1 source", Category.Metamagic, "is_MetaPrudent", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      //learnableDictionary.Add(CustomSkill.EnsoAllonge, new LearnableSkill(CustomSkill.EnsoAllonge, "Allonge", "En rp / animation : votre prochain sort de contact a une portée de 9 m. La portée des autres sorts qui ne sont pas de contact est doublée. En combat technique : votre prochain de sort n'a pas de restriction de portée.\n\nCoût : 1 source", Category.Metamagic, "is_MetaAllonge", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.EnsoExtension, new LearnableSkill(CustomSkill.EnsoExtension, "Extension", "La durée de votre prochain sort qui dispose d'une durée de plus d'une minute est doublée (max 24 h). Si le sort requiert de la concentration, vous avez l'avantage sur les jets de concentrations permettant de le maintenir\n\nCoût : 1 source", Category.Metamagic, "is_MetaExtend", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.EnsoAmplification, new LearnableSkill(CustomSkill.EnsoAmplification, "Amplification", "Pour votre prochain sort, un nombre de dés de dégâts égal à votre modificateur de charisme (min 1) est relancé. Les dés les plus élevés sont retenus. Cette méta-magie peut-être cumulée avec les autres\n\nCoût : 2 sources ", Category.Metamagic, "is_MetaAmplify", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.EnsoGemellite, new LearnableSkill(CustomSkill.EnsoGemellite, "Gémellité", "Gémellité : Votre prochain sort monocible à distance est répliqué sur une deuxième cible à portée. Ne fonctionne pas avec les sorts qui ont des effets de zone, qui permettent de sélectionner plusieurs cibles ou qui n'affectent que le lanceur\n\nCoût : 1 source par niveau du sort", Category.Metamagic, "is_MetaTwin", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.EnsoIntensification, new LearnableSkill(CustomSkill.EnsoIntensification, "Intensification", "Les créatures affectées par votre prochain sort ont un désavantage sur leur premier JDS pour y résister\nCoût : 3 sources", Category.Metamagic, "is_MetaIntensify", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.EnsoAcceleration, new LearnableSkill(CustomSkill.EnsoAcceleration, "Accélération", "L'incantation de votre prochain sort ne vous coûte qu'une action bonus\n\nCoût : 3 sources", Category.Metamagic, "is_MetaQuick", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.EnsoGuidage, new LearnableSkill(CustomSkill.EnsoGuidage, "Guidage", "Le prochain sort dont vous échouez le jet d'attaque voit son jet relancé. Guidage peut-être cumulé avec d'autres méta-magies\n\nCoût : 1 source", Category.Metamagic, "is_MetaGuidage", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.EnsoSubtilite, new LearnableSkill(CustomSkill.EnsoSubtilite, "Subtilité", "Votre prochain sort est lancé sans composante verbale, somatique ou matérielle et donc même si vous êtes sous silence ou que vous ne pouvez pas vous servir de vos mains. Exception faite des composantes matérielles ayant un coût\n\nCoût : 1 source", Category.Metamagic, "is_MetaSubtle", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.EnsoTransmutation, new LearnableSkill(CustomSkill.EnsoTransmutation, "Transmutation", "Votre prochain sort qui inflige un des types de dégâts listés voit son type de dégâts changé au choix parmi Acide, Froid, Feu, Électricité, Poison, Tonnerre\n\nCoût : 1 source", Category.Metamagic, "is_MetaTransmu", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.SorcellerieIncarnee, new LearnableSkill(CustomSkill.SorcellerieIncarnee, "Sorcellerie Incarnée", "Lorsque vous êtes sous l'effet de Sorcellerie Innée, vous pouvez utiliser deux options de métamagie dans un même sort\n\nSi aucune utilisation de Sorcellerie Innée n'est disponible, vous en récupérez une en utilisant 2 sources", Category.Magic, "is_SorcIncarnate", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnMetamagie));
      learnableDictionary.Add(CustomSkill.EnsoSlotToSource, new LearnableSkill(CustomSkill.EnsoSlotToSource, "Création de Source", "Sacrifie des emplacements de sorts pour générer des sources de magie\n\n- Emplacement niveau 1 = 2 sources\n- Emplacement niveau 2 = 3 sources\n- Emplacement niveau 3 = 5 sources\n- Emplacement niveau 4 = 6 sources\n- Emplacement niveau 5 = 7 sources", Category.Magic, "is_SlotToSource", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnsoSourceToSlot, new LearnableSkill(CustomSkill.EnsoSourceToSlot, "Création d'Emplacement", "Utilise vos sources de magie pour créer des emplacements de sorts\n\n- Emplacement niveau 1 = 2 sources\n- Emplacement niveau 2 = 3 sources\n- Emplacement niveau 3 = 5 sources\n- Emplacement niveau 4 = 6 sources\n- Emplacement niveau 5 = 7 sources", Category.Magic, "is_SourceToSlot", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RetablissementSorcier, new LearnableSkill(CustomSkill.RetablissementSorcier, "Rétablissement Sorcier", "Lorsque vous entrez en combat ou que vous prenez un repos court et que vous n'avez plus de source de magie disponible, vous en récupérez une valeur  égale à votre niveau d'ensorceleur divisé par 5 (arrondi inférieur)", Category.Magic, "is_ArcaneRecover", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnRetablissementSorcier));
      learnableDictionary.Add(CustomSkill.EnsoApotheose, new LearnableSkill(CustomSkill.EnsoApotheose, "Apothéose", "Lorsque vous êtes sous l'effet de Sorcellerie Innée, la première utilisation de métamagie du round est gratuite", Category.Magic, "is_Apotheosis", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.EnsorceleurLigneeDraconique, new LearnableSkill(CustomSkill.EnsorceleurLigneeDraconique, "Lignée Draconique", "", Category.EnsorceleurSubClass, "enso_draconique", 20, 1, Ability.Charisma, Ability.Constitution, Ensorceleur.LevelUp, "1-VA6q9C68z9ItsO8JTMXhT0XKB2BjyLqrGZX-_2CvJw"));
      learnableDictionary.Add(CustomSkill.EnsoResistanceDraconique, new LearnableSkill(CustomSkill.EnsoResistanceDraconique, "Résistance Draconique", "Votre maximum de points de vie augmente rétroactivement de 1 par niveau d'ensorceleur. Des parties de votre corps se couvrent d'écailles et lorsque vous ne portez pas d'armure, vous ajoutez votre modificateur de charisme à votre CA", Category.MindBody, "is_DracoResist", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnResistanceDraconique));
      learnableDictionary.Add(CustomSkill.EnsoDracoAffiniteAcide, new LearnableSkill(CustomSkill.EnsoDracoAffiniteAcide, "Affinité Elémentaire - Acide", "Votre héritage draconique vous donne une affinité avec l'acide. Vous obtenez la résistance à cet élément et lorsque vous infligez ce type de dégâts à l'aide d'un sort, ajoutez votre modificateur de charisme aux dégâts (min 1)", Category.AffiniteElementaire, "is_DamageAffinity", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAffiniteAcide));
      learnableDictionary.Add(CustomSkill.EnsoDracoAffiniteFroid, new LearnableSkill(CustomSkill.EnsoDracoAffiniteFroid, "Affinité Elémentaire - Froid", "Votre héritage draconique vous donne une affinité avec le froid. Vous obtenez la résistance à cet élément et lorsque vous infligez ce type de dégâts à l'aide d'un sort, ajoutez votre modificateur de charisme aux dégâts (min 1)", Category.AffiniteElementaire, "is_DamageAffinity", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAffiniteFroid));
      learnableDictionary.Add(CustomSkill.EnsoDracoAffiniteFeu, new LearnableSkill(CustomSkill.EnsoDracoAffiniteFeu, "Affinité Elémentaire - Feu", "Votre héritage draconique vous donne une affinité avec le feu. Vous obtenez la résistance à cet élément et lorsque vous infligez ce type de dégâts à l'aide d'un sort, ajoutez votre modificateur de charisme aux dégâts (min 1)", Category.AffiniteElementaire, "is_DamageAffinity", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAffiniteFeu));
      learnableDictionary.Add(CustomSkill.EnsoDracoAffiniteElec, new LearnableSkill(CustomSkill.EnsoDracoAffiniteElec, "Affinité Elémentaire - Electricité", "Votre héritage draconique vous donne une affinité avec l'électricité. Vous obtenez la résistance à cet élément et lorsque vous infligez ce type de dégâts à l'aide d'un sort, ajoutez votre modificateur de charisme aux dégâts (min 1)", Category.AffiniteElementaire, "is_DamageAffinity", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAffiniteElec));
      learnableDictionary.Add(CustomSkill.EnsoDracoAffinitePoison, new LearnableSkill(CustomSkill.EnsoDracoAffinitePoison, "Affinité Elémentaire - Poison", "Votre héritage draconique vous donne une affinité avec le poison. Vous obtenez la résistance à cet élément et lorsque vous infligez ce type de dégâts à l'aide d'un sort, ajoutez votre modificateur de charisme aux dégâts (min 1)", Category.AffiniteElementaire, "is_DamageAffinity", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAffinitePoison));
      learnableDictionary.Add(CustomSkill.EnsoDracoWings, new LearnableSkill(CustomSkill.EnsoDracoWings, "Ailes Draconiques", "Votre héritage vous dote d'ailes draconiques. En rp ou animation, vous disposez ainsi d'une vitesse de vol égale à votre vitesse de déplacement. Vous pouvez les faire apparaître ou disparaître à volonté à l'aide d'une action bonus.", Category.MindBody, "ife_X2DDArmor", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnsoCompagnonDraconique, new LearnableSkill(CustomSkill.EnsoCompagnonDraconique, "Compagnon Draconique", "Une fois par jour, vous pouvez lancer le sort Invocation Draconique sans nécessiter de composants matériels, de dépenser d'emplacement de sort ni de concentration", Category.Magic, "ife_X2SpDraKnt", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.EnsorceleurTempete, new LearnableSkill(CustomSkill.EnsorceleurTempete, "Sorcellerie de la Tempête", "", Category.EnsorceleurSubClass, "enso_draconique", 20, 1, Ability.Charisma, Ability.Constitution, Ensorceleur.LevelUp, "1lnlTaNnjNAAWSm3CnplPr_xd21iT-xLYGoY031H8AYs"));
      learnableDictionary.Add(CustomSkill.EnsoMagieTempetueuse, new LearnableSkill(CustomSkill.EnsoMagieTempetueuse, "Magie Tempêtueuse", "Après avoir lancé un sort de niveau 1 ou supérieur, votre vitesse de déplacement augmente de 25 % pour un round. Ce déplacement de déclenche pas d'attaque d'opportunité", Category.Magic, "is_MagicStorm", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnsoCoeurDeLaTempete, new LearnableSkill(CustomSkill.EnsoCoeurDeLaTempete, "Coeur de la Tempête", "Vous obtenez la résistance à l'électricité et au tonnerre\n\nLorsque vous incantez un sort qui inflige ce type de dégâts, les ennemis à moins de 6 mètres subissent des dégâts électrique ou de tonnerre correspondant à la moitié de votre niveau d'ensorceleur", Category.Magic, "is_HeartStorm", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnCoeurDeLaTempete));
      learnableDictionary.Add(CustomSkill.EnsoGuideTempete, new LearnableSkill(CustomSkill.EnsoGuideTempete, "Guide Tempête", "Vous pouvez subtilement manipuler la météo autour de vous\n- S'il pleut, vous pouvez faire cesser la pluie dans rayon de 6 mètres autour de vous\n- S'il y a du vent, vous pouvez choisir la direction dans laquelle il souffle dans un rayon de 30 mètres. L'effet prend fin après un round si vous n'utilisez pas votre action bonus pour le prolonger", Category.Magic, "is_GuideTempete", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnsoFureurTempete, new LearnableSkill(CustomSkill.EnsoFureurTempete, "Fureur de la Tempête", "Lorsqu'une créature à moins de 6 mètres vous inflige des dégâts, celle-ci subit l'équivalent de votre niveau d'ensorceleur en dégâts électriques et est ralentie de 50 % pour 1 round", Category.Magic, "is_StormFury", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnFureurTempete));
      learnableDictionary.Add(CustomSkill.EnsoAmeDesVents, new LearnableSkill(CustomSkill.EnsoAmeDesVents, "Ame des Vents", "Vous êtes immunisés aux dégâts électriques et de tonnerre\n\nEn rp et animation, vous disposez d'une vitesse de vol égale à votre vitesse de déplacement que vous pouvez partager pendant 1 heure avec un nombre d'alliés correspondant à votre modificateur de charisme. Une fois utilisé, vous ne pouvez plus partager ce vol jusqu'à votre prochain repos court", Category.Magic, "is_StormFury", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAmeDesVents, restoreOnShortRest:true));

      learnableDictionary.Add(CustomSkill.Druide, new LearnableSkill(CustomSkill.Druide, "Druide", "", Category.Class, "druide", 3, 1, Ability.Wisdom, Ability.Charisma, Druide.LevelUp, "1M-VFIDqyD889fHM-b5p_6GbmQ6agrwnu8wA5wgGqBLk"));
      learnableDictionary.Add(CustomSkill.DruideSage, new LearnableSkill(CustomSkill.DruideSage, "Ordre Primordial - Sage", "Vous maîtrisez un tour de magie de druide supplémentaire et ajoutez votre modificateur de sagesse à vos jets d'Arcanes et de Nature (min 1)", Category.OrdrePrimordial, "is_DruidSage", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnDruideSage));
      learnableDictionary.Add(CustomSkill.DruideGardien, new LearnableSkill(CustomSkill.DruideGardien, "Ordre Primordial - Gardien", "Vous maîtrisez les armures intermédiaires et disposez des bases d'apprentissage des armes martiales que vous apprenez 25 % plus rapidement", Category.OrdrePrimordial, "is_DruidGuardian", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnDruideGardien));
      learnableDictionary.Add(CustomSkill.DruideCompagnonSauvage, new LearnableSkill(CustomSkill.DruideCompagnonSauvage, "Compagnon Sauvage", "Invoque un esprit de la nature qui prend une forme animale afin de vous assister. L'invocation réplique le sort “Convocation de Familier” sans utiliser de composante matérielle et coûte une utilisation de Forme Sauvage", Category.Magic, "ife_animal", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnCompagnonSauvage));
      learnableDictionary.Add(CustomSkill.DruideReveilSauvage, new LearnableSkill(CustomSkill.DruideReveilSauvage, "Réveil Sauvage", "Si vous n'avez plus d'utilisation de Forme Sauvage, vous pouvez dépenser un emplacement de sort pour en récupérer une", Category.Magic, "is_ReveilSauvage", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DruideIncantationPuissante, new LearnableSkill(CustomSkill.DruideIncantationPuissante, "Incantation Puissante (Druide)", "Ajoutez votre modificateur de sagesse aux dégâts de vos tours de magie de druide", Category.FureurElementaire, "is_PotentSpell", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DruideFrappePrimordiale, new LearnableSkill(CustomSkill.DruideFrappePrimordiale, "Frappe Primordiale (Froid)", "Une fois par round, lorsque vous touchez une créature à l'aide d'une attaque vous infligez 1d8 dégâts supplémentaires dont le type peut être au choix froid, feu, électricité ou tonnerre", Category.FureurElementaire, "is_PrimalStrike", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFrappePrimordiale));
      learnableDictionary.Add(CustomSkill.DruideFrappePrimordialeFroid, new LearnableSkill(CustomSkill.DruideFrappePrimordialeFroid, "Frappe Primordiale (Froid)", "Votre prochaine attaque inflige +1d8 dégâts de froid (+2d8 au niveau 15)", Category.Fight, "cold", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DruideFrappePrimordialeFeu, new LearnableSkill(CustomSkill.DruideFrappePrimordialeFeu, "Frappe Primordiale (Feu)", "Votre prochaine attaque inflige +1d8 dégâts de feu (+2d8 au niveau 15)", Category.Fight, "fire", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DruideFrappePrimordialeElec, new LearnableSkill(CustomSkill.DruideFrappePrimordialeElec, "Frappe Primordiale (Electricité)", "Votre prochaine attaque inflige +1d8 dégâts électriques (+2d8 au niveau 15)", Category.Fight, "electricity", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DruideFrappePrimordialeTonnerre, new LearnableSkill(CustomSkill.DruideFrappePrimordialeTonnerre, "Frappe Primordiale (Tonnerre)", "Votre prochaine attaque inflige +1d8 dégâts de tonnerre (+2d8 au niveau 15)", Category.Fight, "thunder", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DruideIncantationBestiale, new LearnableSkill(CustomSkill.DruideIncantationBestiale, "Incantation Bestiale", "Vous pouvez lancer vos sorts de druide sous forme animale", Category.Fight, "id_animal", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FormeSauvagePersistante, new LearnableSkill(CustomSkill.FormeSauvagePersistante, "Forme Sauvage Persistante", "Lorsque vous jetez l'initiative et que vous n'avez plus d'utilisation de Forme Sauvage, vous en regagnez une", Category.Magic, "ife_animal", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvagePersistante));
      learnableDictionary.Add(CustomSkill.MageNature, new LearnableSkill(CustomSkill.MageNature, "Mage de la Nature", "Une fois par repos long, vous pouvez convertir vos utilisations de Forme Sauvage en emplacement de sort. Une utilisation correspond à 2 niveaux de sorts", Category.Magic, "ife_animal", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      
      learnableDictionary.Add(CustomSkill.FormeSauvage, new LearnableSkill(CustomSkill.FormeSauvage, "Forme Sauvage", "Vous adoptez la forme de l'animal sélectionné", Category.Magic, "ife_WildWolf", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.FormeSauvageRothe, new LearnableSkill(CustomSkill.FormeSauvageRothe, "Forme Sauvage - Rothe", "Vous adoptez la forme d'un rothe", Category.Magic, "is_WildRothe", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.FormeSauvage2, new LearnableSkill(CustomSkill.FormeSauvage2, "Forme Sauvage 6", "Vous adoptez la forme de l'animal sélectionné (la panthère noire inflige +2d6 dégâts perçants aux ennemis renversés)", Category.Magic, "ife_WildCat", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.FormeSauvageDilophosaure, new LearnableSkill(CustomSkill.FormeSauvageDilophosaure, "Forme Sauvage - Dilophosaure", "Vous adoptez la forme d'un dilophosaure", Category.Magic, "is_WildDilo", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));

      learnableDictionary.Add(CustomSkill.DruideCercleTellurique, new LearnableSkill(CustomSkill.DruideCercleTellurique, "Cercle Tellurique", "", Category.DruidSubclass, "druide_terre", 20, 1, Ability.Wisdom, Ability.Constitution, Druide.LevelUp, "1eAbk_J0Dx_Zat3PljPodGwy9NPyr5rLy5l9HxYm49Ao"));
      learnableDictionary.Add(CustomSkill.DruideCercleTerreAride, new LearnableSkill(CustomSkill.DruideCercleTerreAride, "Terre Aride", "Vous maîtrisez les sorts ci-dessous. Ceux-ci sont toujours préparés.\n\n- Level 3 : Flou, Mains Brûlantes, Trait de feu\n- Level 5 : Boule de Feu\n\n- Level 7 : Flétrissement\n\n- Level 9 : Mur de Pierre", Category.TerreDeCercle, "is_TerreAride", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnTerreAride));
      learnableDictionary.Add(CustomSkill.DruideCercleTerrePolaire, new LearnableSkill(CustomSkill.DruideCercleTerrePolaire, "Terre Polaire", "Vous maîtrisez les sorts ci-dessous. Ceux-ci sont toujours préparés.\n\n- Level 3 : Nappe de Brouillard, Immobilisation de Personne, Rayon de Givre\n- Level 5 : Tempête de Neige\n\n- Level 7 : Tempête de Grêle\n\n- Level 9 : Cône de Froid", Category.TerreDeCercle, "is_TerrePolaire", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnTerrePolaire));
      learnableDictionary.Add(CustomSkill.DruideCercleTerreTempere, new LearnableSkill(CustomSkill.DruideCercleTerreTempere, "Terre Tempérée", "Vous maîtrisez les sorts ci-dessous. Ceux-ci sont toujours préparés.\n\n- Level 3 : Foulée Brumeuse, Poigne Electrique, Sommeil\n- Level 5 : Eclair\n\n- Level 7 : Liberté de Mouvement\n\n- Level 9 : Passage par les Arbres", Category.TerreDeCercle, "is_TerreTempere", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnTerreTempere));
      learnableDictionary.Add(CustomSkill.DruideCercleTerreTropicale, new LearnableSkill(CustomSkill.DruideCercleTerreTropicale, "Terre Tropicale", "Vous maîtrisez les sorts ci-dessous. Ceux-ci sont toujours préparés.\n\n- Level 3 : Aspersion d'Acide, Rayon Empoisonné, Toile d'Araignée\n- Level 5 : Nuage Nauséabond\n\n- Level 7 : Métamorphose\n\n- Level 9 : Fléau d'Insectes", Category.TerreDeCercle, "is_TerreTropicale", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnTerreTropicale));
      learnableDictionary.Add(CustomSkill.DruideAssistanceTerrestre, new LearnableSkill(CustomSkill.DruideAssistanceTerrestre, "Assistance Terrestre", "Vous consommez une utilisation de Forme Sauvage et ciblez un point à moins de 20 m. Toutes les créatures ennemies à moins de 3 m de ce point doivent réussir un JDS de constitution ou subir 2d6 dégâts nécrotiques (la moitié en cas de réussite). Vos alliés dans la zone d'effet récupèrent 2d6 points de vie.\n\nPasse à 3d6 au niveau 10 et 4d6 au niveau 14 de druide", Category.Magic, "is_NatureBal", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.DruideEconomieNaturelle, new LearnableSkill(CustomSkill.DruideEconomieNaturelle, "Economie Naturelle", "Votre prochain sort de cercle ne consomme pas d'emplacement de sort\n\nUtilisable une fois par repos long", Category.Magic, "is_NatureEconomy", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DruideRecuperationNaturelle, new LearnableSkill(CustomSkill.DruideRecuperationNaturelle, "Récupération Naturelle", "Si vous n'êtes pas en combat, choisissez un niveau de sort pour lequel vous souhaitez récuperer des emplacements\nNombre de charges : la moitié de votre niveau de druide\nCharges récupérées à chaque repos long", Category.Magic, "is_NatureRecover", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnRecuperationNaturelle));
      learnableDictionary.Add(CustomSkill.DruideProtectionNaturelle, new LearnableSkill(CustomSkill.DruideProtectionNaturelle, "Protection Naturelle", "Vous êtes immunisé à l'Empoisonnement et obtenez la résistance au type de dégât associé au terrain auquel le Cercle de la Terre vous lie (Aride : Feu, Polaire : Froid, Tempéré : Electricité, Tropical : Poison)", Category.Magic, "is_NatureWard", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnProtectionNaturelle));
      learnableDictionary.Add(CustomSkill.DruideSanctuaireNaturel, new LearnableSkill(CustomSkill.DruideSanctuaireNaturel, "Sanctuaire Naturel", "Vous consommez une utilisation de Forme Sauvage afin de créer des arbres et des lianes spectraux dans un rayon de 3 m autour de vous pendant 1 minute.\r\nVos alliés bénéficient de +2 CA et +2 aux JDS de dextérité et la résistance aux dégâts de votre protection naturelle tant qu'ils se trouvent dans cette aura.", Category.Magic, "is_SanctuNaturel", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));

      learnableDictionary.Add(CustomSkill.DruideCercleSelenite, new LearnableSkill(CustomSkill.DruideCercleSelenite, "Cercle Sélénite", "", Category.DruidSubclass, "druide_lune", 20, 1, Ability.Wisdom, Ability.Constitution, Druide.LevelUp, "1BHfudT9yGW9JV9VTGO8DbY7uF7l1VDRQ8W0jkzZHUAQ"));
      learnableDictionary.Add(CustomSkill.DruideFormeDeLune, new LearnableSkill(CustomSkill.DruideFormeDeLune, "Forme de Lune", "En Forme Sauvage, votre CA de base est de 13 + modificateur de sagesse et vous bénéficiez de points de vie temporaires correspondant à 3x votre niveau de druide", Category.Fight, "is_FormeDeLune", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FormeSauvageOurs, new LearnableSkill(CustomSkill.FormeSauvageOurs, "Forme Sauvage - Ours", "Vous adoptez la forme d'un ours polaire", Category.Magic, "is_WildBear", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.DruideResilienceSauvage, new LearnableSkill(CustomSkill.DruideResilienceSauvage, "Résilience Sauvage", "Lorsque vous êtes sous Forme Sauvage, ajoutez votre modificateur de sagesse à vos JDS de constitution", Category.MindBody, "is_NatureWard", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DruideLuneRadieuse, new LearnableSkill(CustomSkill.DruideLuneRadieuse, "Lune Radieuse", "Lorsque vous êtes sous Forme Sauvage et que cette capacité est activée, vous infligez des dégâts radiants à la place des dégâts physiques habituels", Category.MindBody, "is_LuneRadieuse", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnLuneRadieuse));
      learnableDictionary.Add(CustomSkill.FormeSauvageCorbeau, new LearnableSkill(CustomSkill.FormeSauvageCorbeau, "Forme Sauvage - Corbeau", "Vous adoptez la forme d'un corbeau", Category.Magic, "is_WildRaven", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.FormeSauvageTigre, new LearnableSkill(CustomSkill.FormeSauvageTigre, "Forme Sauvage - Tigre", "Vous adoptez la forme d'un tigre à dents de sabre dont les attaques réduisent la CA de la cible de 2\n\nLe tigre récupère également 1d8 points de vie par round et se déplace 35 % plus rapidement tant qu'il à moins de 60 points de vie", Category.Magic, "is_WildTiger", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.FormeSauvageAir, new LearnableSkill(CustomSkill.FormeSauvageAir, "Forme Sauvage - Air", "Vous adoptez la forme d'un élémentaire de l'air", Category.Magic, "is_WildAir", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.FormeSauvageTerre, new LearnableSkill(CustomSkill.FormeSauvageTerre, "Forme Sauvage - Terre", "Vous adoptez la forme d'un élémentaire de la terre", Category.Magic, "is_WildTerre", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.FormeSauvageFeu, new LearnableSkill(CustomSkill.FormeSauvageFeu, "Forme Sauvage - Feu", "Vous adoptez la forme d'un élémentaire de feu", Category.Magic, "is_WildFeu", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));
      learnableDictionary.Add(CustomSkill.FormeSauvageEau, new LearnableSkill(CustomSkill.FormeSauvageEau, "Forme Sauvage - Eau", "Vous adoptez la forme d'un élémentaire de l'eau", Category.Magic, "is_WildEau", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));

      learnableDictionary.Add(CustomSkill.DruideCerclePelagique, new LearnableSkill(CustomSkill.DruideCerclePelagique, "Cercle Pélagique", "", Category.DruidSubclass, "druide_mer", 20, 1, Ability.Wisdom, Ability.Constitution, Druide.LevelUp, "1eDrrjQxMBiktURFTlNyxTfIlaYwkoaRkXaXYOazX6pU"));
      learnableDictionary.Add(CustomSkill.DruideFureurDesFlots, new LearnableSkill(CustomSkill.DruideFureurDesFlots, "Fureur des Flots", "Vous consommez une utilisation de Forme Sauvage pour manifester une aura de 3 m pendant 10 minutes\n\nChaque round, les créatures ennemies au sein de l'aura doivent réussir un JDS de constitution ou être ralentie de 50 % pour un round\n\nLa créature le plus proche de vous doit également réussir un JDS de constitution ou subir votre modificateur de sagesse d6 dégâts de tonnerre (min 1d6)", Category.Magic, "is_FureurFlots", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnFormeSauvage));

      learnableDictionary.Add(CustomSkill.Occultiste, new LearnableSkill(CustomSkill.Occultiste, "Occultiste", "", Category.Class, "occultiste", 3, 1, Ability.Charisma, Ability.Constitution, Occultiste.LevelUp, "1Fp8AmcjV_025-n-Cnz6bPZjUaBiJ6bTABkmDw9S6Y9k"));
      learnableDictionary.Add(CustomSkill.OccultisteFourberieMagique, new LearnableSkill(CustomSkill.OccultisteFourberieMagique, "Fourberie Magique", "Une fois par repos long, lorsque vous n'êtes pas en combat, vous pouvez récupérer l'équivalent de la moitié de vos emplacements de sorts d'Occultiste (arrondi supérieur)", Category.Magic, "is_ArcaneRecover", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.OccultisteContactDoutremonde, new LearnableSkill(CustomSkill.OccultisteContactDoutremonde, "Contact d'Outremonde", "Une fois par jour, vous pouvez contacter directement votre Mécène", Category.Magic, "is_ContactPatron", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DechargeDechirante, new LearnableSkill(CustomSkill.DechargeDechirante, "Décharge Déchirante", "Ajoutez votre modificateur de charisme aux jets de dégâts (min 1) de vos tours de magie d'Occultiste", Category.InvocationOcculte, "is_AgoBlast", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:2));
      learnableDictionary.Add(CustomSkill.ArmureDesOmbres, new LearnableSkill(CustomSkill.ArmureDesOmbres, "Armure des Ombres", "Vous pouvez lancer Armure de Mage sur vous-même sans consommer d'emplacement", Category.InvocationOcculte, "is_MageArm", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.PasAerien, new LearnableSkill(CustomSkill.PasAerien, "Pas Aérien", "Vous pouvez lancer Lévitation sur vous-même sans consommer d'emplacement", Category.InvocationOcculte, "is_Levitate", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:5));
      learnableDictionary.Add(CustomSkill.VisionDiabolique, new LearnableSkill(CustomSkill.VisionDiabolique, "Vision Diabolique", "Vous voyez dans le noir et êtes immunisé aux ténèbres magiques", Category.InvocationOcculte, "is_DevilSight", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnVisionDiabolique, minLevel:2));
      learnableDictionary.Add(CustomSkill.LameDevorante, new LearnableSkill(CustomSkill.LameDevorante, "Lame Dévorante", "L'attaque supplémentaire de Lame Assoiffée vous octroie une attaque supplémentaire", Category.InvocationOcculte, "is_ExtraAttack", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:12, learnablePrerequiste: new List<int>() { CustomSkill.PacteDeLaLame, CustomSkill.LameAssoiffee }));
      learnableDictionary.Add(CustomSkill.EspritOcculte, new LearnableSkill(CustomSkill.EspritOcculte, "Esprit Occulte", "Vous bénéficiez d'un avantage sur les jets de constitution permettant de maintenir votre concentration", Category.InvocationOcculte, "is_EldritchMind", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ChatimentOcculte, new LearnableSkill(CustomSkill.ChatimentOcculte, "Châtiment Occulte", "Vous consommez un de vos emplacements de sort de pacte pour infliger 1d8 dégâts de forces supplémentaires (+1d8 par niveau d'emplacement) avec la prochaine attaque de votre arme de pacte qui porte. La cible est renversée pour 2 rounds", Category.InvocationOcculte, "is_EldritchSmite", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:5, learnablePrerequiste: new List<int>() { CustomSkill.PacteDeLaLame }));
      learnableDictionary.Add(CustomSkill.VigueurDemoniaque, new LearnableSkill(CustomSkill.VigueurDemoniaque, "Vigueur Démoniaque", "Vous pouvez lancer Simulacre de Vie sans consommer d'emplacement de sort et obtenez toujours le montant maximal de points de vie temporaires", Category.InvocationOcculte, "is_FiendVigor", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:2));
      learnableDictionary.Add(CustomSkill.DoubleVue, new LearnableSkill(CustomSkill.DoubleVue, "Double Vue", "Action Bonus\n\nVous touchez une créature alliée et percevez avec ses sens pendant 1 round.\n\nTant que la créature est sur le même plan d'existence que vous, votre action bonus est consommée chaque round afin de renouveller le lien", Category.InvocationOcculte, "is_DoubleVue", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:5));
      learnableDictionary.Add(CustomSkill.DonPelagique, new LearnableSkill(CustomSkill.DonPelagique, "Don Pélagique", "Vous pouvez respirer sous l'eau et bénéficiez d'une vitesse de nage égale à votre vitesse déplacement", Category.InvocationOcculte, "is_DepthGift", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:5));
      learnableDictionary.Add(CustomSkill.DonDuProtecteur, new LearnableSkill(CustomSkill.DonDuProtecteur, "Don du Protecteur", "Une fois repos long, votre Livre des Ombres vous permet d'y écrire le nom d'un nombre de créatures correspondant à votre modificateur de charisme\n\nSi une de ces créatures est réduite à 0 points de vie, alors elle en récupère 1", Category.InvocationOcculte, "is_PactTome", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnDonDuProtecteur, minLevel:9, learnablePrerequiste: new List<int>() { CustomSkill.PacteDuTome }));
      learnableDictionary.Add(CustomSkill.MaitreDesChaines, new LearnableSkill(CustomSkill.MaitreDesChaines, "Maître de la Chaîne", "Lorsque vous lancez Invocation de Familier, celui-ci bénéficie des effets ci-dessous\n- Vitesse de vol et de nage\n- Attaque supplémentaire\n- Utilisation de votre DD de lanceur de sort\n- Résistance aux dégâts physiques\n- Vous pouvez choisir de remplacer le type de dégâts qu'il inflige par Nécrotique ou Radiant", Category.InvocationOcculte, "is_FindFamiliar", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:5, learnablePrerequiste: new List<int>() { CustomSkill.PacteDeLaChaine }));
      learnableDictionary.Add(CustomSkill.BuveuseDeVie, new LearnableSkill(CustomSkill.BuveuseDeVie, "Buveuse de Vie", "Une fois par round, votre arme de pacte inflige 1d6 dégâts nécrotiques, psychiques ou radiants (au choix) et vous récupérez 1d6 plus votre modificateur de constitution (min 1) points de vie", Category.InvocationOcculte, "is_PactBlade", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:9));
      learnableDictionary.Add(CustomSkill.MasqueDesMilleVisages, new LearnableSkill(CustomSkill.MasqueDesMilleVisages, "Masque des Mille Visages", "Vous pouvez lancer le sort Déguisement sans consommer d'emplacement de sort", Category.InvocationOcculte, "is_DisguiseSelf", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:2));
      learnableDictionary.Add(CustomSkill.MaitreDesFormes, new LearnableSkill(CustomSkill.MaitreDesFormes, "Maître des Formes", "Vous pouvez lancer le sort Transformation Personnelle sans consommer d'emplacement de sort", Category.InvocationOcculte, "is_DisguiseSelf", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:5));
      learnableDictionary.Add(CustomSkill.VisionsBrumeuses, new LearnableSkill(CustomSkill.VisionsBrumeuses, "Visions Brumeuses", "Vous pouvez lancer le sort Image Silencieuse sans consommer d'emplacement de sort", Category.InvocationOcculte, "is_MirrorImage", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:2));
      learnableDictionary.Add(CustomSkill.UnParmiLesOmbres, new LearnableSkill(CustomSkill.UnParmiLesOmbres, "Un Parmi Les Ombres", "Vous pouvez lancer le sort Invisibilité sans consommer d'emplacement de sort", Category.InvocationOcculte, "is_OneShadow", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:5));
      learnableDictionary.Add(CustomSkill.SautDoutremonde, new LearnableSkill(CustomSkill.SautDoutremonde, "Saut d'Outremonde", "Vous pouvez lancer le sort Bond Supérieur sans consommer d'emplacement de sort", Category.InvocationOcculte, "is_Leap", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:2));
      learnableDictionary.Add(CustomSkill.PacteDeLaLame, new LearnableSkill(CustomSkill.PacteDeLaLame, "Pacte de la Lame", "Action Bonus\n\nVous pouvez créer un lien avec l'arme de mêlée que vous tenez dans votre main droite, vous maîtrisez cette arme et pouvez l'invoquer dans votre main\n\nLorsque vous attaquez avec celle-ci, vous utilisez votre modificateur de charisme (min 1) pour déterminer le jet d'attaque et de dégâts\n\nVotre arme ignore la moitié de la résistance aux dégâts de la cible\n\nLe lien se dissipe si l'arme n'est plus en votre possession pendant plus d'1 minute", Category.InvocationOcculte, "is_PactBlade", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.PacteDeLaChaine, new LearnableSkill(CustomSkill.PacteDeLaChaine, "Pacte de la Chaîne", "Vous pouvez lancer le sort Appel de Familier sans consommer d'emplacement de sort. En plus des formes habituelles, votre familier peut prendre les formes ci-dessous :\n- Diablotin\n- Pseudodragon\n- Quasit\n- Squelette\n- Esprit Follet\n- Têtard de Slaad\n- Sphinx des Merveilles\n-Serpent Venimeux", Category.InvocationOcculte, "is_PactChain", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnPacteDeLaChaine));
      learnableDictionary.Add(CustomSkill.PacteDuTome, new LearnableSkill(CustomSkill.PacteDuTome, "Pacte du Tome", "Vous pouvez invoquer un Livre des Ombres qui recèle une magie occulte que vous seul pouvez consulter\n\nVous pouvez choisir trois tours de magie et trois sorts rituels de niveau 1 provenant de n'importe quelle classe, tant que vous ne les maîtrisez pas déjà. Ils fonctionnent pour vous commme des sorts d'Occultiste", Category.InvocationOcculte, "is_PactTome", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DechargeRepulsive, new LearnableSkill(CustomSkill.DechargeRepulsive, "Décharge Répulsive", "Vos tours de magie d'Occultiste nécessitant un jet d'attaque projètent la cible 3 mètres en arrière s'ils touchent et si la cible est de taille Grande ou inférieure", Category.InvocationOcculte, "is_RepelBlast", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:2, learnablePrerequiste: new List<int>() { CustomSkill.PacteDeLaLame }));
      learnableDictionary.Add(CustomSkill.LameAssoiffee, new LearnableSkill(CustomSkill.LameAssoiffee, "Lame Assoiffée", "Lorsque vous attaquez avec votre arme de pacte, vous bénéficiez de l'équivalent de la capacité Attaque Supplémentaire", Category.InvocationOcculte, "is_ExtraAttack", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:5));
      learnableDictionary.Add(CustomSkill.VisionsDesRoyaumesLointains, new LearnableSkill(CustomSkill.VisionsDesRoyaumesLointains, "Visions des Royaumes Lointains", "Vous pouvez lancer le sort Oeil Magique sans consommer d'emplacement", Category.InvocationOcculte, "is_FarRealmVis", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:9));
      learnableDictionary.Add(CustomSkill.MurmuresDuTombeau, new LearnableSkill(CustomSkill.MurmuresDuTombeau, "Murmures du Tombeau", "Vous pouvez lancer le sort Communication avec les Morts sans consommer d'emplacement", Category.InvocationOcculte, "is_SpeakDead", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, minLevel:7));
      learnableDictionary.Add(CustomSkill.OeilDeSorciere, new LearnableSkill(CustomSkill.OeilDeSorciere, "Oeil de Sorcière", "Vous bénéficiez de Vision Lucide", Category.InvocationOcculte, "is_TrueSee", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnOeilDeSorciere, minLevel:15));
      learnableDictionary.Add(CustomSkill.LeconDesAnciens, new LearnableSkill(CustomSkill.LeconDesAnciens, "Leçon des Anciens", "Répétable\n\nVous avez reçu un savoir d'une entité ancienne. Choisissez un Don d'Origine", Category.InvocationOcculte, "is_LessonAncients", 20, 1, Ability.Charisma, Ability.Constitution, OnLearnLeconDesAnciens, minLevel:2));

      learnableDictionary.Add(CustomSkill.OccultisteArchifee, new LearnableSkill(CustomSkill.OccultisteArchifee, "Mécène Archifée", "", Category.OccultisteSubClass, "warlock_archfey", 20, 1, Ability.Charisma, Ability.Constitution, Occultiste.LevelUp, "1khbvKpyr9qQFPsRTqE4Cv5nFgbNkjHquLHNUABRnD6c"));
      learnableDictionary.Add(CustomSkill.FouleeRafraichissante, new LearnableSkill(CustomSkill.FouleeRafraichissante, "Foulée Rafraichissante", "Effectuez une Foulée Brumeuse sans consommer d'emplacement de sort\n\n L'allié le plus proche à moins de 3 m et vous-même bénéficiez de 1d10 points de vies temporaires", Category.Magic, "is_RefreshStep", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnFouleeRafraichissante));
      learnableDictionary.Add(CustomSkill.FouleeProvocatrice, new LearnableSkill(CustomSkill.FouleeProvocatrice, "Foulée Provocatrice", "Effectuez une Foulée Brumeuse sans consommer d'emplacement de sort\n\nLes créatures ennemies à portée de mêlée doivent réussir un jet de sauvegarde de sagesse ou subir un désavantage sur leurs attaques effectuées contre une autre cible que vous pendant 1 round", Category.Magic, "is_ProvokeStep", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnFouleeProvocatrice));
      learnableDictionary.Add(CustomSkill.FouleeEvanescente, new LearnableSkill(CustomSkill.FouleeEvanescente, "Foulée Evanescente", "Effectuez une Foulée Brumeuse sans consommer d'emplacement de sort\n\nVous devenez invisible pour un round", Category.Magic, "is_InviStep", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnFouleeEvanescente));
      learnableDictionary.Add(CustomSkill.FouleeRedoutable, new LearnableSkill(CustomSkill.FouleeRedoutable, "Foulée Redoutable", "Effectuez une Foulée Brumeuse sans consommer d'emplacement de sort\n\nLes créatures ennemies à portée de mêlée de votre point d'entrée et de sortie doivent réussir un jet de sauvegarde de sagesse ou subir 2d10 dégâts psychiques", Category.Magic, "is_DreadStep", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnFouleeRedoutable));
      learnableDictionary.Add(CustomSkill.DefensesEnjoleuses, new LearnableSkill(CustomSkill.DefensesEnjoleuses, "Défenses Enjôleuses", "Vous êtes immunisé aux effets de Charme\n\nUne fois par minute, lorsque vous subissez les dégâts d'une attaque vous réduisez les dégâts de moitié et l'attaquant doit effectuer un jet de sauvegarde de JDS de sagesse ou se voir infliger des dégâts psychiques équivalent au dégâts que vous subissez", Category.Magic, "is_BeguilingDef", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnDefensesEnjoleuses));
      learnableDictionary.Add(CustomSkill.FouleeEnjoleuse, new LearnableSkill(CustomSkill.FouleeEnjoleuse, "Foulée Enjôleuse", "Lorsque vous lancez un sort d'enchantement ou d'illusion qui consomme un emplacement de sort, vous gagnez une utilisation de Foulée des Fées supplémentaire", Category.Magic, "is_FouleeEnjo", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.OccultisteCeleste, new LearnableSkill(CustomSkill.OccultisteCeleste, "Mécène Céleste", "", Category.OccultisteSubClass, "warlock_celeste", 20, 1, Ability.Charisma, Ability.Constitution, Occultiste.LevelUp, "1XDuZ8AolT_wg9qBJ6109dfzOvGmo_IXim-vaRlqoPHs"));
      learnableDictionary.Add(CustomSkill.AmeRadieuse, new LearnableSkill(CustomSkill.AmeRadieuse, "Âme Radieuse", "Vous obtenez la résistance aux dégâts radiants. Lorsque vous infligez des dégâts de feu ou radiants à l'aide d'un sort, ajoutez votre modificateur de charisme (min 1)", Category.Magic, "is_DivineInt", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnAmeRadieuse));
      learnableDictionary.Add(CustomSkill.ResilienceCeleste, new LearnableSkill(CustomSkill.ResilienceCeleste, "Résilience Céleste", "Lorsque vous utilisez Fourberie Magique, finissez un repos court ou long, vous obtenez un nombre de points de vie temporaires correspondant à votre niveau d'Occultiste plus votre modificateur de charisme (min 1). Les créatures alliés à moins de 3 m de vous bénéficient de la moitié de ce montant", Category.Magic, "is_DawnRadiance", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.LueurDeGuérison, new LearnableSkill(CustomSkill.LueurDeGuérison, "Lueur de Guérison", "Vous disposez de l'équivalent de votre niveau d'Occultiste (+1) en d6\n\nA l'aide d'une action bonus, vous pouvez soigner une créature en dépensant un nombre de dés à hauteur de votre modificateur de charisme (min 1)\n\nRécupération sur repos long", Category.Magic, "is_HealingLight", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnLueurDeGuerison));
      learnableDictionary.Add(CustomSkill.VengeanceCalcinante, new LearnableSkill(CustomSkill.VengeanceCalcinante, "Vengeance Calcinante", "La prochaine fois qu'une créature alliée à moins de 18 m est mise K.O., vous déchaînez votre énergie afin de la sauver in-extremis. La créature récupère la moitié de ses points de vie et vos ennemis à moins de 9 m d'elle subissent 2d8 plus votre modificateur de charisme (min 1) dégâts radiants et sont aveuglées pour 1 round", Category.Magic, "is_SearingVeng", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.OccultisteFielon, new LearnableSkill(CustomSkill.OccultisteFielon, "Mécène Fiélon", "", Category.OccultisteSubClass, "warlock_fielon", 20, 1, Ability.Charisma, Ability.Constitution, Occultiste.LevelUp, "100mVhel02YL3Fgvf1_P0JUWflwM3nwBNjB3W3bgthEw"));
      learnableDictionary.Add(CustomSkill.BenedictionDuMalin, new LearnableSkill(CustomSkill.BenedictionDuMalin, "Bénédiction du Malin", "Lorsque vous réduisez un ennemi à 0 points de vie, vous gagnez des points de vie temporaires à hauteur de votre modificateur de charisme plus votre niveau d'Occultiste. Ces points de vie vous sont également accordés lorsqu'un ennemi tombe à moins de 0 points de vie en étant à moins de 3 m de vous", Category.MindBody, "is_DarkBlessing", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnBenedictionDuMalin));
      learnableDictionary.Add(CustomSkill.FaveurDuMalin, new LearnableSkill(CustomSkill.FaveurDuMalin, "Faveur du Malin", "À chaque repos long, vous pouvez ajouter 1d10 à votre prochain jet un nombre de fois égal à votre modificateur de charisme (min 1)", Category.MindBody, "is_DarkLuck", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnFaveurDuMalin));
      learnableDictionary.Add(CustomSkill.ResilienceFielleuse, new LearnableSkill(CustomSkill.ResilienceFielleuse, "Résilience Fielleuse", "Une fois par repos court, vous pouvez choisir une résistance à un type de dégâts en dehors des dégâts de force", Category.MindBody, "is_FiendRes", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.TraverseeInfernale, new LearnableSkill(CustomSkill.TraverseeInfernale, "Traversée Infernale", "Votre prochain jet d'attaque réussi contre une créature la force à réussir un JDS de Charisme ou être téléportée dans les plans inférieurs pour un round et subir 8d10 dégâts psychiques. Récupération sur repos long", Category.Magic, "is_ThroughHell", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      
      learnableDictionary.Add(CustomSkill.OccultisteGrandAncien, new LearnableSkill(CustomSkill.OccultisteGrandAncien, "Mécène Grand Ancien", "", Category.OccultisteSubClass, "warlock_ancien", 20, 1, Ability.Charisma, Ability.Constitution, Occultiste.LevelUp, "1M6Sk12xmbRI6CPqoHRgT2YugBQsAXBDRzYRyNsTYPV0"));
      learnableDictionary.Add(CustomSkill.EspritEveille, new LearnableSkill(CustomSkill.EspritEveille, "Esprit Eveillé", "Vous pouvez créer un lien télépathique avec une créature que vous pouvez voir, située à moins  de 9 m et dont vous maîtrisez le langage. Une fois le lien créé, vous pouvez communiquer avec cette créature jusqu'à une distance de 1 km x votre modificateur de charisme (min 1). Le lien dure un nombre de minutes égal à votre niveau d'Occultiste et prend fin dès que vous essayez de vous lier à une autre créature", Category.Magic, "is_AwokenMind", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.SortsPsychiques, new LearnableSkill(CustomSkill.SortsPsychiques, "Sorts Psychiques", "Lorsque vous infligez des dégâts avec un sort d'Occultiste, vous pouvez choisir d'infliger des dégâts psychiques au lieu des dégâts normaux du sort. Vos sorts d'Occultiste d'enchantement et d'illusion ne nécessitent pas de composante verbale ou somatique", Category.Magic, "psychic", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.CombattantClairvoyant, new LearnableSkill(CustomSkill.CombattantClairvoyant, "Combattant Clairvoyant", "Lorsque vous formez un lien télépathique avec une créature via votre Esprit Éveillé, cette créature doit réussir un JDS de sagesse ou subir un désavantage sur ses jets d'attaques contre vous tant que le lien persiste", Category.Magic, "is_EntropicWard", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BouclierPsychique, new LearnableSkill(CustomSkill.BouclierPsychique, "Bouclier Psychique", "Vos pensées ne peuvent pas être lues par télépathie sans votre permission. Vous obtenez la résistance aux dégâts psychiques et lorsqu'une créature vous inflige des dégâts psychiques, celle-ci subit ces mêmes dégâts en retour", Category.Magic, "is_PsyShield", 1, 1, Ability.Charisma, Ability.Constitution, OnLearnBouclierPsychique));

      learnableDictionary.Add(CustomSkill.AttaqueSupplementaire, new LearnableSkill(CustomSkill.AttaqueSupplementaire, "Attaque Supplémentaire", "Vous bénéficiez d'une attaque supplémentaire", Category.Fight, "is_ExtraAttack", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AttaqueSupplementaire2, new LearnableSkill(CustomSkill.AttaqueSupplementaire2, "Attaque Supplémentaire", "Vous bénéficiez d'une seconde attaque supplémentaire", Category.Fight, "is_ExtraAttack", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AttaqueSupplementaire3, new LearnableSkill(CustomSkill.AttaqueSupplementaire3, "Attaque Supplémentaire", "Vous bénéficiez d'une troisème attaque supplémentaire", Category.Fight, "is_ExtraAttack", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.FrappeBrutale, new LearnableSkill(CustomSkill.FrappeBrutale, "Frappe Brutale", "Si vous utilisez Attaque Téméraire et que vous n'êtes pas sous l'effet d'un désavantage, vous pouvez remplacer l'avantage obtenu de votre jet d'attaque utilisant la force pour infliger 1d10 dégâts supplémentaires (2d10 au niveau 17), réduire la vitesse de déplacement de votre cible de 50 % et augmenter votre vitesse de déplacement de 50 % pour un round", Category.Fight, "is_BrutalStrike", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FrappeSiderante, new LearnableSkill(CustomSkill.FrappeSiderante, "Frappe Sidérante", "Si vous utilisez Attaque Téméraire et que vous n'êtes pas sous l'effet d'un désavantage, vous pouvez remplacer l'avantage obtenu de votre jet d'attaque utilisant la force pour infliger 1d10 dégâts supplémentaires (2d10 au niveau 17), empêche la cible de faire des attaques d'opportunité pendant 1 round et la force à faire son prochain jet de sauvegarde avec désavantage", Category.Fight, "is_Diversion", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FrappeDechirante, new LearnableSkill(CustomSkill.FrappeDechirante, "Frappe Déchirante", "Si vous utilisez Attaque Téméraire et que vous n'êtes pas sous l'effet d'un désavantage, vous pouvez remplacer l'avantage obtenu de votre jet d'attaque utilisant la force pour infliger 1d10 dégâts supplémentaires (2d10 au niveau 17) et le prochain jet d'attaque effectué contre la cible par une créature autre que vous bénéficie de +5 (non cumulable)", Category.Fight, "is_Renversement", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));

      // RANGER KNACKS

      learnableDictionary.Add(CustomSkill.AdepteAlpin, new LearnableSkill(CustomSkill.AdepteAlpin, "Adepte Alpin", "Vous disposez d'un excellent sens de l'équilibre\n\nVous disposez d'une vitesse d'escalade de 9m (ou augmentez de 3m celle dont vous bénéficiez déjà) et pouvez utiliser votre Réaction pour réduire vos dégâts de chute d'un montant équivalent à votre niveau de Rôdeur", Category.RangerKnack, "is_AdepteAlpin", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnAdepteAlpin));
      learnableDictionary.Add(CustomSkill.AdeptePelagique, new LearnableSkill(CustomSkill.AdeptePelagique, "Adepte Pélagique", "Vous nagez avec l'adresse d'une créature aquatique\n\nVous disposez d'une vitesse de nage de 9m (ou augmentez de 3m celle dont vous bénéficiez déjà) et pouvez retenir votre souffle sous l'eau pendant 1 h", Category.RangerKnack, "is_AdeptePela", 1, 1, Ability.Dexterity, Ability.Constitution, OnLearnAdeptePelagique));
      learnableDictionary.Add(CustomSkill.Herbaliste, new LearnableSkill(CustomSkill.Herbaliste, "Herbaliste", "Vous disposez d'une vaste connaissance des plantes et de leurs propriétés médicinales\n\nVous maîtrisez les kits d'herbalisme et réussissez automatiquement vos jets pour stabiliser avec un kit d'herbalisme les créatures agonisantes", Category.RangerKnack, "is_Herbaliste", 1, 1, Ability.Wisdom, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Naturaliste, new LearnableSkill(CustomSkill.Naturaliste, "Naturaliste", "Vous êtes un étudiant intuitif des étendues sauvages\n\nLorsque vous devez faire un jet d'Intelligence (Nature), vous pouvez choisir de le remplacer par un jet de Sagesse (Nature)\n\nVous pouvez également utiliser une action bonus pour tenter de vous souvenir d'une connaissance au sujet d'une bête ou d'un animal que vous voyez.", Category.RangerKnack, "is_Naturaliste", 1, 1, Ability.Wisdom, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RegenerationNaturelle, new LearnableSkill(CustomSkill.RegenerationNaturelle, "Régénération Naturelle", "Si vous n'êtes pas en combat, choisissez un niveau de sort pour lequel vous souhaitez récuperer des emplacements\nNombre de charges : votre modificateur de sagesse (min 1)\nCharges récupérées à chaque repos long", Category.RangerKnack, "is_NatureRecover", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnRegenerationNaturelle, minLevel:3));
      learnableDictionary.Add(CustomSkill.RangerPourfendeur, new LearnableSkill(CustomSkill.RangerPourfendeur, "Pourfendeur", "Le dé de dégâts de votre Marque du Chasseur est désormais un d10", Category.RangerKnack, "ife_X1BliFig", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat, minLevel: 3));
      learnableDictionary.Add(CustomSkill.Pourfendeur2, new LearnableSkill(CustomSkill.Pourfendeur2, "Pourfendeur II", "Lorsque vous lancez un jet de Sagesse (Perception ou Survie) pour pister la cible sous l'effet de votre Marque du Chasseur, vous pouvez considérer tout jet inférieur à 8 comme un 8", Category.RangerKnack, "ife_X1BliFig", 1, 1, Ability.Constitution, Ability.Wisdom, LearnActivableFeat, minLevel:6, learnablePrerequiste: new List<int>() { CustomSkill.Pourfendeur }));
      learnableDictionary.Add(CustomSkill.Pourfendeur3, new LearnableSkill(CustomSkill.Pourfendeur3, "Pourfendeur III", "Lorsque vous réussissez une attaque avec une arme contre une cible sous l'effet de votre Marque du Chasseur, celle-ci doit réussir un jet de sauvegarde de Constitution ou être aveuglée et réduite au silence pendant un round.\n\nNe peut s'activer qu'une seule fois par round", Category.RangerKnack, "ife_X1BliFig", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnPourfendeur3, minLevel:14, learnablePrerequiste: new List<int>() { CustomSkill.Pourfendeur, CustomSkill.Pourfendeur2 }));
      learnableDictionary.Add(CustomSkill.Traqueur1, new LearnableSkill(CustomSkill.Traqueur1, "Traqueur I", "Vous êtes maître dans l'art de la dissimulation en contrées sauvages. Vous bénéficiez d'un avantage sur vos jets de Dextérité (Furtivité) lorsque vous tentez de vous rendre dissimuler dans un environnement naturel", Category.RangerKnack, "ife_X1Stealth", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Traqueur2, new LearnableSkill(CustomSkill.Traqueur2, "Traqueur II", "Vous avez appris à chasser votre proie en restant dissimulé. Vous pouvez utiliser l'action Se Dissimuler en tant qu'action bonus", Category.RangerKnack, "isk_hide", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat, minLevel: 3, learnablePrerequiste: new List<int>() { CustomSkill.Traqueur1 }));
      learnableDictionary.Add(CustomSkill.Traqueur3, new LearnableSkill(CustomSkill.Traqueur3, "Traqueur III", "Vous ne pouvez pas être pisté, même par magie. Vous êtes constamment sous les effets du sort Antidétection et ne pouvez pas être pisté par divination ou autre moyen magique, à moins que ne souhaitiez l'être", Category.RangerKnack, "is_NonDetection", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnTraqueur3, minLevel: 9, learnablePrerequiste: new List<int>() { CustomSkill.Traqueur1, CustomSkill.Traqueur2 }));
      learnableDictionary.Add(CustomSkill.Traqueur4, new LearnableSkill(CustomSkill.Traqueur4, "Traqueur IV", "Vous pouvez brièvement disparaître à la vue de tous. Lorsque vous utilisez l'action Se Dissimuler, vous bénéficiez de la condition Invisible", Category.RangerKnack, "ife_X1HideSight", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat, minLevel: 14, learnablePrerequiste: new List<int>() { CustomSkill.Traqueur1, CustomSkill.Traqueur2, CustomSkill.Traqueur3 }));
      learnableDictionary.Add(CustomSkill.Marcheur1, new LearnableSkill(CustomSkill.Marcheur1, "Marcheur I", "Vous n'êtes pas affecté par les effets de Terrains Difficiles des environnements naturels tels que la neige ou les marécages. Tant que vous pouvez voir le ciel, vous ne pouvez pas vous égarer.\n\nLorsque vous voyagez, jusqu'à 10 créatures qui vous accompagnent ne sont également pas ralenties par les Terrains Difficiles naturels pendant le voyage", Category.RangerKnack, "is_LongStrider", 1, 1, Ability.Constitution, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Marcheur2, new LearnableSkill(CustomSkill.Marcheur2, "Marcheur II", "Lorsque votre ennemi est en vue, vous le poursuivez impitoyablement. Vous pouvez utiliser l'action Sprinter en tant qu'action bonus.", Category.RangerKnack, "is_LongStrider", 1, 1, Ability.Constitution, Ability.Wisdom, LearnActivableFeat, minLevel: 3, learnablePrerequiste: new List<int>() { CustomSkill.Marcheur1 }));
      learnableDictionary.Add(CustomSkill.Marcheur3, new LearnableSkill(CustomSkill.Marcheur3, "Marcheur III", "Vous pouvez surmonter n'importe quel obstacle qui bloquerait votre chemin. Votre vitesse de marche augmente de 30 % et vous n'êtes pas affecté par les effets de Terrains Difficiles provoqués par des sorts, des phénomènes magiques ou supernaturels", Category.RangerKnack, "is_LongStrider", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnMarcheur3, minLevel: 6, learnablePrerequiste: new List<int>() { CustomSkill.Marcheur1, CustomSkill.Marcheur2 }));
      learnableDictionary.Add(CustomSkill.Marcheur4, new LearnableSkill(CustomSkill.Marcheur4, "Marcheur IV", "Vous traversez le monde sans qu'aucune magie ne puisse vous restraindre. Tant que vous êtes conscient, vous êtes en permanence sous les effets du sort Liberté de Mouvement.", Category.RangerKnack, "is_LongStrider", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnMarcheur4, minLevel: 14, learnablePrerequiste: new List<int>() { CustomSkill.Marcheur1, CustomSkill.Marcheur2, CustomSkill.Marcheur3 }));
      learnableDictionary.Add(CustomSkill.IntuitionSauvage1, new LearnableSkill(CustomSkill.IntuitionSauvage1, "Intuition Sauvage I", "Vous avez une intuition particulièrement affutée quant aux sons et comportements animaux. Vous pouvez communiquer avec ceux-ci comme si vous étiez en permanence sous l'effet du sort Communication Animale.", Category.RangerKnack, "is_SpeakAnimal", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.IntuitionSauvage2, new LearnableSkill(CustomSkill.IntuitionSauvage2, "Intuition Sauvage II", "Vous êtes lié à un esprit de la nature mineure. Vous apprennez le sort Convocation de Familier et celui-ci est toujours préparé", Category.RangerKnack, "is_SpeakAnimal", 1, 1, Ability.Wisdom, Ability.Constitution, OnLearnIntuitionSauvage2, minLevel: 3, learnablePrerequiste: new List<int>() { CustomSkill.IntuitionSauvage1 }));
      learnableDictionary.Add(CustomSkill.Survivant1, new LearnableSkill(CustomSkill.Survivant1, "Survivant I", "Action bonus\n\nVous obtenez l'équivalent de votre modificateur de Constitution en points de vie temporaires", Category.RangerKnack, "ife_tough", 1, 1, Ability.Constitution, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Survivant2, new LearnableSkill(CustomSkill.Survivant2, "Survivant II", "Lorsque vous dépensez un dé de vie pour récupérer des points de vie, ajoutez votre modificateur de Sagesse (min 1)", Category.RangerKnack, "ife_X2Tough1", 1, 1, Ability.Constitution, Ability.Wisdom, LearnActivableFeat, minLevel:9, learnablePrerequiste: new List<int>() { CustomSkill.Survivant1 }));
      learnableDictionary.Add(CustomSkill.Survivant3, new LearnableSkill(CustomSkill.Survivant3, "Survivant III", "Ajoutez votre modificateur de Sagesse à vos jets de sauvegarde contre la mort. Si le résultat de votre jet est de 20 ou plus, traitez le comme si vous aviez effectué un 20 naturel", Category.RangerKnack, "ife_X2Tough1", 1, 1, Ability.Constitution, Ability.Wisdom, LearnActivableFeat, minLevel:14, learnablePrerequiste: new List<int>() { CustomSkill.Survivant1, CustomSkill.Survivant2 }));

      // SPELLS
      // CANTRIPS

      learnableDictionary.Add(CustomSkill.Assistance, new LearnableSkill(CustomSkill.Assistance, "Assistance", NwSpell.FromSpellId(CustomSpell.Assistance).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Assistance).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.RayOfFrost, new LearnableSkill(CustomSkill.RayOfFrost, "Rayon de Givre", NwSpell.FromSpellType(Spell.RayOfFrost).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.RayOfFrost).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AcidSplash, new LearnableSkill(CustomSkill.AcidSplash, "Aspersion d'acide", NwSpell.FromSpellType(Spell.AcidSplash).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.AcidSplash).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ElectricJolt, new LearnableSkill(CustomSkill.ElectricJolt, "Poigne électrique", NwSpell.FromSpellType(Spell.ElectricJolt).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.ElectricJolt).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BladeWard, new LearnableSkill(CustomSkill.BladeWard, "Protection contre les lames", NwSpell.FromSpellId(CustomSpell.ProtectionContreLesLames).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.ProtectionContreLesLames).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FireBolt, new LearnableSkill(CustomSkill.FireBolt, "Trait de feu", NwSpell.FromSpellId(CustomSpell.FireBolt).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.FireBolt).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Friends, new LearnableSkill(CustomSkill.Friends, "Amis", NwSpell.FromSpellId(CustomSpell.Friends).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Friends).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BoneChill, new LearnableSkill(CustomSkill.BoneChill, "Frisson Glacial", NwSpell.FromSpellId(CustomSpell.BoneChill).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.BoneChill).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TrueStrike, new LearnableSkill(CustomSkill.TrueStrike, "Coup au but", NwSpell.FromSpellType(Spell.TrueStrike).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.TrueStrike).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.PoisonSpray, new LearnableSkill(CustomSkill.PoisonSpray, "Bouffée empoisonnée", NwSpell.FromSpellId(CustomSpell.PoisonSpray).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.PoisonSpray).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Light, new LearnableSkill(CustomSkill.Light, "Lumière", NwSpell.FromSpellType(Spell.Light).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.Light).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.LightDrow, new LearnableSkill(CustomSkill.LightDrow, "Lumière (Drow)", NwSpell.FromSpellType(Spell.Light).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.Light).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FaerieFireDrow, new LearnableSkill(CustomSkill.FaerieFireDrow, "Lueurs Féeriques (Drow)", NwSpell.FromSpellId(CustomSpell.FaerieFire).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.FaerieFire).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DarknessDrow, new LearnableSkill(CustomSkill.DarknessDrow, "Ténèbres (Racial)", NwSpell.FromSpellType(Spell.Darkness).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.Darkness).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.InvisibilityDuergar, new LearnableSkill(CustomSkill.InvisibilityDuergar, "Invisibilité (Duergar)", NwSpell.FromSpellType(Spell.Invisibility).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.Invisibility).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnlargeDuergar, new LearnableSkill(CustomSkill.EnlargeDuergar, "Agrandissement (Duergar)", NwSpell.FromSpellId(CustomSpell.Agrandissement).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Agrandissement).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.SpeakAnimalGnome, new LearnableSkill(CustomSkill.SpeakAnimalGnome, "Communication Animale (Gnome des forêts)", NwSpell.FromSpellId(CustomSpell.SpeakAnimal).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.SpeakAnimal).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ProduceFlame, new LearnableSkill(CustomSkill.ProduceFlame, "Pyrotechnie", NwSpell.FromSpellId(CustomSpell.ProduceFlame).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.ProduceFlame).IconResRef, 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.HellishRebuke, new LearnableSkill(CustomSkill.HellishRebuke, "Représailles Infernales", NwSpell.FromSpellId(CustomSpell.RepresaillesInfernales).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.RepresaillesInfernales).IconResRef, 1, 1, Ability.Charisma, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MageHand, new LearnableSkill(CustomSkill.MageHand, "Main de mage", NwSpell.FromSpellId(CustomSpell.MageHand).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.MageHand).IconResRef, 1, 1, Ability.Charisma, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BurningHands, new LearnableSkill(CustomSkill.BurningHands, "Mains Brûlantes", NwSpell.FromSpellType(Spell.BurningHands).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.BurningHands).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FlameBlade, new LearnableSkill(CustomSkill.FlameBlade, "Lame Ardente", NwSpell.FromSpellId(CustomSpell.LameArdente).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.LameArdente).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Thaumaturgy, new LearnableSkill(CustomSkill.Thaumaturgy, "Thaumaturgie", NwSpell.FromSpellId(CustomSpell.Thaumaturgy).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Thaumaturgy).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.SearingSmite, new LearnableSkill(CustomSkill.SearingSmite, "Châtiment Calcinant", NwSpell.FromSpellId(CustomSpell.SearingSmite).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.SearingSmite).IconResRef, 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BrandingSmite, new LearnableSkill(CustomSkill.BrandingSmite, "Châtiment Révélateur", NwSpell.FromSpellId(CustomSpell.BrandingSmite).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.BrandingSmite).IconResRef, 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Prestidigitation, new LearnableSkill(CustomSkill.Prestidigitation, "Prestidigitation", NwSpell.FromSpellId(CustomSpell.Prestidigitation).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Prestidigitation).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Druidisme, new LearnableSkill(CustomSkill.Druidisme, "Druidisme", NwSpell.FromSpellId(CustomSpell.Druidisme).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Druidisme).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.IllusionMineure, new LearnableSkill(CustomSkill.IllusionMineure, "Illusion Mineure", NwSpell.FromSpellId(CustomSpell.IllusionMineure).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.IllusionMineure).IconResRef, 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.SacredFlame, new LearnableSkill(CustomSkill.SacredFlame, "Flamme Sacrée", NwSpell.FromSpellType(Spell.Flare).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.Flare).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.GrandeFoulee, new LearnableSkill(CustomSkill.GrandeFoulee, "Grande Foulée", NwSpell.FromSpellId(CustomSpell.GrandeFoulee).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.GrandeFoulee).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.PassageSansTrace, new LearnableSkill(CustomSkill.PassageSansTrace, "Passage sans Trace", NwSpell.FromSpellId(CustomSpell.PassageSansTrace).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.PassageSansTrace).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DetectionDeLaMagie, new LearnableSkill(CustomSkill.DetectionDeLaMagie, "Détection de la Magie", NwSpell.FromSpellId(CustomSpell.DetectionDeLaMagie).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.DetectionDeLaMagie).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FouleeBrumeuse, new LearnableSkill(CustomSkill.FouleeBrumeuse, "Foulée Brumeuse", NwSpell.FromSpellId(CustomSpell.FouleeBrumeuse).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.FouleeBrumeuse).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.HighElfCantrip, new LearnableSkill(CustomSkill.HighElfCantrip, "Haut Elfe - Tour de Magie", "Une fois par long repos, vous pouvez changer votre tour de magie de haut elfe", Category.Magic, "HighElfCantrip", 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));

      /*learnableDictionary.Add(CustomSkill.ImprovedSpellSlot0, new LearnableSkill(CustomSkill.ImprovedSpellSlot0, "Emplacement Cercle 0", "Augmente le nombre d'emplacements de sorts de cercle 0 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsC1", 10, 1, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot1, new LearnableSkill(CustomSkill.ImprovedSpellSlot1, "Emplacement Cercle 1", "Augmente le nombre d'emplacements de sorts de cercle 1 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsA1", 10, 2, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot2, new LearnableSkill(CustomSkill.ImprovedSpellSlot2, "Emplacement Cercle 2", "Augmente le nombre d'emplacements de sorts de cercle 2 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsF1", 10, 3, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot3, new LearnableSkill(CustomSkill.ImprovedSpellSlot3, "Emplacement Cercle 3", "Augmente le nombre d'emplacements de sorts de cercle 3 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsE1", 10, 4, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot4, new LearnableSkill(CustomSkill.ImprovedSpellSlot4, "Emplacement Cercle 4", "Augmente le nombre d'emplacements de sorts de cercle 4 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsS1", 10, 5, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot5, new LearnableSkill(CustomSkill.ImprovedSpellSlot5, "Emplacement Cercle 5", "Augmente le nombre d'emplacements de sorts de cercle 5 disponibles d'un par niveau.", Category.Magic, "ife_X2EpSkFSpCr", 10, 6, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot6, new LearnableSkill(CustomSkill.ImprovedSpellSlot6, "Emplacement Cercle 6", "Augmente le nombre d'emplacements de sorts de cercle 6 disponibles d'un par niveau.", Category.Magic, "ife_X2EpicFort", 10, 7, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot7, new LearnableSkill(CustomSkill.ImprovedSpellSlot7, "Emplacement Cercle 7", "Augmente le nombre d'emplacements de sorts de cercle 7 disponibles d'un par niveau.", Category.Magic, "ife_X2EpicRefl", 10, 8, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot8, new LearnableSkill(CustomSkill.ImprovedSpellSlot8, "Emplacement Cercle 8", "Augmente le nombre d'emplacements de sorts de cercle 8 disponibles d'un par niveau.", Category.Magic, "ife_X2EpicProw", 10, 9, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot9, new LearnableSkill(CustomSkill.ImprovedSpellSlot9, "Emplacement Cercle 9", "Augmente le nombre d'emplacements de sorts de cercle 9 disponibles d'un par niveau.", Category.Magic, "ife_X2EpicRepu", 10, 10, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      */

      learnableDictionary.Add(CustomSkill.InfluxDetection, new LearnableSkill(CustomSkill.InfluxDetection, "Influx - Détection ", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt minéral de faible concentration et de 1 % celle de découvrir une qualité supérieure.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.InfluxDetectionSpeed, new LearnableSkill(CustomSkill.InfluxDetectionSpeed, "Influx - Détection rapide", "Chaque niveau diminue de 5 % le temps de recherche nécessaire à la détection de matéria minérale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.InfluxDetectionSafe, new LearnableSkill(CustomSkill.InfluxDetectionSafe, "Influx - Détection prudente", "Chaque niveau diminue de 2 % le risque d'épuisement d'une inscription lors de la détection de matéria minérale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.InfluxDetectionRange, new LearnableSkill(CustomSkill.InfluxDetectionRange, "Influx - Détection élargie", "Chaque niveau augmente le rayon de détection passif de dépôts minéraux de 1.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.InfluxDetectionEstimation, new LearnableSkill(CustomSkill.InfluxDetectionEstimation, "Influx - Détection précise", "Chaque niveau augmente de 5 % la précision de l'estimation de concentration de matéria d'un dépôt minérale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.InfluxDetectionAccuracy, new LearnableSkill(CustomSkill.InfluxDetectionAccuracy, "Influx - Détection sensible", "En mode actif, chaque niveau augmente de 1 % la chance de détection d'un dépôt minéral de faible concentration de qualité supérieure.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.InfluxDetectionAdvanced, new LearnableSkill(CustomSkill.InfluxDetectionAdvanced, "Influx - Détection avancée", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt de faible concentration.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Constitution, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.InfluxDetectionMastery, new LearnableSkill(CustomSkill.InfluxDetectionMastery, "Influx - Détection maitrisée", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt de faible concentration.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Constitution, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.InfluxExtraction, new LearnableSkill(CustomSkill.InfluxExtraction, "Influx - Extraction", "Chaque niveau augmente de 5 % la quantité de matéria extraite d'un dépôt minéral ainsi que la vitesse d'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.InfluxExtractionSpeed, new LearnableSkill(CustomSkill.InfluxExtractionSpeed, "Ifnlux - Extraction accélérée", "Chaque niveau augmente de 5 % la vitesse d'extraction d'un dépôt minéral.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.InfluxExtractionYield, new LearnableSkill(CustomSkill.InfluxExtractionYield, "Influx - Extraction améliorée", "Chaque niveau augmente de 5 % la quantité de matéria extraite d'un dépôt minéral.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.InfluxExtractionSafe, new LearnableSkill(CustomSkill.InfluxExtractionSafe, "Influx - Extraction prudente", "Chaque niveau réduit de 2 % le risque d'épuisement d'une inscription lors d'une extraction minérale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.InfluxExtractionDurable, new LearnableSkill(CustomSkill.InfluxExtractionDurable, "Influx - Extraction durable", "Chaque niveau augmente de 1 % la chance de conserver un dépôt minéral intact même lorsque l'extraction provoque son épuisement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.InfluxExtractionAdvanced, new LearnableSkill(CustomSkill.InfluxExtractionAdvanced, "Influx - Extraction avancée", "Chaque niveau diminue de 5 % le temps nécessaire à une extraction.\nChaque niveau augmente de 5 % le rendement de l'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.InfluxExtractionMastery, new LearnableSkill(CustomSkill.InfluxExtractionMastery, "Influx - Extraction maîtrise", "Chaque niveau diminue de 5 % le temps nécessaire à une extraction.\nChaque niveau augmente de 5 % le rendement de l'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.ReprocessingInflux, new LearnableSkill(CustomSkill.ReprocessingInflux, "Influx - Raffinage", "Réduit la quantité de matéria minérale gachée lors du raffinage de 3 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingInfluxEfficiency, new LearnableSkill(CustomSkill.ReprocessingInfluxEfficiency, "Influx - Raffinage efficace", "Réduit la quantité de matéria minérale gachée lors du raffinage de 2 % par niveau..", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingInfluxExpertise, new LearnableSkill(CustomSkill.ReprocessingInfluxExpertise, "Influx - Raffinage expert", "Réduit de 12 % par niveau la quantité de matéria minérale gachée liée au niveau de qualité (base 25 % par niveau de qualité).", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingInfluxLuck, new LearnableSkill(CustomSkill.ReprocessingInfluxLuck, "Influx - Chance du Raffineur", "Donne 1 % de chance par niveau de raffiner une matéria minérale brute en une matéria de qualité supérieure.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.ReprocessingGrade1Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade1Expertise, "Raffinage expert qualité 1", "Réduit la quantité de matéria de qualité 1 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade2Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade2Expertise, "Raffinage expert qualité 2", "Réduit la quantité de matéria de qualité 2 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade3Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade3Expertise, "Raffinage expert qualité 3", "Réduit la quantité de matéria de qualité 3 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade4Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade4Expertise, "Raffinage expert qualité 4", "Réduit la quantité de matéria de qualité 4 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade5Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade5Expertise, "Raffinage expert qualité 5", "Réduit la quantité de matéria de qualité 5 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade6Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade6Expertise, "Raffinage expert qualité 6", "Réduit la quantité de matéria de qualité 6 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 6, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade7Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade7Expertise, "Raffinage expert qualité 7", "Réduit la quantité de matéria de qualité 7 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 7, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade8Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade8Expertise, "Raffinage expert qualité 8", "Réduit la quantité de matéria de qualité 8 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 8, Ability.Dexterity, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.MateriaGradeConcentration, new LearnableSkill(CustomSkill.MateriaGradeConcentration, "Concentration de matéria", "Réduit la quantité de matéria nécessaire pour amorcer une concentration de 5 % par niveau.", Category.Craft, "ife_X2EpicRepu", 20, 2, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.ConnectionsGates, new LearnableSkill(CustomSkill.ConnectionsGates, "Relations Quartier des Portes", "Diminue les taxes imposées aux Portes de la Cité de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ConnectionsGovernment, new LearnableSkill(CustomSkill.ConnectionsGovernment, "Relations Quartier du Gouvernement", "Diminue les taxes imposées au Quartier du Gouvernement de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ConnectionsPromenade, new LearnableSkill(CustomSkill.ConnectionsPromenade, "Relations Quartier de la Promenade", "Diminue les taxes imposées au Quartier de la Promenade de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ConnectionsTemple, new LearnableSkill(CustomSkill.ConnectionsTemple, "Relations Quartier des Temples", "Diminue les taxes imposées au Quartier des Temples de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.BlueprintCopy, new LearnableSkill(CustomSkill.BlueprintCopy, "Copie de patron", "Permet la copie de patrons originaux. Diminue le temps de copie 5 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.BlueprintEfficiency, new LearnableSkill(CustomSkill.BlueprintEfficiency, "Copie efficace", "Augmente le nombre d'utilisations des patrons que vous copiez de 1 par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.BlueprintEconomy, new LearnableSkill(CustomSkill.BlueprintEconomy, "Artisan économe", "Donne une chance de 5 % par niveau de ne pas consommer d'utilisation lors d'un travail artisanal faisant usage d'une copie de patron.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.BlueprintResearch, new LearnableSkill(CustomSkill.BlueprintResearch, "Recherche en efficacité", "Permet de rechercher une amélioration en efficacité sur des patrons originaux.\nDiminue le temps de recherche de 5 % par niveau.\nCe type de recherche permet de diminuer le temps de fabrication, de réparation de l'objet correspondant.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.BlueprintMetallurgy, new LearnableSkill(CustomSkill.BlueprintMetallurgy, "Recherche en rendement", "Permet de recherche une amélioration de rendement sur des patrons originaux.\nDiminue le temps de recherche de 5 % par niveau.\nCetype de recherche permet de diminuer le coût de fabrication de l'objet correspondant.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.AdvancedCraft, new LearnableSkill(CustomSkill.AdvancedCraft, "Artisanat avancé", "Diminue de 3 % supplémentaires les temps de recherche sur des patrons originaux.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.Blacksmith, new LearnableSkill(CustomSkill.Blacksmith, "Forgeron", "Diminue le temps de fabrication, de réparation et le coût en matéria d'un objet de la forge de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.Woodworker, new LearnableSkill(CustomSkill.Woodworker, "Ebéniste", "Diminue le temps de fabrication, de réparation et le coût en matéria d'un objet de la scierie de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Strength));
      learnableDictionary.Add(CustomSkill.Tanner, new LearnableSkill(CustomSkill.Tanner, "Tanneur", "Diminue le temps de fabrication, de réparation et le coût en matéria d'un objet de la tannerie de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ArtisanExceptionnel, new LearnableSkill(CustomSkill.ArtisanExceptionnel, "Artisan d'exception", "Augmente de 1 % par niveau la chance de parvenir à produire un objet avec un emplacement d'inscription supplémentaire.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ArtisanApplique, new LearnableSkill(CustomSkill.ArtisanApplique, "Artisan appliqué", "Augmente de 3 % par niveau la chance d'augmenter la durabilité d'un objet lors de sa fabrication.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ArtisanFocus, new LearnableSkill(CustomSkill.ArtisanFocus, "Artisan concentré", "Augmente de 5 % le gain de durabilité obtenu lors de l'activation de la compétence artisan appliqué.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ArtisanPrudent, new LearnableSkill(CustomSkill.ArtisanPrudent, "Artisan Prudent", "Chaque niveau diminue de 2 % le risque d'épuisement d'une inscription lors de la manipulation de matéria raffinée.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Dexterity));

      learnableDictionary.Add(CustomSkill.Renforcement, new LearnableSkill(CustomSkill.Renforcement, "Renforcement", "Permet d'augmenter la durabilité d'un objet de 5 % par renforcement. Cumulable 10 fois.\n\nDiminue le temps de travail nécessaire de 5 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.Recycler, new LearnableSkill(CustomSkill.Recycler, "Recyclage", "Permet de mettre en pièces les objets afin d'extraire une fraction de la matéria brute qu'ils contiennent.\n\n Diminue le temps nécessaire au recyclage et augmente le rendement de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.RecyclerFast, new LearnableSkill(CustomSkill.RecyclerFast, "Recyclage accéléré", "Permet d'effectuer une tâche de recyclage 1 % plus rapidement par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.RecyclerExpert, new LearnableSkill(CustomSkill.RecyclerExpert, "Recyclage expert", "Augmente le rendement du recyclage de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Repair, new LearnableSkill(CustomSkill.Repair, "Réparation", "Permet de réparer les objets.\n\n Diminue le temps et le coût en matéria nécessaires à la réparation.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.RepairFast, new LearnableSkill(CustomSkill.RepairFast, "Réparation accélérée", "Permet d'effectuer une tâche de réparation 1 % plus rapidement par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.RepairExpert, new LearnableSkill(CustomSkill.RepairExpert, "Réparation experte", "Diminue le coût en matéria d'une réparation de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.RepairCareful, new LearnableSkill(CustomSkill.RepairCareful, "Réparation prudente", "Diminue la perte de durabilité maximale à chaque réparation de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Dexterity, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.CalligraphieSurcharge, new LearnableSkill(CustomSkill.CalligraphieSurcharge, "Calligraphie Surchargée", "Permet de forcer l'ajout d'emplacements d'inscriptions sur un objet au risque de le briser.\n\nAugmente de 2 % par niveau la chance de parvenir à forcer l'ajout d'un emplacement d'enchantement supplémentaire.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CalligraphieSurchargeControlee, new LearnableSkill(CustomSkill.CalligraphieSurchargeControlee, "Calligraphie surcharge contrôlée", "Augmente de 10 % par niveau la chance de conserver l'objet intact lors de l'échec d'une tentative de surcharge.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Wisdom, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.CalligrapheArmurier, new LearnableSkill(CustomSkill.CalligrapheArmurier, "Calligraphe Armurier", "Permet de réaliser des inscriptions ouvragées sur des pièces d'armure et de leur donner vie sous forme d'effets magiques permanents.\n\nRéduit de 2 % par niveau le coût et le temps nécessaire pour réaliser une inscription.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheArmurierMaitre, new LearnableSkill(CustomSkill.CalligrapheArmurierMaitre, "Calligraphe Armurier Maître", "Réduit de 2 % par niveau le temps et le coût de réalisation d'une inscription sur une pièce d'armure.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheArmurierScience, new LearnableSkill(CustomSkill.CalligrapheArmurierScience, "Science de la calligraphie d'armure", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription d'une inscription sur une pièce d'armure.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheArmurierExpert, new LearnableSkill(CustomSkill.CalligrapheArmurierExpert, "Expertise de la calligraphie d'armure", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription d'une inscription sur une pièce d'armure.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Wisdom, Ability.Charisma));

      learnableDictionary.Add(CustomSkill.CalligrapheBlindeur, new LearnableSkill(CustomSkill.CalligrapheBlindeur, "Calligraphe Blindeur", "Permet de réaliser des inscriptions ouvragées sur des boucliers et de leur donner vie sous forme d'effets magiques permanents.\n\nRéduit de 2 % par niveau le coût et le temps nécessaire pour réaliser une inscription.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheBlindeurMaitre, new LearnableSkill(CustomSkill.CalligrapheBlindeurMaitre, "Calligraphe Blindeur Maître", "Réduit de 2 % par niveau le temps et le coût de réalisation d'une inscription sur un bouclier.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheBlindeurScience, new LearnableSkill(CustomSkill.CalligrapheBlindeurScience, "Science de la calligraphie de bouclier", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur un bouclier.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheBlindeurExpert, new LearnableSkill(CustomSkill.CalligrapheBlindeurExpert, "Expertise de la calligraphie de bouclier", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur un bouclier.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Wisdom, Ability.Charisma));

      learnableDictionary.Add(CustomSkill.CalligrapheCiseleur, new LearnableSkill(CustomSkill.CalligrapheCiseleur, "Calligraphe Ciseleur", "Permet de réaliser des inscriptions ouvragées sur un ornement et de leur donner vie sous forme d'effets magiques permanents.\n\nRéduit de 2 % par niveau le coût et le temps nécessaire pour réaliser une inscription.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Intelligence, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheCiseleurMaitre, new LearnableSkill(CustomSkill.CalligrapheCiseleurMaitre, "Calligraphe Ciseleur Maître", "Réduit de 2 % par niveau le temps et le coût de réalisation d'une inscription sur un ornement.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheCiseleurScience, new LearnableSkill(CustomSkill.CalligrapheCiseleurScience, "Science de la calligraphie des ornements", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur un ornement.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Intelligence, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheCiseleurExpert, new LearnableSkill(CustomSkill.CalligrapheCiseleurExpert, "Expertise de la calligraphie des ornements", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur un ornement.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Intelligence, Ability.Charisma));

      learnableDictionary.Add(CustomSkill.CalligrapheFourbisseur, new LearnableSkill(CustomSkill.CalligrapheFourbisseur, "Calligraphe Coutelier", "Permet de réaliser des inscriptions ouvragées sur une arme et de leur donner vie sous forme d'effets magiques permanents.\n\nRéduit de 2 % par niveau le coût et le temps nécessaire pour réaliser une inscription.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Intelligence, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheFourbisseurMaitre, new LearnableSkill(CustomSkill.CalligrapheFourbisseurMaitre, "Calligraphe Coutelier Maître", "Réduit de 2 % par niveau le temps et le coût de réalisation d'une inscription sur une arme.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheFourbisseurScience, new LearnableSkill(CustomSkill.CalligrapheFourbisseurScience, "Science de la calligraphie des armes", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur une arme.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Intelligence, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheFourbisseurExpert, new LearnableSkill(CustomSkill.CalligrapheFourbisseurExpert, "Expertise de la calligraphie des armes", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur une arme.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Intelligence, Ability.Charisma));

      learnableDictionary.Add(CustomSkill.CombattantPrecautionneux, new LearnableSkill(CustomSkill.CombattantPrecautionneux, "Combattant Précautionneux", "Diminue de 1 % par niveau le risque d'usure des objets.", Category.Fight, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.CraftOnHandedMeleeWeapon, new LearnableSkill(CustomSkill.CraftOnHandedMeleeWeapon, "Fourbisseur léger", "Diminue le temps de fabrication, de réparation et le coût en matériaux des armes de mêlée à une main de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTwoHandedMeleeWeapon, new LearnableSkill(CustomSkill.CraftTwoHandedMeleeWeapon, "Fourbisseur lourd", "Diminue le temps de fabrication, de réparation et le coût en matériaux des armes de mêlée à deux mains de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftRangedWeapon, new LearnableSkill(CustomSkill.CraftRangedWeapon, "Artillier", "Diminue le temps de fabrication, de réparation et le coût en matériaux des armes à distance de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShield, new LearnableSkill(CustomSkill.CraftShield, "Blindeur", "Diminue le temps de fabrication, de réparation et le coût en matériaux des boucliers 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftArmor, new LearnableSkill(CustomSkill.CraftArmor, "Armurier", "Diminue le temps de fabrication, de réparation et le coût en matériaux des armures de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftClothes, new LearnableSkill(CustomSkill.CraftClothes, "Costumier", "Diminue le temps de fabrication, de réparation et le coût en matériaux des vêtements de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftAmmunitions, new LearnableSkill(CustomSkill.CraftAmmunitions, "Cartouchier", "Diminue le temps de fabrication, de réparation et le coût en matériaux des munitions de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.CraftClothing, new LearnableSkill(CustomSkill.CraftClothing, "Craft Vêtements", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftFullPlate, new LearnableSkill(CustomSkill.CraftFullPlate, "Craft Harnois", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHalfPlate, new LearnableSkill(CustomSkill.CraftHalfPlate, "Craft Armure de plaques", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSplintMail, new LearnableSkill(CustomSkill.CraftSplintMail, "Craft Clibanion", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBreastPlate, new LearnableSkill(CustomSkill.CraftBreastPlate, "Craft Cuirasse", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftScaleMail, new LearnableSkill(CustomSkill.CraftScaleMail, "Craft Chemise de mailles", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftStuddedLeather, new LearnableSkill(CustomSkill.CraftStuddedLeather, "Craft Cuir clouté", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLeatherArmor, new LearnableSkill(CustomSkill.CraftLeatherArmor, "Craft Armure de cuir", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftPaddedArmor, new LearnableSkill(CustomSkill.CraftPaddedArmor, "Craft Armure matelassée", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShortsword, new LearnableSkill(CustomSkill.CraftShortsword, "Craft Epée courte", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLongsword, new LearnableSkill(CustomSkill.CraftLongsword, "Craft Epée longue", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBattleAxe, new LearnableSkill(CustomSkill.CraftBattleAxe, "Craft Hache de Guerre", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBastardSword, new LearnableSkill(CustomSkill.CraftBastardSword, "Craft Epée bâtarde", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLightFlail, new LearnableSkill(CustomSkill.CraftLightFlail, "Craft Fléau léger", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftWarHammer, new LearnableSkill(CustomSkill.CraftWarHammer, "Craft Marteau de guerre", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHeavyCrossbow, new LearnableSkill(CustomSkill.CraftHeavyCrossbow, "Craft Arbalète lourde", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLightCrossbow, new LearnableSkill(CustomSkill.CraftLightCrossbow, "Craft Arbalète légère", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLongBow, new LearnableSkill(CustomSkill.CraftLongBow, "Craft Arc long", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLightMace, new LearnableSkill(CustomSkill.CraftLightMace, "Craft Masse légère", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHalberd, new LearnableSkill(CustomSkill.CraftHalberd, "Craft Hallebarde", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShortBow, new LearnableSkill(CustomSkill.CraftShortBow, "Craft Arc court", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTwoBladedSword, new LearnableSkill(CustomSkill.CraftTwoBladedSword, "Craft Epée double", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftGreatSword, new LearnableSkill(CustomSkill.CraftGreatSword, "Craft Epée à deux mains", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSmallShield, new LearnableSkill(CustomSkill.CraftSmallShield, "Craft Rondache", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTorch, new LearnableSkill(CustomSkill.CraftTorch, "Craft Torche", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHelmet, new LearnableSkill(CustomSkill.CraftHelmet, "Craft Heaume", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftGreatAxe, new LearnableSkill(CustomSkill.CraftGreatAxe, "Craft Grande Hache", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftAmulet, new LearnableSkill(CustomSkill.CraftAmulet, "Craft Amulette", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftArrow, new LearnableSkill(CustomSkill.CraftArrow, "Craft Flêches", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBelt, new LearnableSkill(CustomSkill.CraftBelt, "Craft Ceinture", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDagger, new LearnableSkill(CustomSkill.CraftDagger, "Craft Dague", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBolt, new LearnableSkill(CustomSkill.CraftBolt, "Craft Carreaux", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBoots, new LearnableSkill(CustomSkill.CraftBoots, "Craft Bottes", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBullets, new LearnableSkill(CustomSkill.CraftBullets, "Craft Billes", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftClub, new LearnableSkill(CustomSkill.CraftClub, "Craft Gourdin", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDarts, new LearnableSkill(CustomSkill.CraftDarts, "Craft Dards", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDireMace, new LearnableSkill(CustomSkill.CraftDireMace, "Craft Masse double", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHeavyFlail, new LearnableSkill(CustomSkill.CraftHeavyFlail, "Craft Fléau lourd", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftGloves, new LearnableSkill(CustomSkill.CraftGloves, "Craft Gants", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLightHammer, new LearnableSkill(CustomSkill.CraftLightHammer, "Craft Marteau léger", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHandAxe, new LearnableSkill(CustomSkill.CraftHandAxe, "Craft Hachette", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_wepfoc_Hax", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftKama, new LearnableSkill(CustomSkill.CraftKama, "Craft Kama", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftKukri, new LearnableSkill(CustomSkill.CraftKukri, "Craft Kukri", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftMagicRod, new LearnableSkill(CustomSkill.CraftMagicRod, "Craft Bâton magique", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftStaff, new LearnableSkill(CustomSkill.CraftStaff, "Craft Bourdon", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftMagicWand, new LearnableSkill(CustomSkill.CraftMagicWand, "Craft Baguette magique", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftMorningStar, new LearnableSkill(CustomSkill.CraftMorningStar, "Craft Morgenstern", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftPotion, new LearnableSkill(CustomSkill.CraftPotion, "Craft Potion", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftQuarterstaff, new LearnableSkill(CustomSkill.CraftQuarterstaff, "Craft Bâton", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftRapier, new LearnableSkill(CustomSkill.CraftRapier, "Craft Rapière", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftRing, new LearnableSkill(CustomSkill.CraftRing, "Craft Anneau", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftScimitar, new LearnableSkill(CustomSkill.CraftScimitar, "Craft Cimeterre", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftScythe, new LearnableSkill(CustomSkill.CraftScythe, "Craft Faux", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLargeShield, new LearnableSkill(CustomSkill.CraftLargeShield, "Craft Ecu", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTowerShield, new LearnableSkill(CustomSkill.CraftTowerShield, "Craft Pavois", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShortSpear, new LearnableSkill(CustomSkill.CraftShortSpear, "Craft Lance", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShuriken, new LearnableSkill(CustomSkill.CraftShuriken, "Craft Arbalète de poing", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSickle, new LearnableSkill(CustomSkill.CraftSickle, "Craft Serpe", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSling, new LearnableSkill(CustomSkill.CraftSling, "Craft Fronde", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftThrowingAxe, new LearnableSkill(CustomSkill.CraftThrowingAxe, "Craft Hache de lancer", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBracer, new LearnableSkill(CustomSkill.CraftBracer, "Craft Brassard", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftCloak, new LearnableSkill(CustomSkill.CraftCloak, "Craft Cape", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTrident, new LearnableSkill(CustomSkill.CraftTrident, "Craft Trident", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDwarvenWarAxe, new LearnableSkill(CustomSkill.CraftDwarvenWarAxe, "Craft Hache naine", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftWhip, new LearnableSkill(CustomSkill.CraftWhip, "Craft Fouet", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDoubleAxe, new LearnableSkill(CustomSkill.CraftDoubleAxe, "Craft Hache double", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftKatana, new LearnableSkill(CustomSkill.CraftKatana, "Craft Katana", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSpellScroll, new LearnableSkill(CustomSkill.CraftSpellScroll, "Craft Parchemin", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Intelligence, Ability.Constitution));

      // COMBAT SKILLS
      learnableDictionary.Add(CustomSkill.SeverArtery, new LearnableSkill(CustomSkill.SeverArtery, "Tranche-artère", "Adrénaline : 4\nAttaque à l'épée.\nInflige 5...21...25 secondes de saignement.", Category.Fight, "ife_SeverA", 5, 1, Ability.Strength, Ability.Dexterity));

      // INSCRIPTIONS
      learnableDictionary.Add(CustomInscription.Cuirassé, new LearnableSkill(CustomInscription.Cuirassé, "Cuirassé", "Inscription de pièce d'armure\n\n+1 Armure et consomme un emplacement libre d'inscription.", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Absorption, new LearnableSkill(CustomInscription.Absorption, "Absorption", "Inscription de pièce d'armure\n\n-1 dégâts physiques aux coups portés sur la pièce d'armure où se trouve cette inscription.\nConsomme un emplacement libre d'inscription\nSe cumule jusqu'à -3 maximum.", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Prismatique, new LearnableSkill(CustomInscription.Prismatique, "Prismatique", "Inscription de pièce d'armure\n\n+1 Armure si maîtrise de l'air > 14\n+1 Armure si maîtrise de la terre > 14\n+1 Armure si maîtrise du feu > 14\n+1 Armure si maîtrise de l'eau > 14\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Artisan, new LearnableSkill(CustomInscription.Artisan, "Artisan", "Inscription de pièce d'armure\n\n+1 Armure par sceau équipé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeDragon, new LearnableSkill(CustomInscription.GardeDragon, "Garde-Dragon", "Inscription de pièce d'armure\n\n+3 Armure contre les dragons\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeExtérieur, new LearnableSkill(CustomInscription.GardeExtérieur, "Garde-Extérieur", "Inscription de pièce d'armure\n\n+3 Armure contre les extérieurs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeAberration, new LearnableSkill(CustomInscription.GardeAberration, "Garde-Aberration", "Inscription de pièce d'armure\n\n+3 Armure contre les aberrations\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeElementaire, new LearnableSkill(CustomInscription.GardeElementaire, "Garde-Elémentaire", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Persécuteur, new LearnableSkill(CustomInscription.Persécuteur, "Persécuteur", "Inscription de pièce d'armure\n\n+1 Armure\n+6 aux dégâts divins reçus sur cette pièce d'armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Inflexible, new LearnableSkill(CustomInscription.Inflexible, "Inflexible", "Inscription de pièce d'armure\n\n+1 Armure contre les dégâts physiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Redoutable, new LearnableSkill(CustomInscription.Redoutable, "Redoutable", "Inscription de pièce d'armure\n\n+1 Armure contre les dégâts élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Marchevent, new LearnableSkill(CustomInscription.Marchevent, "Marche-Vent", "Inscription de pièce d'armure\n\n+1 Armure si affecté par 3 sorts positifs\n+2 Armure si affecté par 4 sorts positifs\n+3 Armure si affecté par 5 sorts positifs\n+4 Armure si affecté par 6 sorts positifs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeGeant, new LearnableSkill(CustomInscription.GardeGeant, "Garde-Géant", "Inscription de pièce d'armure\n\n+3 Armure contre les géants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeMagie, new LearnableSkill(CustomInscription.GardeMagie, "Garde-Magie", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures magiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeBon, new LearnableSkill(CustomInscription.GardeBon, "Garde-Bien", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées au Bien\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeChaos, new LearnableSkill(CustomInscription.GardeChaos, "Garde-Chaos", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées au Chaos\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeMal, new LearnableSkill(CustomInscription.GardeMal, "Garde-Mal", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées au Mal\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeNeutre, new LearnableSkill(CustomInscription.GardeNeutre, "Garde-Neutre", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées de façon Neutre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeLoi, new LearnableSkill(CustomInscription.GardeLoi, "Garde-Loi", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées à la Loi\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Hivernal, new LearnableSkill(CustomInscription.Hivernal, "Hivernal", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Polaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Ignifugé, new LearnableSkill(CustomInscription.Ignifugé, "Ignifugé", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts de Feu\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Paratonnerre, new LearnableSkill(CustomInscription.Paratonnerre, "Paratonerre", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts de Foudre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Tectonique, new LearnableSkill(CustomInscription.Tectonique, "Tectonique", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Terrestres\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Infiltrateur, new LearnableSkill(CustomInscription.Infiltrateur, "Infiltrateur", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Perçants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Saboteur, new LearnableSkill(CustomInscription.Saboteur, "Saboteur", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Tranchants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.AvantGarde, new LearnableSkill(CustomInscription.AvantGarde, "Avant-Garde", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Contondants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeHalfelin, new LearnableSkill(CustomInscription.GardeHalfelin, "Garde-Halfelin", "Inscription de pièce d'armure\n\n+3 Armure contre les Halfelins\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeHumain, new LearnableSkill(CustomInscription.GardeHumain, "Garde-Humain", "Inscription de pièce d'armure\n\n+3 Armure contre les Humains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeDemiElfe, new LearnableSkill(CustomInscription.GardeDemiElfe, "Garde-Demi-Elfe", "Inscription de pièce d'armure\n\n+3 Armure contre les Demi-Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeDemiOrc, new LearnableSkill(CustomInscription.GardeDemiOrc, "Garde-Demi-Orc", "Inscription de pièce d'armure\n\n+3 Armure contre les Demi-Orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeElfe, new LearnableSkill(CustomInscription.GardeElfe, "Garde-Elfe", "Inscription de pièce d'armure\n\n+3 Armure contre les Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeGnome, new LearnableSkill(CustomInscription.GardeGnome, "Garde-Gnome", "Inscription de pièce d'armure\n\n+3 Armure contre les Gnomes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeNain, new LearnableSkill(CustomInscription.GardeNain, "Garde-Gnome", "Inscription de pièce d'armure\n\n+3 Armure contre les Nains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Agitateur, new LearnableSkill(CustomInscription.Agitateur, "Agitateur", "Inscription de pièce d'armure\n\n+1 Armure en attaquant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Sentinelle, new LearnableSkill(CustomInscription.Sentinelle, "Sentinelle", "Inscription de pièce d'armure\n\n+1 Armure avec une pose de combat\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Belluaire, new LearnableSkill(CustomInscription.Belluaire, "Belluaire", "Inscription de pièce d'armure\n\n+1 Armure tant que votre compagnon animal est vivant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Eclaireur, new LearnableSkill(CustomInscription.Eclaireur, "Eclaireur", "Inscription de pièce d'armure\n\n+1 Armure tant que vous êtes sous l'effet d'une préparation\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Disciple, new LearnableSkill(CustomInscription.Disciple, "Disciple", "Inscription de pièce d'armure\n\n+2 Armure tant que vous êtes affecté par une condition\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Virtuose, new LearnableSkill(CustomInscription.Virtuose, "Virtuose", "Inscription de pièce d'armure\n\n+2 Armure tant que incantez un sort\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Fossoyeur, new LearnableSkill(CustomInscription.Fossoyeur, "Fossoyeur", "Inscription de pièce d'armure\n\n+1 Armure tant que vous êtes à moins de 80 % de votre santé max\n+2 Armure tant que vous êtes à moins de 60 % de votre santé max\n+3 Armure tant que vous êtes à moins de 40 % de votre santé max\n+4 Armure tant que vous êtes à moins de 20 % de votre santé max\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Prodige, new LearnableSkill(CustomInscription.Prodige, "Prodige", "Inscription de pièce d'armure\n\n+1 Armure tant que vous rechargez 2 capacités\n+2 Armure tant que vous rechargez 4 capacités\n+3 Armure tant que vous rechargez 6 capacités\n+4 Armure tant que vous rechargez 8 capacités\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Destructeur, new LearnableSkill(CustomInscription.Destructeur, "Destructeur", "Inscription de pièce d'armure\n\n+3 Armure tant que vous êtes affecté par un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Bénédiction, new LearnableSkill(CustomInscription.Bénédiction, "Bénédiction", "Inscription de pièce d'armure\n\n+1 Armure tant que vous êtes affecté par un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Centurion, new LearnableSkill(CustomInscription.Centurion, "Bénédiction", "Inscription de pièce d'armure\n\n+1 Armure tant que vous êtes affecté par un cri, un écho ou un chant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Oublié, new LearnableSkill(CustomInscription.Oublié, "Oublié", "Inscription de pièce d'armure\n\n+1 Armure tant que vous n'êtes affecté par aucun sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeNonVie, new LearnableSkill(CustomInscription.GardeNonVie, "Garde-Non-Vie", "Inscription de pièce d'armure\n\n+3 Armure contre les mort-vivants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeArtifice, new LearnableSkill(CustomInscription.GardeArtifice, "Garde-Artifice", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures artificielles\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeOrc, new LearnableSkill(CustomInscription.GardeOrc, "Garde-Orc", "Inscription de pièce d'armure\n\n+3 Armure contre les orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Lieutenant, new LearnableSkill(CustomInscription.Lieutenant, "Lieutenant", "Inscription de pièce d'armure\n\n-2% de durée des maléfices\n-4 Armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.MaîtreBlème, new LearnableSkill(CustomInscription.MaîtreBlème, "Maître-Blème", "Inscription de pièce d'armure\n\n+1 Armure tant que vous contrôlez 1 mort-vivant\n+2 Armure tant que vous contrôlez 3 mort-vivants\n+3 Armure tant que vous contrôlez 5 mort-vivants\n+4 Armure tant que vous contrôlez 8 mort-vivants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Marionnettiste, new LearnableSkill(CustomInscription.Marionnettiste, "Marionnettiste", "Inscription de pièce d'armure\n\n+1 Armure tant que vous contrôlez 1 invocation\n+2 Armure tant que vous contrôlez 3 invocation\n+3 Armure tant que vous contrôlez 5 invocations\n+4 Armure tant que vous contrôlez 8 invocations\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Chaman, new LearnableSkill(CustomInscription.Chaman, "Chaman", "Inscription de pièce d'armure\n\n+1 Armure tant que vous contrôlez 1 esprit\n+2 Armure tant que vous contrôlez 3 esprits\n+3 Armure tant que vous contrôlez 5 esprits\n+4 Armure tant que vous contrôlez 8 esprits\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeMonstre, new LearnableSkill(CustomInscription.GardeMonstre, "Garde-Monstre", "Inscription de pièce d'armure\n\n+3 Armure contre les Monstres Primitifs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeHumanoïde, new LearnableSkill(CustomInscription.GardeHumanoïde, "Garde-Humanoïde", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures Humanoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeMétamorphe, new LearnableSkill(CustomInscription.GardeMétamorphe, "Garde-Métamorphe", "Inscription de pièce d'armure\n\n+3 Armure contre les Métamorphes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeGoblinoïde, new LearnableSkill(CustomInscription.GardeGoblinoïde, "Garde-Goblinoïde", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures Gobelinoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeAnimal, new LearnableSkill(CustomInscription.GardeAnimal, "Garde-Animal", "Inscription de pièce d'armure\n\n+3 Armure contre les animaux\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeReptilien, new LearnableSkill(CustomInscription.GardeReptilien, "Garde-Reptilien", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures Reptiliennes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeVermine, new LearnableSkill(CustomInscription.GardeVermine, "Garde-Vermine", "Inscription de pièce d'armure\n\n+3 Armure contre les vermines\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Pourfendeur, new LearnableSkill(CustomInscription.Pourfendeur, "Pourfendeur", "Inscription d'arme\n\n+1% Dégâts\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Défense, new LearnableSkill(CustomInscription.Défense, "Défense", "Inscription d'arme\n\n+1 Armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Courage, new LearnableSkill(CustomInscription.Courage, "Courage", "Inscription d'arme\n\n+4 Santé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Fulgurance, new LearnableSkill(CustomInscription.Fulgurance, "Fulgurance", "Inscription d'arme\n\n1% de chance de diminuer de moitié le temps d'incantation de vos sorts\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Extension, new LearnableSkill(CustomInscription.Extension, "Extension", "Inscription d'arme\n\n6% de durées supplémentaires pour les sorts positifs que vous lancez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Vampirisme, new LearnableSkill(CustomInscription.Vampirisme, "Vampirisme", "Inscription d'arme\n\n+1 de drain de vie\n-1 de régénération de santé\nCumulable jusqu'à +3 max\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Zèle, new LearnableSkill(CustomInscription.Zèle, "Zèle", "Inscription d'arme\n\n+1 de gain d'énergie au touché\n-1 de régénération de santé\nNon cumulable\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurDragon, new LearnableSkill(CustomInscription.PourfendeurDragon, "Pourfendeur de Dragon", "Inscription d'arme\n\n+3% de dégâts contre les Dragons\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurExtérieur, new LearnableSkill(CustomInscription.PourfendeurExtérieur, "Pourfendeur d'Extérieur", "Inscription d'arme\n\n+3% de dégâts contre les Extérieurs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurAberration, new LearnableSkill(CustomInscription.PourfendeurAberration, "Pourfendeur d'Aberration", "Inscription d'arme\n\n+3% de dégâts contre les Aberrations\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurElementaire, new LearnableSkill(CustomInscription.PourfendeurElementaire, "Pourfendeur Elémentaire", "Inscription d'arme\n\n+3% de dégâts contre les créature élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.ForceEtHonneur, new LearnableSkill(CustomInscription.ForceEtHonneur, "Force & Honneur", "Inscription d'arme\n\n+2% de dégâts tant que votre santé est au-dessus de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MaîtreDeSonDestin, new LearnableSkill(CustomInscription.MaîtreDeSonDestin, "Maître de son Destin", "Inscription d'arme\n\n+2% de dégâts tant vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.DanseAvecLaMort, new LearnableSkill(CustomInscription.DanseAvecLaMort, "Danse avec la Mort", "Inscription d'arme\n\n+2% de dégâts tant vous êtes sous l'effet d'une pose de combat\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Sadisme, new LearnableSkill(CustomInscription.Sadisme, "Sadisme", "Inscription d'arme\n\n+3% de dégâts contre les cibles affectées par un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Masochisme, new LearnableSkill(CustomInscription.Masochisme, "Masochisme", "Inscription d'arme\n\n+2% de dégâts\n-1 Armure tant que vous attaquez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.QueDuMuscle, new LearnableSkill(CustomInscription.QueDuMuscle, "Que du muscle", "Inscription d'arme\n\n+2% de dégâts\n-1 Energie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Refuge, new LearnableSkill(CustomInscription.Refuge, "Refuge", "Inscription d'arme\n\n+1 Armure contre les dégâts physiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Protecteur, new LearnableSkill(CustomInscription.Protecteur, "Protecteur", "Inscription d'arme\n\n+1 Armure contre les dégâts élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Dévotion, new LearnableSkill(CustomInscription.Dévotion, "Dévotion", "Inscription d'arme\n\n+6 Santé tant que vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Endurance, new LearnableSkill(CustomInscription.Endurance, "Endurance", "Inscription d'arme\n\n+6 Santé tant que vous êtes sous l'effet d'une pose de combat\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Valeur, new LearnableSkill(CustomInscription.Valeur, "Valeur", "Inscription d'arme\n\n+8 Santé tant que vous êtes affecté par un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Sérénité, new LearnableSkill(CustomInscription.Sérénité, "Sérénité", "Inscription d'arme\n\n1% de chance de diviser par deux le temps de recharge de vos capacités\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.ToutAuTalent, new LearnableSkill(CustomInscription.ToutAuTalent, "Tout au Talent", "Inscription d'arme\n\n2% de chance de diviser par deux le temps d'incantation des sorts correspondant à l'attribut de votre arme\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Vision, new LearnableSkill(CustomInscription.Vision, "Vision", "Inscription d'arme\n\n+1 Energie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurGéant, new LearnableSkill(CustomInscription.PourfendeurGéant, "Pourfendeur de Géant", "Inscription d'arme\n\n+3% de dégâts contre les Géants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurMagie, new LearnableSkill(CustomInscription.PourfendeurMagie, "Pourfendeur Magique", "Inscription d'arme\n\n+3% de dégâts contre les créatures Magiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurBien, new LearnableSkill(CustomInscription.PourfendeurBien, "Pourfendeur du Bien", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées au Bien\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurChaos, new LearnableSkill(CustomInscription.PourfendeurChaos, "Pourfendeur du Chaos", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées au Chaos\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurMal, new LearnableSkill(CustomInscription.PourfendeurMal, "Pourfendeur du Mal", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées au Mal\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurNeutralité, new LearnableSkill(CustomInscription.PourfendeurNeutralité, "Pourfendeur de la Neutralité", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées de façon Neutre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurLoi, new LearnableSkill(CustomInscription.PourfendeurLoi, "Pourfendeur de la Loi", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées à la Loi\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.VengeanceSeraMienne, new LearnableSkill(CustomInscription.VengeanceSeraMienne, "Vengeance sera mienne", "Inscription d'arme\n\n+3% de dégâts tant que votre santé est en-dessous de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.AccueillezLaFaucheuse, new LearnableSkill(CustomInscription.AccueillezLaFaucheuse, "Accueillez la Faucheuse", "Inscription d'arme\n\n+3% tant que vous êtes affecté par un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Givroclaste, new LearnableSkill(CustomInscription.Givroclaste, "Givroclaste", "Inscription d'arme\n\n+2% de dégâts Polaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Pyroclaste, new LearnableSkill(CustomInscription.Pyroclaste, "Pyroclaste", "Inscription d'arme\n\n+2% de dégâts de Feu\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Electroclaste, new LearnableSkill(CustomInscription.Electroclaste, "Electroclaste", "Inscription d'arme\n\n+2% de dégâts de Foudre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Séismoclaste, new LearnableSkill(CustomInscription.Séismoclaste, "Séismoclaste", "Inscription d'arme\n\n+2% de dégâts Terrestres\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Aiguillon, new LearnableSkill(CustomInscription.Aiguillon, "Aiguillon", "Inscription d'arme\n\n+1% de dégâts de Perçant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Rasoir, new LearnableSkill(CustomInscription.Rasoir, "Rasoir", "Inscription d'arme\n\n+1% de dégâts de Tranchant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Fracasseur, new LearnableSkill(CustomInscription.Fracasseur, "Fracasseur", "Inscription d'arme\n\n+1% de dégâts de Contondant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurHalfelin, new LearnableSkill(CustomInscription.PourfendeurHalfelin, "Pourfendeur d'Halfelin", "Inscription d'arme\n\n+3% de dégâts contre les Hafelins\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurHumain, new LearnableSkill(CustomInscription.PourfendeurHumain, "Pourfendeur d'Humain", "Inscription d'arme\n\n+3% de dégâts contre les Humains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurDemiElfe, new LearnableSkill(CustomInscription.PourfendeurDemiElfe, "Pourfendeur de Demi-Elfe", "Inscription d'arme\n\n+3% de dégâts contre les Demi-Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurDemiOrc, new LearnableSkill(CustomInscription.PourfendeurDemiOrc, "Pourfendeur de Demi-Orc", "Inscription d'arme\n\n+3% de dégâts contre les Demi-Orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurElfe, new LearnableSkill(CustomInscription.PourfendeurElfe, "Pourfendeur d'Elfe", "Inscription d'arme\n\n+3% de dégâts contre les Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurGnome, new LearnableSkill(CustomInscription.PourfendeurGnome, "Pourfendeur de Gnome", "Inscription d'arme\n\n+3% de dégâts contre les Gnomes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurNain, new LearnableSkill(CustomInscription.PourfendeurNain, "Pourfendeur de Nain", "Inscription d'arme\n\n+3% de dégâts contre les Nains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.LaSécuritéAvantTout, new LearnableSkill(CustomInscription.LaSécuritéAvantTout, "La sécurité avant tout !", "Inscription d'arme\n\n+1 d'énergie tant que votre santé est au-dessus de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.AyezFoi, new LearnableSkill(CustomInscription.AyezFoi, "Ayez foi", "Inscription d'arme\n\n+1 d'énergie tant que vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.AucunRecours, new LearnableSkill(CustomInscription.AucunRecours, "Aucun recours !", "Inscription d'arme\n\n+2 d'énergie tant que votre santé est en-dessous de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MienneEstLaPeine, new LearnableSkill(CustomInscription.MienneEstLaPeine, "Mienne est la peine", "Inscription d'arme\n\n+2 d'énergie tant que vous êtes sous l'effet d'un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.CarpeDiem, new LearnableSkill(CustomInscription.CarpeDiem, "Carpe Diem", "Inscription d'arme\n\n+15 d'énergie\n-1 de récupération d'énergie\nNon cumulable\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Sismique, new LearnableSkill(CustomInscription.Sismique, "Sismique", "Inscription d'arme\n\nVotre arme effectue désormais des dégâts Terrestres\nConsomme un emplacement libre d'inscription\nAppliquer cette inscription sur une arme disposant déjà d'une modification de dégâts remplacera la précédente", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Incendiaire, new LearnableSkill(CustomInscription.Incendiaire, "Incendiaire", "Inscription d'arme\n\nVotre arme effectue désormais des dégâts de Feu\nConsomme un emplacement libre d'inscription\nAppliquer cette inscription sur une arme disposant déjà d'une modification de dégâts remplacera la précédente", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Polaire, new LearnableSkill(CustomInscription.Polaire, "Polaire", "Inscription d'arme\n\nVotre arme effectue désormais des dégâts Polaires\nConsomme un emplacement libre d'inscription\nAppliquer cette inscription sur une arme disposant déjà d'une modification de dégâts remplacera la précédente", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Electrocution, new LearnableSkill(CustomInscription.Electrocution, "Electrocution", "Inscription d'arme\n\nVotre arme effectue désormais des dégâts de Foudre\nConsomme un emplacement libre d'inscription\nAppliquer cette inscription sur une arme disposant déjà d'une modification de dégâts remplacera la précédente", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Fureur, new LearnableSkill(CustomInscription.Fureur, "Fureur", "Inscription d'arme\n\n1% de chance de doubler l'adrénaline lors de vos attaques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Pénétration, new LearnableSkill(CustomInscription.Pénétration, "Pénétration", "Inscription d'arme\n\n3% de chance d'obtenir +20% de pénétration d'armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurNonVie, new LearnableSkill(CustomInscription.PourfendeurNonVie, "Pourfendeur de la Non-Vie", "Inscription d'arme\n\n+3% de dégâts contre les mort-vivants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurOrc, new LearnableSkill(CustomInscription.PourfendeurOrc, "Pourfendeur d'Orc", "Inscription d'arme\n\n+3% de dégâts contre les Orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Maîtrise, new LearnableSkill(CustomInscription.Maîtrise, "Maîtrise", "Inscription d'arme\n\n+3% de chance de donner +1 à la compétence de maîtrise de l'objet lors de l'utilisation d'un sort ou d'une compétence\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Adepte, new LearnableSkill(CustomInscription.Adepte, "Adepte", "Inscription d'arme\n\n+3% de chance de diviser par deux le temps d'incantation des sorts liés à l'attribut de votre arme\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Barbelé, new LearnableSkill(CustomInscription.Barbelé, "Barbelé", "Inscription d'arme\n\n+4% de durée des effets de saignements que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Atrocité, new LearnableSkill(CustomInscription.Atrocité, "Atrocité", "Inscription d'arme\n\n+4% de durée des effets de blessures profondes que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Handicapant, new LearnableSkill(CustomInscription.Handicapant, "Handicapant", "Inscription d'arme\n\n+4% de durée des effets d'infirmités que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Pesanteur, new LearnableSkill(CustomInscription.Pesanteur, "Pesanteur", "Inscription d'arme\n\n+4% de durée des effets des faiblesses que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Venimeuse, new LearnableSkill(CustomInscription.Venimeuse, "Venimeuse", "Inscription d'arme\n\n+4% de durée des effets d'empoisonnement que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Mutisme, new LearnableSkill(CustomInscription.Mutisme, "Mutisme", "Inscription d'arme\n\n+4% de durée des effets d'étourdissement que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurMonstres, new LearnableSkill(CustomInscription.PourfendeurMonstres, "Pourfendeur de Monstres", "Inscription d'arme\n\n+3% de dégâts contre les Monstres Primitifs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurHumanoïdes, new LearnableSkill(CustomInscription.PourfendeurHumanoïdes, "Pourfendeur d'Humanoïdes", "Inscription d'arme\n\n+3% de dégâts contre les créatures Humanoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurMétamorphes, new LearnableSkill(CustomInscription.PourfendeurMétamorphes, "Pourfendeur de Métamorphes", "Inscription d'arme\n\n+3% de dégâts contre les Métamorphes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurGobelins, new LearnableSkill(CustomInscription.PourfendeurGobelins, "Pourfendeur de Gobelins", "Inscription d'arme\n\n+3% de dégâts contre les créatures Gobelinoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurAnimal, new LearnableSkill(CustomInscription.PourfendeurAnimal, "Pourfendeur Animal", "Inscription d'arme\n\n+3% de dégâts contre les animaux\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurReptilien, new LearnableSkill(CustomInscription.PourfendeurReptilien, "Pourfendeur Reptilien", "Inscription d'arme\n\n+3% de dégâts contre les créatures Reptiliennes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurVermine, new LearnableSkill(CustomInscription.PourfendeurVermine, "Pourfendeur de Vermine", "Inscription d'arme\n\n+3% de dégâts contre les Vermines\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Blindé, new LearnableSkill(CustomInscription.Blindé, "Blindé", "Inscription de bouclier\n\n+1 d'armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseDragon, new LearnableSkill(CustomInscription.RepousseDragon, "Repousse Dragon", "Inscription de bouclier\n\n+2 d'armure contre les Dragons\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseExtérieur, new LearnableSkill(CustomInscription.RepousseExtérieur, "Repousse Extérieur", "Inscription de bouclier\n\n+2 d'armure contre les Extérieurs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseAberration, new LearnableSkill(CustomInscription.RepousseAberration, "Repousse Aberration", "Inscription de bouclier\n\n+2 d'armure contre les Aberrations\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseElementaire, new LearnableSkill(CustomInscription.RepousseElementaire, "Repousse Elémentaire", "Inscription de bouclier\n\n+2 d'armure contre les créatures élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LongueVieAuRoi, new LearnableSkill(CustomInscription.LongueVieAuRoi, "Longue vie au Roi !", "Inscription de bouclier\n\n+1 d'armure tant que votre santé est au-dessus de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LaFoiEstMonBouclier, new LearnableSkill(CustomInscription.LaFoiEstMonBouclier, "La Foi est mon bouclier", "Inscription de bouclier\n\n+1 d'armure tant que vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LaSurvieDuMieuxEquipé, new LearnableSkill(CustomInscription.LaSurvieDuMieuxEquipé, "La survie du mieux équipé", "Inscription de bouclier\n\n+1 d'armure contre les dégâts physiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.ParéEnTouteSaison, new LearnableSkill(CustomInscription.ParéEnTouteSaison, "Paré en toute saison", "Inscription de bouclier\n\n+1 d'armure contre les dégâts élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseGéant, new LearnableSkill(CustomInscription.RepousseGéant, "Repousse Géant", "Inscription de bouclier\n\n+2 d'armure contre les géants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseMagie, new LearnableSkill(CustomInscription.RepousseMagie, "Repousse Magie", "Inscription de bouclier\n\n+2 d'armure contre les créatures magiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseBon, new LearnableSkill(CustomInscription.RepousseBon, "Repousse Bon", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées au Bien\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseChaos, new LearnableSkill(CustomInscription.RepousseChaos, "Repousse Chaos", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées au Chaos\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseMal, new LearnableSkill(CustomInscription.RepousseMal, "Repousse Mal", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées au Mal\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseNeutre, new LearnableSkill(CustomInscription.RepousseNeutre, "Repousse Neutre", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées de façon Neutre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseLoi, new LearnableSkill(CustomInscription.RepousseLoi, "Repousse Loi", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées à la Loi\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.ContreVentsEtMarées, new LearnableSkill(CustomInscription.ContreVentsEtMarées, "Contre vents et marées", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Perçants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.lEnigmeDelAcier, new LearnableSkill(CustomInscription.lEnigmeDelAcier, "L'énigme de l'acier", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Tranchants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.PasLeVisage, new LearnableSkill(CustomInscription.PasLeVisage, "Pas le visage !", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Contondants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.PortéParLeVent, new LearnableSkill(CustomInscription.PortéParLeVent, "Porté par le vent", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Polaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.CommeUnRoc, new LearnableSkill(CustomInscription.CommeUnRoc, "Comme un roc", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Terrestres\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Illumination, new LearnableSkill(CustomInscription.Illumination, "Illumination", "Inscription de bouclier\n\n+2 d'armure contre les dégâts de Feu\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.ChevaucheLaTempête, new LearnableSkill(CustomInscription.ChevaucheLaTempête, "Chevauche la tempête", "Inscription de bouclier\n\n+2 d'armure contre les dégâts de Foudre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseHalfelin, new LearnableSkill(CustomInscription.RepousseHalfelin, "Repousse Halfelin", "Inscription de bouclier\n\n+2 d'armure contre les Halfelins\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseHumain, new LearnableSkill(CustomInscription.RepousseHumain, "Repousse Humain", "Inscription de bouclier\n\n+2 d'armure contre les Humains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseDemiElfe, new LearnableSkill(CustomInscription.RepousseDemiElfe, "Repousse Demi-Elfe", "Inscription de bouclier\n\n+2 d'armure contre les Demi-Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseDemiOrc, new LearnableSkill(CustomInscription.RepousseDemiOrc, "Repousse Demi-Orc", "Inscription de bouclier\n\n+2 d'armure contre les Demi-Orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseElfe, new LearnableSkill(CustomInscription.RepousseElfe, "Repousse Elfe", "Inscription de bouclier\n\n+2 d'Armure contre les Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseGnome, new LearnableSkill(CustomInscription.RepousseGnome, "Repousse Gnome", "Inscription de bouclier\n\n+2 d'Armure contre les Gnomes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseNain, new LearnableSkill(CustomInscription.RepousseNain, "Repousse Nain", "Inscription de bouclier\n\n+2 d'Armure contre les Nains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LaRaisonDuPlusFort, new LearnableSkill(CustomInscription.LaRaisonDuPlusFort, "La raison du plus fort", "Inscription de bouclier\n\n+1 d'armure tant que vous attaquez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.SavoirNestQueLaMoitiéDuChemin, new LearnableSkill(CustomInscription.SavoirNestQueLaMoitiéDuChemin, "Savoir n'est que la moitié du chemin", "Inscription de bouclier\n\n+1 d'armure tant que vous lancez un sort\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.CeNestQuuneEgratignure, new LearnableSkill(CustomInscription.CeNestQuuneEgratignure, "Ce n'est qu'une égratignure", "Inscription de bouclier\n\n+2 d'armure tant que votre santé est en-dessous de 50 %\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.NeTremblezPas, new LearnableSkill(CustomInscription.NeTremblezPas, "Ne tremblez pas", "Inscription de bouclier\n\n+2 d'Armure tant que vous êtes sous l'effet d'un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Vigueur, new LearnableSkill(CustomInscription.Vigueur, "Vigueur", "Inscription de bouclier\n\n+4 Santé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseNonVie, new LearnableSkill(CustomInscription.RepousseNonVie, "Repousse Non-Vie", "Inscription de bouclier\n\n+2 d'Armure contre les mort-vivants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseOrc, new LearnableSkill(CustomInscription.RepousseOrc, "Repousse Orc", "Inscription de bouclier\n\n+2 d'Armure contre les créatures artificielles\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Piété, new LearnableSkill(CustomInscription.Piété, "Piété", "Inscription de bouclier\n\n+6 de Santé tant que vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Ténacité, new LearnableSkill(CustomInscription.Ténacité, "Ténacité", "Inscription de bouclier\n\n+6 de Santé tant que vous êtes sous l'effet d'une pose de combat\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Détermination, new LearnableSkill(CustomInscription.Détermination, "Détermination", "Inscription de bouclier\n\n+8 de Santé tant que vous êtes sous l'effet d'un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.HeureuxLesSimplesdEsprits, new LearnableSkill(CustomInscription.HeureuxLesSimplesdEsprits, "Heureux les simples d'esprits", "Inscription de bouclier\n\n+1 d'Armure\n-1 d'Energie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LaVieNestQueDouleur, new LearnableSkill(CustomInscription.LaVieNestQueDouleur, "La vie n'est que douleur", "Inscription de bouclier\n\n+1 d'Armure\n-3 de Santé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseMonstre, new LearnableSkill(CustomInscription.RepousseMonstre, "Repousse Monstre", "Inscription de bouclier\n\n+2 d'Armure contre les Monstres Primitifs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseHumanoïde, new LearnableSkill(CustomInscription.RepousseHumanoïde, "Repousse Humanoïde", "Inscription de bouclier\n\n+2 d'Armure contre les créatures Humanoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseGobelinoïde, new LearnableSkill(CustomInscription.RepousseGobelinoïde, "Repousse Gobelin", "Inscription de bouclier\n\n+2 d'Armure contre les créatures Gobelinoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseAnimal, new LearnableSkill(CustomInscription.RepousseAnimal, "Repousse Animal", "Inscription de bouclier\n\n+2 d'Armure contre les Animaux\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseMétamorphe, new LearnableSkill(CustomInscription.RepousseMétamorphe, "Repousse Métamorphe", "Inscription de bouclier\n\n+2 d'Armure contre les Métamorphes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseReptilien, new LearnableSkill(CustomInscription.RepousseReptilien, "Repousse Reptilien", "Inscription de bouclier\n\n+2 d'Armure contre les créatures Reptiliennes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseVermine, new LearnableSkill(CustomInscription.RepousseVermine, "Repousse Vermine", "Inscription de bouclier\n\n+2 d'Armure contre les Vermines\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.OnApprendDeSesErreurs, new LearnableSkill(CustomInscription.OnApprendDeSesErreurs, "On apprend de ses erreurs", "Inscription de bijoux\n\n+1 d'Intelligence\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PatienceEtLongueurDeTemps, new LearnableSkill(CustomInscription.PatienceEtLongueurDeTemps, "Patience et longueur de temps", "Inscription de bijoux\n\n+1 de Sagesse\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Evocateur, new LearnableSkill(CustomInscription.Evocateur, "Evocateur", "Inscription de bijoux\n\n+1 emplacement de sort\nEmplacements de sorts maximum 12\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.AuxDependsDeCeluiQuilEcoute, new LearnableSkill(CustomInscription.AuxDependsDeCeluiQuilEcoute, "Aux dépends de celui qui l'écoute", "Inscription de bijoux\n\n+1 de Charisme\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PoingDeFer, new LearnableSkill(CustomInscription.PoingDeFer, "Poing de fer", "Inscription de bijoux\n\n+1 secondes de durée des renversements que vous infligez\nDurée maximale : 3 secondes\nCette inscription n'a donc pas d'effet sur les capacités dont la durée de renversement est déjà de 3 secondes ou plus\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Ensanglanté, new LearnableSkill(CustomInscription.Ensanglanté, "Ensanglanté", "Inscription de bijoux\n\n-2% de temps d'incantation des sorts exploitant des cadavres\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Invocateur, new LearnableSkill(CustomInscription.Invocateur, "Invocateur", "Inscription de bijoux\n\n-2% de temps d'incantation des sorts d'invocation\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Belliciste, new LearnableSkill(CustomInscription.Belliciste, "Belliciste", "Inscription de bijoux\n\n+1 emplacement de capacité de combat\nMaximum : 12\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.LaMeilleureDesRaisons, new LearnableSkill(CustomInscription.LaMeilleureDesRaisons, "La meilleur des raisons", "Inscription de bijoux\n\n+1 Force\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Opportuniste, new LearnableSkill(CustomInscription.Opportuniste, "Opportuniste", "Inscription de bijoux\n\n+1 Dextérité\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Clarté, new LearnableSkill(CustomInscription.Clarté, "Clarté", "Inscription de bijoux\n\n-5% de durée des effets d'aveuglement vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Pureté, new LearnableSkill(CustomInscription.Pureté, "Pureté", "Inscription de bijoux\n\n-5% de durée des effets de maladie vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Récupération, new LearnableSkill(CustomInscription.Récupération, "Récupération", "Inscription de bijoux\n\n-5% de durée des effets d'étourdissement vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Cicatrisant, new LearnableSkill(CustomInscription.Cicatrisant, "Cicatrisant", "Inscription de bijoux\n\n-5% de durée des effets de blessures profondes vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Ardeur, new LearnableSkill(CustomInscription.Ardeur, "Ardeur", "Inscription de bijoux\n\n-5% de durée des effets de faiblesse vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Mithridate, new LearnableSkill(CustomInscription.Mithridate, "Mithridate", "Inscription de bijoux\n\n-5% de durée des effets d'empoisonnement vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Coagulant, new LearnableSkill(CustomInscription.Coagulant, "Coagulant", "Inscription de bijoux\n\n-5% de durée des effets de saignement vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Hardiesse, new LearnableSkill(CustomInscription.Hardiesse, "Hardiesse", "Inscription de bijoux\n\n-5% de durée des effets d'infirmité vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Survivant, new LearnableSkill(CustomInscription.Survivant, "Survivant", "Inscription de bijoux\n\n+1 Santé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Rayonnant, new LearnableSkill(CustomInscription.Rayonnant, "Rayonnant", "Inscription de bijoux\n\n+1 Energie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Résilence, new LearnableSkill(CustomInscription.Résilence, "Résilence", "Inscription de bijoux\n\n+1 Constitution\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionDurabilityMinor, new LearnableSkill(CustomInscription.MateriaDetectionDurabilityMinor, "Matéria détection durable mineure", "Inscription d'objet\n\n+2% de durabilité des inscriptions de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionDurability, new LearnableSkill(CustomInscription.MateriaDetectionDurability, "Matéria détection durable", "Inscription d'objet\n\n+4% de durabilité des inscriptions de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionDurabilityMajor, new LearnableSkill(CustomInscription.MateriaDetectionDurabilityMajor, "Matéria détection durable majeure", "Inscription d'objet\n\n+6% de durabilité des inscriptions de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionDurabilitySupreme, new LearnableSkill(CustomInscription.MateriaDetectionDurabilitySupreme, "Matéria détection durable suprême", "Inscription d'objet\n\n+8% de durabilité des inscriptions de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaExtractionDurabilityMinor, new LearnableSkill(CustomInscription.MateriaExtractionDurabilityMinor, "Matéria extraction durable mineure", "Inscription d'objet\n\n+2% de durabilité des inscriptions d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionDurability, new LearnableSkill(CustomInscription.MateriaExtractionDurability, "Matéria extraction durable", "Inscription d'objet\n\n+4% de durabilité des inscriptions d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionDurabilityMajor, new LearnableSkill(CustomInscription.MateriaExtractionDurabilityMajor, "Matéria extraction durable majeure", "Inscription d'objet\n\n+6% de durabilité des inscriptions d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionDurabilitySupreme, new LearnableSkill(CustomInscription.MateriaExtractionDurabilitySupreme, "Matéria extraction durable suprême", "Inscription d'objet\n\n+8% de durabilité des inscriptions d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaProductionDurabilityMinor, new LearnableSkill(CustomInscription.MateriaProductionDurabilityMinor, "Matéria production durable mineure", "Inscription d'objet\n\n+2% de durabilité des inscriptions de production utilisant de la matéria\nLa présence d'au moins une inscription de production est nécessaire pour réaliser une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionDurability, new LearnableSkill(CustomInscription.MateriaProductionDurability, "Matéria production durable", "Inscription d'objet\n\n+4% de durabilité des inscriptions de production utilisant de la matéria\nLa présence d'au moins une inscription de production est nécessaire pour réaliser une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionDurabilityMajor, new LearnableSkill(CustomInscription.MateriaProductionDurabilityMajor, "Matéria production durable majeure", "Inscription d'objet\n\n+6% de durabilité des inscriptions de production utilisant de la matéria\nLa présence d'au moins une inscription de production est nécessaire pour réaliser une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionDurabilitySupreme, new LearnableSkill(CustomInscription.MateriaProductionDurabilitySupreme, "Matéria production durable suprême", "Inscription d'objet\n\n+8% de durabilité des inscriptions de production utilisant de la matéria\nLa présence d'au moins une inscription de production est nécessaire pour réaliser une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaInscriptionDurabilityMinor, new LearnableSkill(CustomInscription.MateriaInscriptionDurabilityMinor, "Matéria inscription durable mineure", "Inscription d'objet\n\n+2% de durabilité des inscriptions de calligraphies\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionDurability, new LearnableSkill(CustomInscription.MateriaInscriptionDurability, "Matéria inscription durable", "Inscription d'objet\n\n+4% de durabilité des inscriptions de calligraphies\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionDurabilityMajor, new LearnableSkill(CustomInscription.MateriaInscriptionDurabilityMajor, "Matéria inscription durable majeure", "Inscription d'objet\n\n+6% de durabilité des inscriptions de calligraphies\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionDurabilitySupreme, new LearnableSkill(CustomInscription.MateriaInscriptionDurabilitySupreme, "Matéria inscription durable suprême", "Inscription d'objet\n\n+8% de durabilité des inscriptions de calligraphies\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionAccuracyMinor, new LearnableSkill(CustomInscription.MateriaDetectionAccuracyMinor, "Matéria détection précise mineure", "Inscription d'objet\n\n+2% de précision des estimations de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionAccuracy, new LearnableSkill(CustomInscription.MateriaDetectionAccuracy, "Matéria détection précise", "Inscription d'objet\n\n+4% de précision des estimations de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionAccuracyMajor, new LearnableSkill(CustomInscription.MateriaDetectionAccuracyMajor, "Matéria détection précise majeure", "Inscription d'objet\n\n+6% de précision des estimations de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionAccuracySupreme, new LearnableSkill(CustomInscription.MateriaDetectionAccuracySupreme, "Matéria détection précise suprême", "Inscription d'objet\n\n+8% de précision des estimations de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaExtractionSpeedMinor, new LearnableSkill(CustomInscription.MateriaExtractionSpeedMinor, "Matéria extraction rapide mineure", "Inscription d'objet\n\n+2% de vitesse d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionSpeed, new LearnableSkill(CustomInscription.MateriaExtractionSpeed, "Matéria extraction rapide", "Inscription d'objet\n\n+4% de vitesse d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionSpeedMajor, new LearnableSkill(CustomInscription.MateriaExtractionSpeedMajor, "Matéria extraction rapide majeure", "Inscription d'objet\n\n+6% de vitesse d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionSpeedSupreme, new LearnableSkill(CustomInscription.MateriaExtractionSpeedSupreme, "Matéria extraction rapide suprême", "Inscription d'objet\n\n+8% de vitesse d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaExtractionYieldMinor, new LearnableSkill(CustomInscription.MateriaExtractionYieldMinor, "Matéria extraction efficace mineure", "Inscription d'objet\n\n+2% de rendement d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionYield, new LearnableSkill(CustomInscription.MateriaExtractionYield, "Matéria extraction efficace", "Inscription d'objet\n\n+4% de rendement d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionYieldMajor, new LearnableSkill(CustomInscription.MateriaExtractionYieldMajor, "Matéria extraction efficace majeure", "Inscription d'objet\n\n+6% de rendement d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionYieldSupreme, new LearnableSkill(CustomInscription.MateriaExtractionYieldSupreme, "Matéria extraction efficace suprême", "Inscription d'objet\n\n+8% de rendement d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaExtractionQualityMinor, new LearnableSkill(CustomInscription.MateriaExtractionQualityMinor, "Matéria extraction concentrée mineure", "Inscription d'objet\n\n+2% de chance d'obtenir une concentration de matéria de qualité supérieure lors de l'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionQuality, new LearnableSkill(CustomInscription.MateriaExtractionQuality, "Matéria extraction concentrée", "Inscription d'objet\n\n+4% de chance d'obtenir une concentration de matéria de qualité supérieure lors de l'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionQualityMajor, new LearnableSkill(CustomInscription.MateriaExtractionQualityMajor, "Matéria extraction concentrée majeure", "Inscription d'objet\n\n+6% de chance d'obtenir une concentration de matéria de qualité supérieure lors de l'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionQualitySupreme, new LearnableSkill(CustomInscription.MateriaExtractionQualitySupreme, "Matéria extraction concentrée suprême", "Inscription d'objet\n\n+8% de chance d'obtenir une concentration de matéria de qualité supérieure lors de l'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionSpeedMinor, new LearnableSkill(CustomInscription.MateriaDetectionSpeedMinor, "Matéria détection rapide mineure", "Inscription d'objet\n\n+2% de vitesse de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionSpeed, new LearnableSkill(CustomInscription.MateriaDetectionSpeed, "Matéria détection rapide", "Inscription d'objet\n\n+4% de vitesse de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionSpeedMajor, new LearnableSkill(CustomInscription.MateriaDetectionSpeedMajor, "Matéria détection rapide majeure", "Inscription d'objet\n\n+6% de vitesse de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionSpeedSupreme, new LearnableSkill(CustomInscription.MateriaDetectionSpeedSupreme, "Matéria détection rapide suprême", "Inscription d'objet\n\n+8% de vitesse de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionReliabilityMinor, new LearnableSkill(CustomInscription.MateriaDetectionReliabilityMinor, "Matéria détection fiable mineure", "Inscription d'objet\n\n+2% de chance de révéler un peu lors de la détection de matéria en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionReliability, new LearnableSkill(CustomInscription.MateriaDetectionReliability, "Matéria détection fiable", "Inscription d'objet\n\n+4% de chance de révéler un peu lors de la détection de matéria en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionReliabilityMajor, new LearnableSkill(CustomInscription.MateriaDetectionReliabilityMajor, "Matéria détection fiable majeure", "Inscription d'objet\n\n+6% de chance de révéler un peu lors de la détection de matéria en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionReliabilitySupreme, new LearnableSkill(CustomInscription.MateriaDetectionReliabilitySupreme, "Matéria détection fiable suprême", "Inscription d'objet\n\n+8% de chance de révéler un peu lors de la détection de matéria en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionQualityMinor, new LearnableSkill(CustomInscription.MateriaDetectionQualityMinor, "Matéria détection concentrée mineure", "Inscription d'objet\n\n+2% de chance de révéler un dépôt de concentration de matéria supérieure en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionQuality, new LearnableSkill(CustomInscription.MateriaDetectionQuality, "Matéria détection concentrée", "Inscription d'objet\n\n+4% de chance de révéler un dépôt de concentration de matéria supérieure en mode actifa\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionQualityMajor, new LearnableSkill(CustomInscription.MateriaDetectionQualityMajor, "Matéria détection concentrée majeure", "Inscription d'objet\n\n+6% de chance de révéler un dépôt de concentration de matéria supérieure en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionQualitySupreme, new LearnableSkill(CustomInscription.MateriaDetectionQualitySupreme, "Matéria détection concentrée suprême", "Inscription d'objet\n\n+8% de chance de révéler un dépôt de concentration de matéria supérieure en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaProductionSpeedMinor, new LearnableSkill(CustomInscription.MateriaProductionSpeedMinor, "Matéria production rapide mineure", "Inscription d'objet\n\n+2% de vitesse de production artisanale faisant usage de matéria\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionSpeed, new LearnableSkill(CustomInscription.MateriaProductionSpeed, "Matéria production rapide", "Inscription d'objet\n\n+4% de vitesse de production artisanale faisant usage de matéria\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionSpeedMajor, new LearnableSkill(CustomInscription.MateriaProductionSpeedMajor, "Matéria production rapide majeure", "Inscription d'objet\n\n+6% de vitesse de production artisanale faisant usage de matéria\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionSpeedSupreme, new LearnableSkill(CustomInscription.MateriaProductionSpeedSupreme, "Matéria production rapide suprême", "Inscription d'objet\n\n+8% de vitesse de production artisanale faisant usage de matéria\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaProductionYieldMinor, new LearnableSkill(CustomInscription.MateriaProductionYieldMinor, "Matéria production efficace mineure", "Inscription d'objet\n\n-2% de quantité de matéria nécessaire pour la production artisanale\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionYield, new LearnableSkill(CustomInscription.MateriaProductionYield, "Matéria production efficace", "Inscription d'objet\n\n-4% de quantité de matéria nécessaire pour la production artisanale\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionYieldMajor, new LearnableSkill(CustomInscription.MateriaProductionYieldMajor, "Matéria production efficace majeure", "Inscription d'objet\n\n-6% de quantité de matéria nécessaire pour la production artisanale\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionYieldSupreme, new LearnableSkill(CustomInscription.MateriaProductionYieldSupreme, "Matéria production efficace suprême", "Inscription d'objet\n\n-8% de quantité de matéria nécessaire pour la production artisanale\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaProductionQualityMinor, new LearnableSkill(CustomInscription.MateriaProductionQualityMinor, "Matéria production qualité mineure", "Inscription d'objet\n\n+1% de chance de réaliser un objet artisanal disposant d'un emplacement d'inscription supplémentaire\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionQuality, new LearnableSkill(CustomInscription.MateriaProductionQuality, "Matéria production qualité mineure", "Inscription d'objet\n\n+2% de chance de réaliser un objet artisanal disposant d'un emplacement d'inscription supplémentaire\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionQualityMajor, new LearnableSkill(CustomInscription.MateriaProductionQualityMajor, "Matéria production qualité mineure", "Inscription d'objet\n\n+3% de chance de réaliser un objet artisanal disposant d'un emplacement d'inscription supplémentaire\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionQualitySupreme, new LearnableSkill(CustomInscription.MateriaProductionQualitySupreme, "Matéria production qualité mineure", "Inscription d'objet\n\n+4% de chance de réaliser un objet artisanal disposant d'un emplacement d'inscription supplémentaire\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaInscriptionSpeedMinor, new LearnableSkill(CustomInscription.MateriaInscriptionSpeedMinor, "Calligraphie rapide mineure", "Inscription d'objet\n\n+2% de vitesse d'inscription lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionSpeed, new LearnableSkill(CustomInscription.MateriaInscriptionSpeed, "Calligraphie rapide", "Inscription d'objet\n\n+4% de vitesse d'inscription lors de la calligraphiea\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionSpeedMajor, new LearnableSkill(CustomInscription.MateriaInscriptionSpeedMajor, "Calligraphie rapide majeure", "Inscription d'objet\n\n+6% de vitesse d'inscription lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionSpeedSupreme, new LearnableSkill(CustomInscription.MateriaInscriptionSpeedSupreme, "Calligraphie rapide suprême", "Inscription d'objet\n\n+8% de vitesse d'inscription lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaInscriptionYieldMinor, new LearnableSkill(CustomInscription.MateriaInscriptionYieldMinor, "Calligraphie efficace mineure", "Inscription d'objet\n\n-2% de quantité d'influx nécessaire lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionYield, new LearnableSkill(CustomInscription.MateriaInscriptionYield, "Calligraphie efficace", "Inscription d'objet\n\n-4% de quantité d'influx nécessaire lors de la calligraphiea\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionYieldMajor, new LearnableSkill(CustomInscription.MateriaInscriptionYieldMajor, "Calligraphie efficace majeure", "Inscription d'objet\n\n-6% de quantité d'influx nécessaire lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionYieldSupreme, new LearnableSkill(CustomInscription.MateriaInscriptionYieldSupreme, "Calligraphie efficace suprême", "Inscription d'objet\n\n-8% de quantité d'influx nécessaire lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      RefreshLearnableDescriptions();
    }
    private static bool HandleMediumArmorProficiency(PlayerSystem.Player player, int customSkillId)
    {
      player.oid.LoginCreature.AddFeat((Feat)CustomSkill.MediumArmorProficiency);

      if (player.oid.LoginCreature.ActiveEffects.Any(e => e.Tag == EffectSystem.ShieldArmorDisadvantageEffectTag))
      {
        NwItem armor = player.oid.LoginCreature.GetItemInSlot(InventorySlot.Chest);

        if (armor is not null && armor.BaseACValue > 5 && !player.oid.LoginCreature.KnowsFeat(Feat.ArmorProficiencyHeavy))
          return true;

        EffectUtils.RemoveTaggedEffect(player.oid.LoginCreature, EffectSystem.ShieldArmorDisadvantageEffectTag);
      }

      return true;
    }
    private static bool HandleHeavyArmorProficiency(Player player, int customSkillId)
    {
      player.oid.LoginCreature.AddFeat((Feat)CustomSkill.HeavyArmorProficiency);
      EffectUtils.RemoveTaggedEffect(player.oid.LoginCreature, EffectSystem.ShieldArmorDisadvantageEffectTag);
      return true;
    }

    private static void LearnStartingTrait(Player player, int skillId)
    {
      if (player.learnableSkills.TryAdd(skillId, new LearnableSkill((LearnableSkill)learnableDictionary[skillId], player)))
        player.learnableSkills[skillId].LevelUp(player);

      player.learnableSkills[skillId].source.Add(Category.StartingTraits);
    }

    private static void ClearPreviousStartingTrait(Player player)
    {
      foreach (var learnable in player.learnableSkills.Values)
      {
        if (learnable.category == Category.OriginFeat && learnable.source.Contains(Category.StartingTraits))
        {
          if (learnable.source.Count < 2)
          {
            player.oid.LoginCreature.RemoveFeat((Feat)learnable.id);
            DelayLearnableRemoval(player, learnable.id);
          }

          learnable.source.Remove(Category.StartingTraits);
        }
      }
    }

    private static async void DelayLearnableRemoval(Player player, int learnableId)
    {
      await NwTask.NextFrame();
      player.learnableSkills.Remove(learnableId);
    }

    private static bool HandleAcolyteBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.InsightProficiency);
      LearnStartingTrait(player, CustomSkill.ReligionProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);

      return true;
    }
    private static bool HandleAnthropologistBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.InsightProficiency);
      LearnStartingTrait(player, CustomSkill.HistoryProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);

      return true;
    }
    private static bool HandleArcheologistBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.HistoryProficiency);
      LearnStartingTrait(player, CustomSkill.SurvivalProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleScholarBackground(Player player, int customSkillId)
    {
      int selectedBonus = player.oid.LoginCreature.GetObjectVariable<LocalVariableInt>("_SELECTED_SCHOLAR_BONUS");
      LearnStartingTrait(player, CustomSkill.HistoryProficiency);
      LearnStartingTrait(player, selectedBonus);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleSageBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.HistoryProficiency);
      LearnStartingTrait(player, CustomSkill.ArcanaProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleHermitBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.MedicineProficiency);
      LearnStartingTrait(player, CustomSkill.ReligionProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleWandererBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.SurvivalProficiency);
      LearnStartingTrait(player, CustomSkill.PersuasionProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleAthleteBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.AcrobaticsProficiency);
      LearnStartingTrait(player, CustomSkill.AthleticsProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleOutlanderBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.AthleticsProficiency);
      LearnStartingTrait(player, CustomSkill.SurvivalProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleSoldierBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.AthleticsProficiency);
      LearnStartingTrait(player, CustomSkill.IntimidationProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleMercenaryBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.AthleticsProficiency);
      LearnStartingTrait(player, CustomSkill.PersuasionProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleFolkHeroBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.AnimalHandlingProficiency);
      LearnStartingTrait(player, CustomSkill.SurvivalProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleSailorBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.AthleticsProficiency);
      LearnStartingTrait(player, CustomSkill.PerceptionProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleShipwrightBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.HistoryProficiency);
      LearnStartingTrait(player, CustomSkill.PerceptionProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleFisherBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.MedicineProficiency);
      LearnStartingTrait(player, CustomSkill.SurvivalProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleMarineBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.PerceptionProficiency);
      LearnStartingTrait(player, CustomSkill.SurvivalProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleCriminalBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.DeceptionProficiency);
      LearnStartingTrait(player, CustomSkill.StealthProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleCharlatanBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.DeceptionProficiency);
      LearnStartingTrait(player, CustomSkill.SleightOfHandProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleSmugglerBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.DeceptionProficiency);
      LearnStartingTrait(player, CustomSkill.AthleticsProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleUrchinBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.SleightOfHandProficiency);
      LearnStartingTrait(player, CustomSkill.StealthProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleGamblerBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.DeceptionProficiency);
      LearnStartingTrait(player, CustomSkill.InsightProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleEntertainerBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.PerformanceProficiency);
      LearnStartingTrait(player, CustomSkill.AcrobaticsProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleCityWatchBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.AthleticsProficiency);
      LearnStartingTrait(player, CustomSkill.InsightProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleInvestigatorBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.InvestigationProficiency);
      LearnStartingTrait(player, CustomSkill.InsightProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleKnightBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.PersuasionProficiency);
      LearnStartingTrait(player, CustomSkill.ReligionProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleNobleBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.PersuasionProficiency);
      LearnStartingTrait(player, CustomSkill.HistoryProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleCourtierBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.PersuasionProficiency);
      LearnStartingTrait(player, CustomSkill.InsightProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleMerchantBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.PersuasionProficiency);
      LearnStartingTrait(player, CustomSkill.InvestigationProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleTakenBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.NatureProficiency);
      LearnStartingTrait(player, CustomSkill.SurvivalProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleScionBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.PerceptionProficiency);
      LearnStartingTrait(player, CustomSkill.PerformanceProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleMagistrateBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.InsightProficiency);
      LearnStartingTrait(player, CustomSkill.IntimidationProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleRefugeeBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.InsightProficiency);
      LearnStartingTrait(player, CustomSkill.SurvivalProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandlePrisonerBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.DeceptionProficiency);
      LearnStartingTrait(player, CustomSkill.PerceptionProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleHauntedBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.ArcanaProficiency);
      LearnStartingTrait(player, CustomSkill.InvestigationProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleFacelessBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.DeceptionProficiency);
      LearnStartingTrait(player, CustomSkill.IntimidationProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    private static bool HandleSecretBackground(Player player, int customSkillId)
    {
      LearnStartingTrait(player, CustomSkill.DeceptionProficiency);
      LearnStartingTrait(player, CustomSkill.PerformanceProficiency);
      ClearPreviousStartingTrait(player);

      if (!player.windows.TryGetValue("featSelection", out var value)) player.windows.Add("featSelection", new FeatSelectionWindow(player, true));
      else ((FeatSelectionWindow)value).CreateWindow(true);
      return true;
    }
    public static bool LearnActivableFeat(Player player, int customSkillId)
    {
      if (!player.oid.LoginCreature.KnowsFeat((Feat)customSkillId))
        player.oid.LoginCreature.AddFeat((Feat)customSkillId);

      return true;
    }
    /*private static bool HandleAddedSpellSlot(PlayerSystem.Player player, int customSkillId)
    {
      NwItem skin = player.oid.LoginCreature.GetItemInSlot(InventorySlot.CreatureSkin);
      IPSpellLevel spellLevel = IPSpellLevel.SL0;

      switch (customSkillId)
      {
        case CustomSkill.ImprovedSpellSlot1:
          spellLevel = IPSpellLevel.SL1;
          break;
        case CustomSkill.ImprovedSpellSlot2:
          spellLevel = IPSpellLevel.SL2;
          break;
        case CustomSkill.ImprovedSpellSlot3:
          spellLevel = IPSpellLevel.SL3;
          break;
        case CustomSkill.ImprovedSpellSlot4:
          spellLevel = IPSpellLevel.SL4;
          break;
        case CustomSkill.ImprovedSpellSlot5:
          spellLevel = IPSpellLevel.SL5;
          break;
        case CustomSkill.ImprovedSpellSlot6:
          spellLevel = IPSpellLevel.SL6;
          break;
        case CustomSkill.ImprovedSpellSlot7:
          spellLevel = IPSpellLevel.SL7;
          break;
        case CustomSkill.ImprovedSpellSlot8:
          spellLevel = IPSpellLevel.SL8;
          break;
        case CustomSkill.ImprovedSpellSlot9:
          spellLevel = IPSpellLevel.SL9;
          break;
      }

      if (skin == null)
      {
        Utils.LogMessageToDMs($"Skill System - On Improve Spell Slot : {player.oid.LoginCreature.Name} creature skin is null !");

        Task waitSkinCreated = NwTask.Run(async () =>
        {
          NwItem pcSkin = await NwItem.Create("peaudejoueur", player.oid.LoginCreature);
          pcSkin.Name = $"Propriétés de {player.oid.LoginCreature.Name}";
          //pcSkin.GetObjectVariable<LocalVariableString>("ITEM_KEY").Value = Config.itemKey;
          player.oid.LoginCreature.RunEquip(pcSkin, InventorySlot.CreatureSkin);
        });
      }

      skin.AddItemProperty(ItemProperty.BonusLevelSpell((IPClass)43, spellLevel), EffectDuration.Permanent);

      return true;
    }*/

    public static readonly int[] forgeBasicSkillBooks = new int[] { CustomSkill.InfluxDetection,  CustomSkill.InfluxExtraction, CustomSkill.Blacksmith, CustomSkill.Recycler, CustomSkill.InfluxExtractionYield, CustomSkill.ReprocessingInflux, CustomSkill.ReprocessingInfluxEfficiency, CustomSkill.ReprocessingGrade1Expertise, CustomSkill.ReprocessingGrade2Expertise, CustomSkill.MateriaGradeConcentration, CustomSkill.Renforcement, CustomSkill.BlueprintCopy, CustomSkill.BlueprintEfficiency, CustomSkill.BlueprintEconomy, CustomSkill.BlueprintMetallurgy, CustomSkill.BlueprintResearch, CustomSkill.CraftDagger, CustomSkill.CraftLightMace, CustomSkill.CraftMorningStar, CustomSkill.CraftShortSpear, CustomSkill.CraftShortsword, CustomSkill.CraftSickle, CustomSkill.CraftScaleMail };
    public static readonly int[] woodBasicSkillBooks = new int[] { CustomSkill.InfluxDetection, CustomSkill.InfluxExtraction, CustomSkill.Renforcement, CustomSkill.Recycler, CustomSkill.BlueprintMetallurgy, CustomSkill.ReprocessingInflux, CustomSkill.ReprocessingInfluxEfficiency, CustomSkill.BlueprintResearch, CustomSkill.Woodworker, CustomSkill.CraftSmallShield, CustomSkill.CraftClub, CustomSkill.CraftDarts, CustomSkill.CraftBullets, CustomSkill.CraftHeavyCrossbow, CustomSkill.CraftLightCrossbow, CustomSkill.CraftQuarterstaff, CustomSkill.CraftSling, CustomSkill.CraftArrow, CustomSkill.CraftBolt, };
    public static readonly int[] leatherBasicSkillBooks = new int[] { CustomSkill.InfluxDetection, CustomSkill.InfluxExtraction, CustomSkill.Renforcement, CustomSkill.Recycler, CustomSkill.Tanner, CustomSkill.ReprocessingInflux, CustomSkill.ReprocessingInfluxEfficiency, CustomSkill.CraftLeatherArmor, CustomSkill.CraftStuddedLeather, CustomSkill.CraftPaddedArmor, CustomSkill.CraftClothing, CustomSkill.CraftWhip, CustomSkill.CraftBelt, CustomSkill.CraftBoots, CustomSkill.CraftBracer, CustomSkill.CraftCloak, CustomSkill.CraftGloves, };
    //public static Feat[] craftSkillBooks = new Feat[] { CustomFeats.Metallurgy, CustomFeats.AdvancedCraft, CustomFeats.Miner, CustomFeats.Geology, CustomFeats.Prospection, CustomFeats.VeldsparReprocessing, CustomFeats.ScorditeReprocessing, CustomFeats.PyroxeresReprocessing, CustomFeats.StripMiner, CustomFeats.Reprocessing, CustomFeats.ReprocessingEfficiency, CustomFeats.Connections, CustomFeats.Forge };
    /*public static readonly Feat[] alchemyBasicSkillBooks = new Feat[] { CustomFeats.Alchemist, CustomFeats.AlchemistCareful, CustomFeats.AlchemistEfficiency };
    public static readonly Feat[] languageSkillBooks = new Feat[] { CustomFeats.Abyssal, CustomFeats.Céleste, CustomFeats.Gnome, CustomFeats.Draconique, CustomFeats.Druidique, CustomFeats.Nain, CustomFeats.Elfique, CustomFeats.Géant, CustomFeats.Gobelin, CustomFeats.Halfelin, CustomFeats.Infernal, CustomFeats.Orc, CustomFeats.Primordiale, CustomFeats.Sylvain, CustomFeats.Voleur, CustomFeats.Gnome };

    public static readonly Feat[] lowSkillBooks = new Feat[] { CustomFeats.AlchemistExpert, CustomFeats.Renforcement, CustomFeats.ArtisanApplique, CustomFeats.Enchanteur, CustomFeats.Comptabilite, CustomFeats.BrokerRelations, CustomFeats.Negociateur, CustomFeats.Magnat, CustomFeats.Marchand, CustomFeats.Recycler, Feat.Ambidexterity, CustomFeats.Skinning, CustomFeats.Hunting, CustomFeats.ImprovedSpellSlot2, CustomFeats.WoodReprocessing, CustomFeats.Ebeniste, CustomFeats.WoodCutter, CustomFeats.WoodProspection, CustomFeats.CraftOreExtractor, CustomFeats.CraftForgeHammer, CustomFeats.Forge, CustomFeats.Reprocessing, CustomFeats.BlueprintCopy, CustomFeats.Research, CustomFeats.Miner, CustomFeats.Metallurgy, Feat.DeneirsEye, Feat.DirtyFighting, Feat.ResistDisease, Feat.Stealthy, Feat.SkillFocusAnimalEmpathy, Feat.SkillFocusBluff, Feat.SkillFocusConcentration, Feat.SkillFocusDisableTrap, Feat.SkillFocusDiscipline, Feat.SkillFocusHeal, Feat.SkillFocusHide, Feat.SkillFocusIntimidate, Feat.SkillFocusListen, Feat.SkillFocusLore, Feat.SkillFocusMoveSilently, Feat.SkillFocusOpenLock, Feat.SkillFocusParry, Feat.SkillFocusPerform, Feat.SkillFocusPickPocket, Feat.SkillFocusSearch, Feat.SkillFocusSetTrap, Feat.SkillFocusSpellcraft, Feat.SkillFocusSpot, Feat.SkillFocusTaunt, Feat.SkillFocusTumble, Feat.SkillFocusUseMagicDevice, Feat.Mobility, Feat.PointBlankShot, Feat.IronWill, Feat.Alertness, Feat.CombatCasting, Feat.Dodge, Feat.ExtraTurning, Feat.GreatFortitude };
    public static readonly Feat[] mediumSkillBooks = new Feat[] { CustomFeats.AlchemistAccurate, CustomFeats.AlchemistAware, CustomFeats.CombattantPrecautionneux, CustomFeats.EnchanteurExpert, CustomFeats.BrokerAffinity, CustomFeats.BadPeltReprocessing, CustomFeats.CommonPeltReprocessing, CustomFeats.NormalPeltReprocessing, CustomFeats.UncommunPeltReprocessing, CustomFeats.RarePeltReprocessing, CustomFeats.MagicPeltReprocessing, CustomFeats.EpicPeltReprocessing, CustomFeats.LegendaryPeltReprocessing, CustomFeats.ImprovedSpellSlot3, CustomFeats.ImprovedSpellSlot4, CustomFeats.LaurelinReprocessing, CustomFeats.MallornReprocessing, CustomFeats.TelperionReprocessing, CustomFeats.OiolaireReprocessing, CustomFeats.NimlothReprocessing, CustomFeats.QlipothReprocessing, CustomFeats.FerocheneReprocessing, CustomFeats.ValinorReprocessing, CustomFeats.WoodReprocessingEfficiency, CustomFeats.AnimalExpertise, CustomFeats.CraftTorch, CustomFeats.CraftStuddedLeather, CustomFeats.CraftSling, CustomFeats.CraftSmallShield, CustomFeats.CraftSickle, CustomFeats.CraftShortSpear, CustomFeats.CraftRing, CustomFeats.CraftPaddedArmor, CustomFeats.CraftPotion, CustomFeats.CraftQuarterstaff, CustomFeats.CraftMorningStar, CustomFeats.CraftMagicWand, CustomFeats.CraftLightMace, CustomFeats.CraftLightHammer, CustomFeats.CraftLightFlail, CustomFeats.CraftLightCrossbow, CustomFeats.CraftLeatherArmor, CustomFeats.CraftBullets, CustomFeats.CraftCloak, CustomFeats.CraftClothing, CustomFeats.CraftClub, CustomFeats.CraftDagger, CustomFeats.CraftDarts, CustomFeats.CraftGloves, CustomFeats.CraftHeavyCrossbow, CustomFeats.CraftHelmet, CustomFeats.CraftAmulet, CustomFeats.CraftArrow, CustomFeats.CraftBelt, CustomFeats.CraftBolt, CustomFeats.CraftBoots, CustomFeats.CraftBracer, CustomFeats.ReprocessingEfficiency, CustomFeats.StripMiner, CustomFeats.VeldsparReprocessing, CustomFeats.ScorditeReprocessing, CustomFeats.PyroxeresReprocessing, CustomFeats.PlagioclaseReprocessing, CustomFeats.Geology, CustomFeats.Prospection, Feat.TymorasSmile, Feat.LliirasHeart, Feat.RapidReload, Feat.Expertise, Feat.ImprovedInitiative, Feat.DefensiveRoll, Feat.SneakAttack, Feat.FlurryOfBlows, Feat.WeaponSpecializationHeavyCrossbow, Feat.WeaponSpecializationDagger, Feat.WeaponSpecializationDart, Feat.WeaponSpecializationClub, Feat.StillSpell, Feat.RapidShot, Feat.SilenceSpell, Feat.PowerAttack, Feat.Knockdown, Feat.LightningReflexes, Feat.ImprovedUnarmedStrike, Feat.Cleave, Feat.CalledShot, Feat.DeflectArrows, Feat.WeaponSpecializationLightCrossbow, Feat.WeaponSpecializationLightFlail, Feat.WeaponSpecializationLightMace, Feat.Disarm, Feat.EmpowerSpell, Feat.WeaponSpecializationMorningStar, Feat.ExtendSpell, Feat.SpellFocusAbjuration, Feat.SpellFocusConjuration, Feat.SpellFocusDivination, Feat.SpellFocusEnchantment, Feat.WeaponSpecializationSickle, Feat.WeaponSpecializationSling, Feat.WeaponSpecializationSpear, Feat.WeaponSpecializationStaff, Feat.WeaponSpecializationThrowingAxe, Feat.WeaponSpecializationTrident, Feat.WeaponSpecializationUnarmedStrike, Feat.SpellFocusEvocation, Feat.SpellFocusIllusion, Feat.SpellFocusNecromancy, Feat.SpellFocusTransmutation, Feat.SpellPenetration };
    public static readonly Feat[] highSkillBooks = new Feat[] { CustomFeats.ImprovedDodge, CustomFeats.EnchanteurChanceux, CustomFeats.SurchargeControlee, CustomFeats.SurchargeArcanique, CustomFeats.ArtisanExceptionnel, CustomFeats.AdvancedCraft, CustomFeats.CraftWarHammer, CustomFeats.CraftTrident, CustomFeats.CraftThrowingAxe, CustomFeats.CraftStaff, CustomFeats.CraftSplintMail, CustomFeats.CraftSpellScroll, CustomFeats.CraftShortsword, CustomFeats.CraftShortBow, CustomFeats.CraftScimitar, CustomFeats.CraftScaleMail, CustomFeats.CraftRapier, CustomFeats.CraftMagicRod, CustomFeats.CraftLongsword, CustomFeats.CraftLongBow, CustomFeats.CraftLargeShield, CustomFeats.CraftBattleAxe, CustomFeats.OmberReprocessing, CustomFeats.KerniteReprocessing, CustomFeats.GneissReprocessing, CustomFeats.CraftHalberd, CustomFeats.JaspetReprocessing, CustomFeats.CraftHeavyFlail, CustomFeats.CraftHandAxe, CustomFeats.HemorphiteReprocessing, CustomFeats.CraftGreatAxe, CustomFeats.CraftGreatSword, Feat.ArcaneDefenseAbjuration, Feat.ArcaneDefenseConjuration, Feat.ArcaneDefenseDivination, Feat.ArcaneDefenseEnchantment, Feat.ArcaneDefenseEvocation, Feat.ArcaneDefenseIllusion, Feat.ArcaneDefenseNecromancy, Feat.ArcaneDefenseTransmutation, Feat.BlindFight, Feat.SpringAttack, Feat.GreatCleave, Feat.ImprovedExpertise, Feat.SkillMastery, Feat.Opportunist, Feat.Evasion, Feat.WeaponSpecializationDireMace, Feat.WeaponSpecializationDoubleAxe, Feat.WeaponSpecializationDwaxe, Feat.WeaponSpecializationGreatAxe, Feat.WeaponSpecializationGreatSword, Feat.WeaponSpecializationHalberd, Feat.WeaponSpecializationHandAxe, Feat.WeaponSpecializationHeavyFlail, Feat.WeaponSpecializationKama, Feat.WeaponSpecializationKatana, Feat.WeaponSpecializationKukri, Feat.WeaponSpecializationBastardSword, Feat.WeaponSpecializationLightHammer, Feat.WeaponSpecializationLongbow, Feat.WeaponSpecializationLongSword, Feat.WeaponSpecializationRapier, Feat.WeaponSpecializationScimitar, Feat.WeaponSpecializationScythe, Feat.WeaponSpecializationShortbow, Feat.WeaponSpecializationShortSword, Feat.WeaponSpecializationShuriken, Feat.WeaponSpecializationBattleAxe, Feat.QuickenSpell, Feat.MaximizeSpell, Feat.ImprovedTwoWeaponFighting, Feat.ImprovedPowerAttack, Feat.WeaponSpecializationTwoBladedSword, Feat.WeaponSpecializationWarHammer, Feat.WeaponSpecializationWhip, Feat.ImprovedDisarm, Feat.ImprovedKnockdown, Feat.ImprovedParry, Feat.ImprovedCriticalBastardSword, Feat.ImprovedCriticalBattleAxe, Feat.ImprovedCriticalClub, Feat.ImprovedCriticalDagger, Feat.ImprovedCriticalDart, Feat.ImprovedCriticalDireMace, Feat.ImprovedCriticalDoubleAxe, Feat.ImprovedCriticalDwaxe, Feat.ImprovedCriticalGreatAxe, Feat.ImprovedCriticalGreatSword, Feat.ImprovedCriticalHalberd, Feat.ImprovedCriticalHandAxe, Feat.ImprovedCriticalHeavyCrossbow, Feat.ImprovedCriticalHeavyFlail, Feat.ImprovedCriticalKama, Feat.ImprovedCriticalKatana, Feat.ImprovedCriticalKukri, Feat.ImprovedCriticalLightCrossbow, Feat.ImprovedCriticalLightFlail, Feat.ImprovedCriticalLightHammer, Feat.ImprovedCriticalLightMace, Feat.ImprovedCriticalLongbow, Feat.ImprovedCriticalLongSword, Feat.ImprovedCriticalMorningStar, Feat.ImprovedCriticalRapier, Feat.ImprovedCriticalScimitar, Feat.ImprovedCriticalScythe, Feat.ImprovedCriticalShortbow, Feat.ImprovedCriticalShortSword, Feat.ImprovedCriticalShuriken, Feat.ImprovedCriticalSickle, Feat.ImprovedCriticalSling, Feat.ImprovedCriticalSpear, Feat.ImprovedCriticalStaff, Feat.ImprovedCriticalThrowingAxe, Feat.ImprovedCriticalTrident, Feat.ImprovedCriticalTwoBladedSword, Feat.ImprovedCriticalUnarmedStrike, Feat.ImprovedCriticalWarHammer, Feat.ImprovedCriticalWhip };
    public static readonly Feat[] epicSkillBooks = new Feat[] { CustomFeats.CraftWhip, CustomFeats.CraftTwoBladedSword, CustomFeats.CraftTowerShield, CustomFeats.CraftShuriken, CustomFeats.CraftScythe, CustomFeats.CraftKukri, CustomFeats.CraftKatana, CustomFeats.CraftBreastPlate, CustomFeats.CraftDireMace, CustomFeats.CraftDoubleAxe, CustomFeats.CraftDwarvenWarAxe, CustomFeats.CraftFullPlate, CustomFeats.CraftHalfPlate, CustomFeats.CraftBastardSword, CustomFeats.CraftKama, CustomFeats.DarkOchreReprocessing, CustomFeats.CrokiteReprocessing, CustomFeats.BistotReprocessing, Feat.ResistEnergyAcid, Feat.ResistEnergyCold, Feat.ResistEnergyElectrical, Feat.ResistEnergyFire, Feat.ResistEnergySonic, Feat.ZenArchery, Feat.CripplingStrike, Feat.SlipperyMind, Feat.GreaterSpellFocusAbjuration, Feat.GreaterSpellFocusConjuration, Feat.GreaterSpellFocusDivination, Feat.GreaterSpellFocusDiviniation, Feat.GreaterSpellFocusEnchantment, Feat.GreaterSpellFocusEvocation, Feat.GreaterSpellFocusIllusion, Feat.GreaterSpellFocusNecromancy, Feat.GreaterSpellFocusTransmutation, Feat.GreaterSpellPenetration };
    */
    public static readonly int[] shopBasicMagicSkillBooks = new int[] { CustomSkill.CalligrapheArmurier, CustomSkill.CalligrapheBlindeur, CustomSkill.CalligrapheCiseleur, CustomSkill.CalligrapheFourbisseur,/* CustomSkill.Comptabilite, CustomSkill.BrokerRelations, CustomSkill.Negociateur, CustomSkill.ContractScience, CustomSkill.Marchand, CustomSkill.Magnat*/ };
    public static int GetCustomFeatLevelFromSkillPoints(Feat feat, int currentSkillPoints)
    {
      int multiplier = learnableDictionary[(int)feat].multiplier;
      var result = Math.Log(currentSkillPoints / (250 * multiplier)) / Math.Log(5);

      if (result > 4)
      {
        result = 4;
        result += (currentSkillPoints - (int)(250 * multiplier * Math.Pow(5, 4))) / (int)(250 * multiplier * Math.Pow(5, 4));
      }

      if (result < 0)
        return 0;
      else
        return 1 + (int)result;
    }
  }
}
