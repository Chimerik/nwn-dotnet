using System;
using System.Collections.Generic;
using NLog;
using Anvil.API;
using System.ComponentModel;
using System.Threading.Tasks;
using System.Linq;

namespace NWN.Systems
{
  public static partial class SkillSystem
  {
    public enum Category // Maîtrises + Fighter + chaque classe
    {
      [Description("Corps_&_Esprit")]
      MindBody,
      [Description("Combat")]
      Fight,
      [Description("Artisanat")]
      Craft,
      [Description("Magie")]
      Magic,
      [Description("Inscription")]
      Inscription,
      [Description("Historique")]
      StartingTraits,
      [Description("Langage")]
      Language,
      [Description("Classe")]
      Class,
      [Description("Race")]
      Race,
      [Description("Compétence")]
      Skill,
      [Description("Expertise")]
      Expertise,
      [Description("Style_de_combat")]
      FightingStyle,
      [Description("Dons")]
      Feat,
      [Description("Maîtrise_d'arme")]
      WeaponProficiency,
      [Description("Voie_de_Guerrier")]
      FighterSubClass,
      [Description("Tir_Arcanique")]
      TirArcanique,
      [Description("Manoeuvre")]
      Manoeuvre,
      [Description("Voie_de_Barbare")]
      BarbarianSubClass,
      [Description("Esprit_Totem")]
      EspritTotem,
      [Description("Aspect_Animal")]
      AspectTotem,
      [Description("Lien_Totem")]
      LienTotem,
      [Description("Voie_du_Roublard")]
      RogueSubClass,
      [Description("Voie_du_Moine")]
      MonkSubClass,
      [Description("Ecole_de_Magicien")]
      WizardSubClass,
      [Description("Ki")]
      Ki,
    }

    public static readonly Dictionary<int, Learnable> learnableDictionary = new();

    public static void InitializeLearnables()
    {
      // PROFICIENCIES

      learnableDictionary.Add(CustomSkill.AcrobaticsProficiency, new LearnableSkill(CustomSkill.AcrobaticsProficiency, "Acrobatie - Maîtrise", "Un jet de Dextérité (Acrobatie) couvre toute tentative de garder l'équilibre dans les situations délicates, comme essayer de courir sur une plaque de glace, rester stable sur une corde raide ou rester debout sur le pont d'un navire lors d'une forte houle.\n\nLe DM peut également demander un jet de Dextérité (Acrobatie) si vous tenter d'effectuer des cascades acrobatiques, y compris des plongeons tonneaux, sauts périlleux ou des flips.\n\nNB : Cette compétence n'accorde aucun point de CA supplémentaire, contrairement au jeu de base.", Category.Skill, "ife_SeverA", 1, 750, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.AcrobaticsExpertise, new LearnableSkill(CustomSkill.AcrobaticsExpertise, "Acrobatie - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "ife_SeverA", 1, 1500, Ability.Dexterity, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.AnimalHandlingProficiency, new LearnableSkill(CustomSkill.AnimalHandlingProficiency, "Dressage - Maîtrise", "Un jet de Sagesse (Dressage) couvre toute tentative de calmer un animal domestique, empêcher une monture d'être effrayée ou deviner les intentions d'un animal.", Category.Skill, "isk_discipline", 1, 750, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.AnimalHandlingExpertise, new LearnableSkill(CustomSkill.AnimalHandlingExpertise, "Dressage - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_discipline", 1, 1500, Ability.Wisdom, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.ArcanaProficiency, new LearnableSkill(CustomSkill.ArcanaProficiency, "Arcane - Maîtrise", "Un jet d'Intelligence (Arcane) couvre toute tentative de se rappeler des connaissances sur les sorts, les objets magiques, les symboles ésotériques, les traditions magiques, les plans d'existence et les habitants de ces plans.", Category.Skill, "isk_spellcraft", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ArcanaExpertise, new LearnableSkill(CustomSkill.ArcanaExpertise, "Arcane - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_spellcraft", 1, 1500, Ability.Intelligence, Ability.Wisdom));
      
      learnableDictionary.Add(CustomSkill.AthleticsProficiency, new LearnableSkill(CustomSkill.AthleticsProficiency, "Athlétisme - Maîtrise", "Un jet de Force (Athlétisme) couvre les difficultés physiques que vous rencontrez en grimpant, en sautant ou en nageant. Ce qui inclue les activités suivantes :\n- Vous essayez d'escalader une falaise abrupte ou glissante, d'éviter les dangers en escaladant un mur ou de vous accrocher à une surface pendant que quelque chose essaie de vous faire tomber\n- Vous essayez de sauter sur une distance inhabituellement longue ou de réaliser une cascade au milieu d'un saut\n-- Vous avez du mal à nager ou à rester à flot dans des courants dangereux, des vagues agitées par des tempêtes ou des zones d'algues épaisses. Ou une autre créature essaie de vous pousser ou de vous tirer sous l'eau ou d'interférer d'une autre manière avec votre nage", Category.Skill, "ife_SeverA", 1, 750, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.AthleticsExpertise, new LearnableSkill(CustomSkill.AthleticsExpertise, "Athlétisme - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "ife_SeverA", 1, 1500, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.DeceptionProficiency, new LearnableSkill(CustomSkill.DeceptionProficiency, "Tromperie - Maîtrise", "Un jet de Charisme (Tromperie) couvre toute tentative de cacher la vérité de manière convaincante, que ce soit verbalement ou par vos actions. Cette compétence permet de dissimuler les traces du mensonge dans votre voix et votre langage corporel.\nN'oubliez pas que dans la plupart des cas, en jeu, la crédibilité de vos paroles par rapport à la confiance accordée par vos interlocuteurs prime.\nDe base, vous ne parviendrez pas à faire croire à la garde que cette épée à deux mains pleine de sang n'est rien d'autre que l'appui d'un vieillard pour l'aider à marcher, même sur un très bon jet.", Category.Skill, "isk_X2bluff", 1, 750, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.DeceptionExpertise, new LearnableSkill(CustomSkill.DeceptionExpertise, "Tromperie - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_X2bluff", 1, 1500, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.HistoryProficiency, new LearnableSkill(CustomSkill.HistoryProficiency, "Histoire - Maîtrise", "Un jet d'Intelligence (Histoire) couvre toute tentative de se souvenir de traditions, d'événements historiques, de personnages légendaires, d'anciens royaumes, de conflits passés, de guerres récentes et de civilisations perdues.", Category.Skill, "ife_X1App", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.HistoryExpertise, new LearnableSkill(CustomSkill.HistoryExpertise, "Histoire - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "ife_X1App", 1, 1500, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.InsightProficiency, new LearnableSkill(CustomSkill.InsightProficiency, "Intuition - Maîtrise", "Un jet de Sagesse (Intuition) couvre toute tentative de déterminer les véritables intentions d'une créature, par exemple lorsque vous souhaitez dévoiler un mensonge ou prédire le prochain mouvement de quelqu'un.\nIl s'agit principalement de glaner des indices dans le langage corporel, les changements de tons de la voix ou de manières.", Category.Skill, "isk_listen", 1, 750, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.InsightExpertise, new LearnableSkill(CustomSkill.InsightExpertise, "Intuition - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_listen", 1, 1500, Ability.Wisdom, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.IntimidationProficiency, new LearnableSkill(CustomSkill.IntimidationProficiency, "Intimidation - Maîtrise", "Un jet de Charisme (Intimidation) couvre toute tentative d'influencer quelqu'un par des menaces manifestes, des actions hostiles et de la violence physique.\nPar exemple, essayer de soutirer des informations d'un prisonnier, convaincre des voyous de reculer devant une confrontation ou utiliser un tesson de bouteille brisée pour convaincre un vizir ricanant de reconsidérer une décision.", Category.Skill, "isk_X2Inti", 1, 2, Ability.Charisma, Ability.Strength));
      learnableDictionary.Add(CustomSkill.IntimidationExpertise, new LearnableSkill(CustomSkill.IntimidationExpertise, "Intimidation - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_X2Inti", 1, 3, Ability.Charisma, Ability.Strength));

      learnableDictionary.Add(CustomSkill.InvestigationProficiency, new LearnableSkill(CustomSkill.InvestigationProficiency, "Investigation - Maîtrise", "Un jet d'Intelligence (Investigation) couvre toute recherche d'indice et de déductions. Vous pouvez déduire l'emplacement d'un objet caché, discerner à partir de l'apparence d'une blessure quel type d'arme l'a infligée, ou déterminer le point le plus faible dans un tunnel qui pourrait provoquer son effondrement.\n L'examen d'anciens parchemins à la recherche d'un fragment de connaissance caché peut également nécessiter un jet d'Intelligence (Investigation).\n\nCette compétence remplace fouille pour la détection des pièges.", Category.Skill, "isk_search", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.InvestigationExpertise, new LearnableSkill(CustomSkill.InvestigationExpertise, "Investigation - Expertise", "Un jet d'Intelligence (Investigation) couvre toute recherche d'indice et de déductions. Vous pouvez déduire l'emplacement d'un objet caché, discerner à partir de l'apparence d'une blessure quel type d'arme l'a infligée, ou déterminer le point le plus faible dans un tunnel qui pourrait provoquer son effondrement.\n L'examen d'anciens parchemins à la recherche d'un fragment de connaissance caché peut également nécessiter un jet d'Intelligence (Investigation).\n\nCette compétence remplace fouille pour la détection des pièges.", Category.MindBody, "isk_search", 1, 1500, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.MedicineProficiency, new LearnableSkill(CustomSkill.MedicineProficiency, "Médecine - Maîtrise", "Un jet d'Intelligence (Médecine) couvre toute tentative de se souvenir de détails sur le fonctionnement du corps humain, sur des remèdes ou des poisons. Cette compétence est également utilisée afin de pratiquer des actes médicaux.", Category.Skill, "isk_heal", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.MedicineExpertise, new LearnableSkill(CustomSkill.MedicineExpertise, "Médecine - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_heal", 1, 1500, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.NatureProficiency, new LearnableSkill(CustomSkill.NatureProficiency, "Nature - Maîtrise", "Un jet d'Intelligence (Nature) couvre toute tentative de se souvenir de connaissances sur le terrain, les plantes, les animaux, la météo et les cycles naturels.", Category.Skill, "ife_X2GrWis1", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.NatureExpertise, new LearnableSkill(CustomSkill.NatureExpertise, "Nature - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "ife_X2GrWis1", 1, 1500, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.PerceptionProficiency, new LearnableSkill(CustomSkill.PerceptionProficiency, "Perception - Maîtrise", "Un jet de Sagesse (Perception) couvre toute tentative de repérer, d'entendre ou de détecter la présence de quelque chose. Il mesure votre conscience générale de votre environnement et l'acuité de vos sens.\nPar exemple, vous pouvez essayer d'entendre une conversation à travers une porte fermée, d'écouter sous une fenêtre ouverte ou d'entendre des monstres se déplacer furtivement dans la forêt.\nVous pouvez aussi essayer de repérer des choses qui sont obscurcies ou faciles à manquer, qu'il s'agisse d'orcs embusqués sur une route, de voyous cachés dans l'ombre d'une ruelle ou de bougies sous une porte secrète fermée.", Category.Skill, "isk_spot", 1, 750, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.PerceptionExpertise, new LearnableSkill(CustomSkill.PerceptionExpertise, "Perception - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_spot", 1, 1500, Ability.Wisdom, Ability.Intelligence));
      
      learnableDictionary.Add(CustomSkill.PerformanceProficiency, new LearnableSkill(CustomSkill.PerformanceProficiency, "Performance - Maîtrise", "Un jet de Charisme (Performance) couvre toute tentative de ravir un public avec de la musique, de la danse, du théâtre, des contes ou toute autre forme de divertissement.\n\nChaque rang augmente la durée et l'efficacité des capacités liées à l'encouragement des alliés.", Category.Skill, "ife_SeverA", 1, 750, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.PerformanceExpertise, new LearnableSkill(CustomSkill.PerformanceExpertise, "Performance - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "ife_SeverA", 1, 1500, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.PersuasionProficiency, new LearnableSkill(CustomSkill.PersuasionProficiency, "Persuasion - Maîtrise", "Un jet de Charisme (Persuasion) couvre toute tentative d'influencer quelqu'un ou un groupe de personnes avec du tact, des grâces sociales ou une bonne nature.\nEn règle générale, la persuasion est utilisée lorsque vous agissez de bonne foi, pour favoriser des amitiés, faire des demandes cordiales ou faire preuve d'une étiquette appropriée.\nPar exemple : convaincre un chambellan de laisser votre groupe voir le roi, négocier la paix entre des tribus en guerre ou inspirer une foule de citadins.", Category.Skill, "isk_persuade", 1, 750, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.PersuasionExpertise, new LearnableSkill(CustomSkill.PersuasionExpertise, "Persuasion - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_persuade", 1, 1500, Ability.Charisma, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.ReligionProficiency, new LearnableSkill(CustomSkill.ReligionProficiency, "Religion - Maîtrise", "Un jet d'Intelligence (Religion) couvre toute tentative de se souvenir des traditions concernant les divinités, les rites, les prières, les hiérarchies religieuses, les symboles sacrés et les pratiques des cultes.", Category.Skill, "isk_lore", 1, 750, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReligionExpertise, new LearnableSkill(CustomSkill.ReligionExpertise, "Religion - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_lore", 1, 1500, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.SleightOfHandProficiency, new LearnableSkill(CustomSkill.SleightOfHandProficiency, "Escamotage - Maîtrise", "Un jet de Dextérité (Escamotage) couvre toute tentative un tour de passe-passe ou de supercherie manuelle, comme déposer quelque chose dans les poches de quelqu'un d'autre ou tenter de dissimuler un objet votre propre personne.\n\nUn jet de Dextérité (Escamotage) permet également de déterminer si vous parvenez à délester quelqu'un de son porte-monnaie ou lui faire les poches.\n\nCette compétence remplace Vol à la Tire.", Category.Skill, "isk_pocket", 1, 750, Ability.Dexterity, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.SleightOfHandExpertise, new LearnableSkill(CustomSkill.SleightOfHandExpertise, "Escamotage - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "isk_pocket", 1, 1500, Ability.Dexterity, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.StealthProficiency, new LearnableSkill(CustomSkill.StealthProficiency, "Furtivité - Maîtrise", "Un jet de Dextérité (Arts des ombres) couvre toute tentative de se dissimulation à l'œil et à l'oreille des ennemis : pour passer furtivement sous le nez des gardes, vous échapper sans vous faire remarquer ou prendre quelqu'un par surprise.\n\nCette compétence remplace à la fois Discrétion et Déplacement silencieux.\nContrairement au jeu de base, cet attribut ne vous permet pas de disparaître aux yeux des autres.\n\nChaque rang augmente la durée et l'efficacité des capacités liées à la dissimulation et à la furtivité.", Category.Skill, "ife_SeverA", 1, 750, Ability.Intelligence, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.StealthExpertise, new LearnableSkill(CustomSkill.StealthExpertise, "Furtivité - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "ife_SeverA", 1, 1500, Ability.Intelligence, Ability.Dexterity));

      learnableDictionary.Add(CustomSkill.SurvivalProficiency, new LearnableSkill(CustomSkill.SurvivalProficiency, "Survie - Maîtrise", "Un jet de Sagesse (Survie) couvre toute tentative de suivre des traces, chasser du gibier sauvage, guider votre groupe à travers des friches gelées, identifier des signes indiquant que des ours-hiboux vivent à proximité, prédire la météo ou d'éviter les sables mouvants et autres dangers naturels.", Category.Skill, "is_Survival", 1, 750, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.SurvivalExpertise, new LearnableSkill(CustomSkill.SurvivalExpertise, "Survie - Expertise", "L'expertise permet de doubler votre bonus de maîtrise sur les jets effectués avec cette compétence", Category.Expertise, "ife_SeverA", 1, 1500, Ability.Wisdom, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.StrengthSavesProficiency, new LearnableSkill(CustomSkill.StrengthSavesProficiency, "JDS Force - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant la force.", Category.MindBody, "ife_SeverA", 1, 5000, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.DexteritySavesProficiency, new LearnableSkill(CustomSkill.DexteritySavesProficiency, "JDS Dextérité - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant la dextérité.", Category.MindBody, "ife_SeverA", 1, 5000, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ConstitutionSavesProficiency, new LearnableSkill(CustomSkill.ConstitutionSavesProficiency, "JDS Constitution - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant la constitution.", Category.MindBody, "ife_SeverA", 1, 5000, Ability.Constitution, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.IntelligenceSavesProficiency, new LearnableSkill(CustomSkill.IntelligenceSavesProficiency, "JDS Intelligence - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant l'intelligence.", Category.MindBody, "ife_SeverA", 1, 5000, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.WisdomSavesProficiency, new LearnableSkill(CustomSkill.WisdomSavesProficiency, "JDS Sagesse - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant la sagesse.", Category.MindBody, "ife_SeverA", 1, 5000, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CharismaSavesProficiency, new LearnableSkill(CustomSkill.CharismaSavesProficiency, "JDS Charisma - Maîtrise", "Permet d'ajouter votre bonus de maîtrise à vos jets de sauvegarde utilisant le charisme.", Category.MindBody, "ife_SeverA", 1, 5000, Ability.Charisma, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.LightArmorProficiency, new LearnableSkill(CustomSkill.LightArmorProficiency, "Armure légère - Maîtrise", "Utiliser un bouclier en combat sans en avoir la maîtrise vous expose à un désavantage sur :\n-Tous les jets de forces et de dextérité\n- Tous les jets de sauvegarde\n- Tous les jets d'attaques utilisant la force ou la dextérité\n- L'impossibilité d'incanter des sorts", Category.WeaponProficiency, "ife_armor_l", 1, 250, Ability.Dexterity, Ability.Constitution, HandleLightArmorProficiency));
      learnableDictionary.Add(CustomSkill.MediumArmorProficiency, new LearnableSkill(CustomSkill.MediumArmorProficiency, "Armure intermédiaire - Maîtrise", "Utiliser un bouclier en combat sans en avoir la maîtrise vous expose à un désavantage sur :\n-Tous les jets de forces et de dextérité\n- Tous les jets de sauvegarde\n- Tous les jets d'attaques utilisant la force ou la dextérité\n- L'impossibilité d'incanter des sorts", Category.WeaponProficiency, "ife_armor_m", 1, 500, Ability.Constitution, Ability.Dexterity, HandleMediumArmorProficiency));
      learnableDictionary.Add(CustomSkill.HeavyArmorProficiency, new LearnableSkill(CustomSkill.HeavyArmorProficiency, "Armure lourde - Maîtrise", "Utiliser une armure lourde en combat sans en avoir la maîtrise vous expose à un désavantage sur :\n-Tous les jets de forces et de dextérité\n- Tous les jets de sauvegarde\n- Tous les jets d'attaques utilisant la force ou la dextérité\n- L'impossibilité d'incanter des sorts", Category.WeaponProficiency, "ife_armor_h", 1, 750, Ability.Constitution, Ability.Strength, HandleHeavyArmorProficiency));
      learnableDictionary.Add(CustomSkill.ShieldProficiency, new LearnableSkill(CustomSkill.ShieldProficiency, "Bouclier - Maîtrise", "Utiliser un bouclier en combat sans en avoir la maîtrise vous expose à un désavantage sur :\n-Tous les jets de forces et de dextérité\n- Tous les jets de sauvegarde\n- Tous les jets d'attaques utilisant la force ou la dextérité\n- L'impossibilité d'incanter des sorts", Category.WeaponProficiency, "ife_sh_prof", 1, 250, Ability.Constitution, Ability.Strength, HandleShieldProficiency));

      learnableDictionary.Add(CustomSkill.SimpleWeaponProficiency, new LearnableSkill(CustomSkill.SimpleWeaponProficiency, "Arme simple - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec les armes simples, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 250, Ability.Constitution, Ability.Dexterity, HandleSimpleWeaponProficiency));
      learnableDictionary.Add(CustomSkill.MartialWeaponProficiency, new LearnableSkill(CustomSkill.MartialWeaponProficiency, "Arme martiale - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec les armes martiales, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 500, Ability.Constitution, Ability.Strength, HandleMartialProficiency));
      learnableDictionary.Add(CustomSkill.ExoticWeaponProficiency, new LearnableSkill(CustomSkill.ExoticWeaponProficiency, "Arme exotique - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec les armes exotiques, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength, HandleExoticProficiency));

      learnableDictionary.Add(CustomSkill.SpearProficiency, new LearnableSkill(CustomSkill.SpearProficiency, "Lance - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.LongSwordProficiency, new LearnableSkill(CustomSkill.LongSwordProficiency, "Epée longue - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise aux attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.ShortSwordProficiency, new LearnableSkill(CustomSkill.ShortSwordProficiency, "Epée courte - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.LongBowProficiency, new LearnableSkill(CustomSkill.LongBowProficiency, "Arc long - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.ShortBowProficiency, new LearnableSkill(CustomSkill.ShortBowProficiency, "Arc court - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.RapierProficiency, new LearnableSkill(CustomSkill.RapierProficiency, "Rapière - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.LightHammerProficiency, new LearnableSkill(CustomSkill.LightHammerProficiency, "Marteau léger - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.HandAxeProficiency, new LearnableSkill(CustomSkill.HandAxeProficiency, "Hachette - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.WarAxeProficiency, new LearnableSkill(CustomSkill.WarAxeProficiency, "Hache de bataille - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.DwarvenAxeProficiency, new LearnableSkill(CustomSkill.DwarvenAxeProficiency, "Hache naine - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.ShurikenProficiency, new LearnableSkill(CustomSkill.ShurikenProficiency, "Shuriken - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.DoubleBladeProficiency, new LearnableSkill(CustomSkill.DoubleBladeProficiency, "Lame Double - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.ClubProficiency, new LearnableSkill(CustomSkill.ClubProficiency, "Goudrin - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.DaggerProficiency, new LearnableSkill(CustomSkill.DaggerProficiency, "Dague - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.LightMaceProficiency, new LearnableSkill(CustomSkill.LightMaceProficiency, "Masse légère - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.QuarterstaffProficiency, new LearnableSkill(CustomSkill.QuarterstaffProficiency, "Bâton - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.SickleProficiency, new LearnableSkill(CustomSkill.SickleProficiency, "Serpe - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.LightCrossbowProficiency, new LearnableSkill(CustomSkill.LightCrossbowProficiency, "Arbalète légère - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.DartProficiency, new LearnableSkill(CustomSkill.DartProficiency, "Dard - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.MagicStaffProficiency, new LearnableSkill(CustomSkill.MagicStaffProficiency, "Bâton de mage - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.LightFlailProficiency, new LearnableSkill(CustomSkill.LightFlailProficiency, "Fléau Léger - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.MorningstarProficiency, new LearnableSkill(CustomSkill.MorningstarProficiency, "Morgenstern - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.SlingProficiency, new LearnableSkill(CustomSkill.SlingProficiency, "Fronde - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.BattleaxeProficiency, new LearnableSkill(CustomSkill.BattleaxeProficiency, "Hache d'armes - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.GreataxeProficiency, new LearnableSkill(CustomSkill.GreataxeProficiency, "Grande hache - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.GreatswordProficiency, new LearnableSkill(CustomSkill.GreatswordProficiency, "Espadon - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.ScimitarProficiency, new LearnableSkill(CustomSkill.ScimitarProficiency, "Cimeterre - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.HalberdProficiency, new LearnableSkill(CustomSkill.HalberdProficiency, "Hallebarde - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.HeavyFlailProficiency, new LearnableSkill(CustomSkill.HeavyFlailProficiency, "Fléau lourd - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.ThrowingAxeProficiency, new LearnableSkill(CustomSkill.ThrowingAxeProficiency, "Hache de jet - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.TridentProficiency, new LearnableSkill(CustomSkill.TridentProficiency, "Trident - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.WarHammerProficiency, new LearnableSkill(CustomSkill.WarHammerProficiency, "Marteau de guerre - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.HeavyCrossbowProficiency, new LearnableSkill(CustomSkill.HeavyCrossbowProficiency, "Arbalète lourde - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.BastardswordProficiency, new LearnableSkill(CustomSkill.BastardswordProficiency, "Claymore - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.ScytheProficiency, new LearnableSkill(CustomSkill.ScytheProficiency, "Faux - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.DireMaceProficiency, new LearnableSkill(CustomSkill.DireMaceProficiency, "Masse double - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.DoubleAxeProficiency, new LearnableSkill(CustomSkill.DoubleAxeProficiency, "Hache double - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.KamaProficiency, new LearnableSkill(CustomSkill.KamaProficiency, "Kama - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.KatanaProficiency, new LearnableSkill(CustomSkill.KatanaProficiency, "Katana - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.KukriProficiency, new LearnableSkill(CustomSkill.KukriProficiency, "Kukri - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.WhipProficiency, new LearnableSkill(CustomSkill.WhipProficiency, "Fouet - Maîtrise", "Vous permet d'ajouter votre bonus de maîtrise à vos attaques avec ce type d'arme, ainsi que d'utiliser leurs attaques spéciales.", Category.WeaponProficiency, "ife_armor_l", 1, 750, Ability.Constitution, Ability.Strength));

      learnableDictionary.Add(CustomSkill.UncannyDodge, new LearnableSkill(CustomSkill.UncannyDodge, "Esquive Instinctive", "Permet au personnage de réagir instinctivement, même face à un adversaire qu'il ne voit pas.\n\nSi le personnage réussi un jet de survie contre la tromperie d'un adversaire qui l'attaque de dos avec une arme de mêlée, alors le critique automatique sera annulé.", Category.Fight, "ife_uncdodge", 5, 3, Ability.Dexterity, Ability.Wisdom));

      // ORIGINS

      learnableDictionary.Add(CustomSkill.Acolyte, new LearnableSkill(CustomSkill.Acolyte, "Acolyte", "", Category.StartingTraits, "Acolyte", 1, 1, Ability.Wisdom, Ability.Charisma, HandleAcolyteBackground, "1JU5_KaJTVhoy4PyGFo5sIBIPUbLWe6tMNENQ2kR2WFY"));
      learnableDictionary.Add(CustomSkill.Anthropologist, new LearnableSkill(CustomSkill.Anthropologist, "Anthropologue", "", Category.StartingTraits, "Anthropologue", 1, 1, Ability.Wisdom, Ability.Intelligence, HandleAnthropologistBackground, "1KLiNxm_dHLbRh-dveP--LAfcIMHCjHhcX98a7xzZGOI"));
      learnableDictionary.Add(CustomSkill.Archeologist, new LearnableSkill(CustomSkill.Archeologist, "Archéologue", "", Category.StartingTraits, "archeologist", 1, 1, Ability.Intelligence, Ability.Wisdom, HandleArcheologistBackground, "1ULJttGDVkgc5vsk9DvzEJqG53Yuh_meh59T7TWkmpVs"));
      learnableDictionary.Add(CustomSkill.CloisteredScholar, new LearnableSkill(CustomSkill.CloisteredScholar, "Erudit", "", Category.StartingTraits, "Erudit", 1, 1, Ability.Wisdom, Ability.Intelligence, HandleScholarBackground, "1JHepuecYSMwwqwlxMitBMWEOvm5l1mgRaQiKI7In2G0"));
      learnableDictionary.Add(CustomSkill.Sage, new LearnableSkill(CustomSkill.Sage, "Sage", "", Category.StartingTraits, "Sage", 1, 1, Ability.Wisdom, Ability.Intelligence, HandleSageBackground, "1AdvUpfuXxrIdv35Go4poPSFFm_4tlVvzJK5cXmR_QMw"));
      learnableDictionary.Add(CustomSkill.Hermit, new LearnableSkill(CustomSkill.Hermit, "Ermite", "", Category.StartingTraits, "Ermite", 1, 1, Ability.Wisdom, Ability.Constitution, HandleHermitBackground, "1jPUik90zrJ7XhNVNILd0MhaWOmLqA9XRpQ8MTnNffBA"));
      learnableDictionary.Add(CustomSkill.Wanderer, new LearnableSkill(CustomSkill.Wanderer, "Voyageur", "", Category.StartingTraits, "Voyageur", 1, 1, Ability.Constitution, Ability.Wisdom, HandleWandererBackground, "1X2s8SwAG8I3AgDuB7Mo-yaWVpk3_AZmaXZtG2pDrdMc")); 
      learnableDictionary.Add(CustomSkill.Athlete, new LearnableSkill(CustomSkill.Athlete, "Athlète", "", Category.StartingTraits, "athlete", 1, 1, Ability.Strength, Ability.Constitution, HandleAthleteBackground, "15h9-KjZ0sjS1yvstLjLEf3mumjJ4Xq5E-pbmgfAv9Xw"));
      learnableDictionary.Add(CustomSkill.Outlander, new LearnableSkill(CustomSkill.Outlander, "Sauvage", "", Category.StartingTraits, "Sauvage", 1, 1, Ability.Strength, Ability.Wisdom, HandleOutlanderBackground, "1qm3URzCigQ_xIz-BPT4kjLdXhtvyfFBI5F9ZEuxvweQ"));
      learnableDictionary.Add(CustomSkill.Soldier, new LearnableSkill(CustomSkill.Soldier, "Soldat", "", Category.StartingTraits, "Soldat", 1, 1, Ability.Strength, Ability.Constitution, HandleSoldierBackground, "1QKnLB4iEuX8pNmqPXDfV8SSSeDcsT0_9e5xMNsCLa0c"));
      learnableDictionary.Add(CustomSkill.Mercenary, new LearnableSkill(CustomSkill.Mercenary, "Mercenaire", "", Category.StartingTraits, "Mercenaire", 1, 1, Ability.Strength, Ability.Dexterity, HandleMercenaryBackground, "1vDKqHBxFtjmhn25r0dhVruaMgzfSWxFV7D2grdPtDso"));
      learnableDictionary.Add(CustomSkill.FolkHero, new LearnableSkill(CustomSkill.FolkHero, "Héros du peuple", "", Category.StartingTraits, "folk_hero", 1, 1, Ability.Strength, Ability.Dexterity, HandleFolkHeroBackground, "1S4BK_DoT2tnV1EjMYvvVTrg-mR0tI-3uRBCyry5twi0"));
      learnableDictionary.Add(CustomSkill.Sailor, new LearnableSkill(CustomSkill.Sailor, "Marin", "", Category.StartingTraits, "Marin", 1, 1, Ability.Dexterity, Ability.Constitution, HandleSailorBackground, "15sc6ymheE3JJpcg8qR_ATyB5xxj-aZAc5Ei2XFcsHpE"));
      learnableDictionary.Add(CustomSkill.Shipwright, new LearnableSkill(CustomSkill.Shipwright, "Charpentier Naval", "", Category.StartingTraits, "carpenter", 1, 1, Ability.Strength, Ability.Dexterity, HandleShipwrightBackground, "1pA026_rZo7PlCrpwbq3zJz2P_UCcyLxITX3EKabuXP4"));
      learnableDictionary.Add(CustomSkill.Fisher, new LearnableSkill(CustomSkill.Fisher, "Pêcheur", "", Category.StartingTraits, "fisher", 1, 1, Ability.Constitution, Ability.Wisdom, HandleFisherBackground, "19uXzfsD2RzNYb3ledV2CMHjEXrJCCCb6uYDlpIYmxmw"));
      learnableDictionary.Add(CustomSkill.Marine, new LearnableSkill(CustomSkill.Marine, "Officier de la marine", "", Category.StartingTraits, "officer", 1, 1, Ability.Strength, Ability.Constitution, HandleMarineBackground, "1g4Hoj6WS1uAAcvpNyrTGju0Mh81H9aIecK9B---sAgk"));
      learnableDictionary.Add(CustomSkill.Criminal, new LearnableSkill(CustomSkill.Criminal, "Criminel", "", Category.StartingTraits, "Criminel", 1, 1, Ability.Dexterity, Ability.Strength, HandleCriminalBackground, "1l0m9pkIcfVy37ZjPl9wEB7s-PD2OwRt9Tco_KUhT-xI"));
      learnableDictionary.Add(CustomSkill.Charlatan, new LearnableSkill(CustomSkill.Charlatan, "Charlatan", "", Category.StartingTraits, "Charlatan", 1, 1, Ability.Charisma, Ability.Intelligence, HandleCharlatanBackground, "1ps07V3Lbp18RMIwrkYYGGyxC3tk5L8Y97zpJHw0eqO8"));
      learnableDictionary.Add(CustomSkill.Smuggler, new LearnableSkill(CustomSkill.Smuggler, "Contrebandier", "", Category.StartingTraits, "contrebandier", 1, 1, Ability.Charisma, Ability.Dexterity, HandleSmugglerBackground, "1BRYovMiish9iFnN5Q77cW14vP6bGjO14m32NzGJFiV4"));
      learnableDictionary.Add(CustomSkill.StreetUrchin, new LearnableSkill(CustomSkill.StreetUrchin, "Gosse des rues", "", Category.StartingTraits, "urchin", 1, 1, Ability.Dexterity, Ability.Charisma, HandleUrchinBackground, "1vtim0ITSkBzl5IlPGjhKuZOTCyBYA_GHLc8M09t1IoM"));
      learnableDictionary.Add(CustomSkill.Gambler, new LearnableSkill(CustomSkill.Gambler, "Parieur", "", Category.StartingTraits, "parieur", 1, 1, Ability.Dexterity, Ability.Charisma, HandleGamblerBackground, "1HkPJH8uqCCn4k4J8HUh3g52v4TfAEFAYiFJlXYhEvuM"));
      learnableDictionary.Add(CustomSkill.Entertainer, new LearnableSkill(CustomSkill.Entertainer, "Saltimbanque", "", Category.StartingTraits, "Saltimbanque", 1, 1, Ability.Charisma, Ability.Dexterity, HandleEntertainerBackground, "1Y87LKyg4DLKdlzUcfFtMj7M1rkSh6yAXx6Cb6Q16Dug"));
      learnableDictionary.Add(CustomSkill.CityWatch, new LearnableSkill(CustomSkill.CityWatch, "Agent du guet", "", Category.StartingTraits, "guet", 1, 1, Ability.Strength, Ability.Constitution, HandleCityWatchBackground, "1JmIBbWSJ6oec820F-4TYeShM43XAKtOtCz2vBf2lPT4"));
      learnableDictionary.Add(CustomSkill.Investigator, new LearnableSkill(CustomSkill.Investigator, "Détective", "", Category.StartingTraits, "detective", 1, 1, Ability.Dexterity, Ability.Intelligence, HandleInvestigatorBackground, "1wMwqmw3jVGFAnQCDa-ayjqeKUL2QGXPyP7KIc7QoDy8"));
      learnableDictionary.Add(CustomSkill.KnightOfTheOrder, new LearnableSkill(CustomSkill.KnightOfTheOrder, "Chevalier de l'Ordre", "", Category.StartingTraits, "chevalier", 1, 1, Ability.Strength, Ability.Charisma, HandleKnightBackground, "1psb8aH-EaKINYKif3XC-MG3mtTFgh-5MYAehcJnCxl4"));
      learnableDictionary.Add(CustomSkill.Noble, new LearnableSkill(CustomSkill.Noble, "Noble", "", Category.StartingTraits, "Noble", 1, 1, Ability.Charisma, Ability.Constitution, HandleNobleBackground, "1_KAkFnH9Ydt2s0ljOGvwn-7mo_Vk5PrqtqIwJZ48k-Q"));
      learnableDictionary.Add(CustomSkill.Courtier, new LearnableSkill(CustomSkill.Courtier, "Courtisan", "", Category.StartingTraits, "Courtisan", 1, 1, Ability.Charisma, Ability.Intelligence, HandleCourtierBackground, "1B1C2bcvU9HBb-d2m1lnFhnHWN2a46hp3zWDb9nBZnJU"));
      learnableDictionary.Add(CustomSkill.FailedMerchant, new LearnableSkill(CustomSkill.FailedMerchant, "Marchand ruiné", "", Category.StartingTraits, "ruined_merchant", 1, 1, Ability.Intelligence, Ability.Constitution, HandleMerchantBackground, "1-2AuXuxSW1PICZWicsGUcb8Sgh_rGTVUYc6eT2zWJO8"));
      learnableDictionary.Add(CustomSkill.Taken, new LearnableSkill(CustomSkill.Taken, "Captif", "", Category.StartingTraits, "Captif", 1, 1, Ability.Constitution, Ability.Dexterity, HandleTakenBackground, "16_6ygOZjsfJF7Ngk5VZ9gSK_nlAz7kqy5-sSDlVVPxw"));
      learnableDictionary.Add(CustomSkill.Heir, new LearnableSkill(CustomSkill.Heir, "Héritier", "", Category.StartingTraits, "heir", 1, 1, Ability.Charisma, Ability.Constitution, HandleScionBackground, "1_D4_FywpDXAJXABkhpuwMAUkg68dsRiU07p-9Q-XSiA"));
      learnableDictionary.Add(CustomSkill.Magistrate, new LearnableSkill(CustomSkill.Magistrate, "Magistrat", "", Category.StartingTraits, "Magistrat", 1, 1, Ability.Intelligence, Ability.Wisdom, HandleMagistrateBackground, "16w21xr6HgBE159pLr1Br0mf7T00zsIzonGdXTGekIYs"));
      learnableDictionary.Add(CustomSkill.AdventurerScion, new LearnableSkill(CustomSkill.AdventurerScion, "Héritier d'un célèbre aventurier", "", Category.StartingTraits, "scion", 1, 1, Ability.Charisma, Ability.Dexterity, HandleScionBackground, "1S7UROAImbnZdGf5Q_CkScJ_gfmfRDBcHGhQ9LpqHoAg"));
      learnableDictionary.Add(CustomSkill.Refugee, new LearnableSkill(CustomSkill.Refugee, "Réfugié", "", Category.StartingTraits, "refugee", 1, 1, Ability.Dexterity, Ability.Constitution, HandleRefugeeBackground, "1GCBVKWeDNR20kqOqKwIex8qlCbOltNmUpkblINEShYM"));
      learnableDictionary.Add(CustomSkill.Prisoner, new LearnableSkill(CustomSkill.Prisoner, "Prisonnier", "", Category.StartingTraits, "prisoner", 1, 1, Ability.Constitution, Ability.Charisma, HandlePrisonerBackground, "1Qdyz-fNuGrqI64NYaAP6wmiQd7GhUz0-hqf5F-vrYps"));
      learnableDictionary.Add(CustomSkill.HauntedOne, new LearnableSkill(CustomSkill.HauntedOne, "Tourmenté", "", Category.StartingTraits, "tormented", 1, 1, Ability.Constitution, Ability.Charisma, HandleHauntedBackground, "1yrgm7p09M0_-Y4nDkxY7gtT1LaO1Av305zBDBoqe72M"));
      learnableDictionary.Add(CustomSkill.Faceless, new LearnableSkill(CustomSkill.Faceless, "Sans-visage", "", Category.StartingTraits, "faceless", 1, 1, Ability.Charisma, Ability.Constitution, HandleFacelessBackground, "1ghCYrBt8e58F5QQB5gvyn294XZO7jHkdvSIYZfYgS9g"));
      learnableDictionary.Add(CustomSkill.SecretIdentity, new LearnableSkill(CustomSkill.SecretIdentity, "Identité Secrète", "", Category.StartingTraits, "secret_identity", 1, 1, Ability.Charisma, Ability.Dexterity, HandleSecretBackground, "1EevCfGvIUXDSx2iEJwPMwN3BDuNGBMR_GSQKZqiIsYQ"));

      // LANGUAGES

      learnableDictionary.Add(CustomSkill.Elfique, new LearnableSkill(CustomSkill.Elfique, "Elfique", "Permet de parler et comprendre l'elfique.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Nain, new LearnableSkill(CustomSkill.Nain, "Nain", "Permet de parler et comprendre le nain.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Orc, new LearnableSkill(CustomSkill.Orc, "Orc", "Permet de parler et comprendre l'orc.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Giant, new LearnableSkill(CustomSkill.Giant, "Giant", "Permet de parler et comprendre le géant.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Gobelin, new LearnableSkill(CustomSkill.Gobelin, "Gobelin", "Permet de parler et comprendre le gobelin.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Halfelin, new LearnableSkill(CustomSkill.Halfelin, "Halfelin", "Permet de parler et comprendre l'hafelin.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Abyssal, new LearnableSkill(CustomSkill.Abyssal, "Abyssal", "Permet de parler et comprendre l'abyssal.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Celestial, new LearnableSkill(CustomSkill.Celestial, "Céleste", "Permet de parler et comprendre le céleste.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Draconique, new LearnableSkill(CustomSkill.Draconique, "Draconique", "Permet de parler et comprendre le draconique.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Profond, new LearnableSkill(CustomSkill.Profond, "Profond", "Permet de parler et comprendre le langage d'Outreterre.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Infernal, new LearnableSkill(CustomSkill.Infernal, "Infernal", "Permet de parler et comprendre l'infernal.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Primordiale, new LearnableSkill(CustomSkill.Primordiale, "Primordiale", "Permet de parler et comprendre le primordial.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Sylvain, new LearnableSkill(CustomSkill.Sylvain, "Sylvain", "Permet de parler et comprendre le sylvain.", Category.Language, "icon_elf", 1, 1526, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Druidique, new LearnableSkill(CustomSkill.Druidique, "Druidique", "Permet de parler et comprendre le druidique.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Voleur, new LearnableSkill(CustomSkill.Voleur, "Voleur", "Permet de parler et comprendre le langage des voleurs.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Gnome, new LearnableSkill(CustomSkill.Gnome, "Gnome", "Permet de parler et comprendre le gnome.", Category.Language, "icon_elf", 1, 763, Ability.Intelligence, Ability.Wisdom));

      // FEATS

      learnableDictionary.Add(CustomSkill.AbilityImprovement, new LearnableSkill(CustomSkill.AbilityImprovement, "Amélioration de caractéristiques", "Choisissez une caractéristique à laquelle ajouter un bonus de +2 ou deux caractéristiques auxquelles ajouter un bonus de +1.\n\nCe don ne vous permet pas d'aller au-delà de 20 dans une même caractéristique.", Category.Feat, "ife_aurabrave", 20, 5, Ability.Constitution, Ability.Intelligence, OnAbilityImprovement));
      learnableDictionary.Add(CustomSkill.Actor, new LearnableSkill(CustomSkill.Actor, "Acteur", "Vous gagnez un point de charisme (maximum 20).\n\nVous avez un avantage en Tromperie et Représentation lorsque vous tenter de vous faire passer pour une autre personne.\n\nVous pouvez imiter le discours d'une autre personne ou les sons émis par d'autres créatures. Vous devez avoir entendu la personne qui parle, ou entendu la créature émettre le son, pendant au moins 1 minute. Un jet réussi d'Intuition contre votre jet de Tromperie permet à celui qui écoute de déterminer qu'il s'agit d'une imitation.", Category.Feat, "ife_emptybod", 1, 5, Ability.Charisma, Ability.Dexterity, OnLearnActor));
      learnableDictionary.Add(CustomSkill.Vigilant, new LearnableSkill(CustomSkill.Vigilant, "Vigilant", "Toujours en train de guetter le danger, vous gagnez les effets ci-dessous :\n- Vous ne pouvez pas être surpris\nLes créatures que vous ne pouvez pas voir ne bénéficient pas d'un avantage lorsqu'elles vous attaquent", Category.Feat, "is_Vigilant", 1, 5, Ability.Wisdom, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.Sportif, new LearnableSkill(CustomSkill.Sportif, "Sportif", "Vous avez suivi une intense formation physique. Vous bénéficiez des effets ci-dessous :\n- +1 Force ou Dextérité (max 20)\n-  Lorsque vous êtes renversé, vous restez au sol deux fois moins longtemps\n- Escalader ne vous coûte pas de mouvement supplémentaire\n- Vous pouvez faire un saut en longueur ou en hauteur avec seulement 1,50 mètre d'élan, au lieu de 3 mètres", Category.Feat, "is_Sportif", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnSportif));
      learnableDictionary.Add(CustomSkill.Chargeur, new LearnableSkill(CustomSkill.Chargeur, "Chargeur", "Action bonus\n\n Vous sprintez jusqu'à la cible pour l'attaque. Si votre charge se fait sur plus de trois mètres, vous bénéficiez d'un bonus de +5 sur votre prochaine attaque.", Category.Feat, "is_Charger", 1, 5, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MaitreArbaletrier, new LearnableSkill(CustomSkill.MaitreArbaletrier, "Maître Arbalétrier", "Grâce à votre longue pratique de l'arbalète, vous bénéficiez des effets ci-dessous :\n- Vous ignorez la propriété de chargement des arbalètes que vous maitrisez\n- Vous ne subissez plus de désavantage sur vos jets d'attaque à distance à l'arbalète si une créature hostile se trouve engagée en mêlée avec vous\n- Double la durée des Plaies Béantes infligées par vos Tirs Perçants\n- Lorsque vous attaquez avec une arbalète de poing (remplacée en jeu par le shuriken), vous utilisez automatiquement votre action bonus (si vous en avez une disponible) pour effectuer une attaque supplémentaire", Category.Feat, "is_ArbaMaster", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnMaitreArbaletrier));
      learnableDictionary.Add(CustomSkill.DuellisteDefensif, new LearnableSkill(CustomSkill.DuellisteDefensif, "Duelliste Défensif", "Lorsque vous tenez une arme de finesse que vous maîtrisez, la prochaine fois qu'une créature vous touche avec une attaque de mêlée, vous utilisez votre réaction pour ajouter votre bonus de maîtrise à votre CA pour cette attaque, ce qui pourrait vous permettre de parer l'attaque.", Category.Feat, "is_DefDuel", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnDefensiveDuellist));
      learnableDictionary.Add(CustomSkill.AmbiMaster, new LearnableSkill(CustomSkill.AmbiMaster, "Maître Ambidextre", "Vous maîtrisez le combat à deux armes et bénéficiez des effets ci-dessous :\n- Vous gagnez un bonus de +1 à la CA si vous tenez une arme de mêlée dans chaque main\n- Vous pouvez utiliser le combat à deux armes même si les armes de corps à corps à une main que vous tenez ne sont pas légères. Ne s'applique pas aux armes Lourdes\n- Vous pouvez dégainer ou rengainer deux armes à une main en une seule action alors qu'il vous en faudrait normalement deux.", Category.Feat, "is_AmbiMaster", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnAmbiMaster));
      learnableDictionary.Add(CustomSkill.DungeonExpert, new LearnableSkill(CustomSkill.DungeonExpert, "Expert en donjons", "Vigilant face aux pièges cachés et portes secrètes que l'on trouve dans de nombreux donjons, vous obtenez les bénéfices ci-dessous :\n- Vous avez un avantage aux jets de Sagesse (Perception) et Intelligence (Investigation) effectués pour détecter la présence de portes secrètes\n- Vous avez un avantage aux jets de sauvegarde pour éviter ou résister aux pièges\n- Vous obtenez la résistance aux dégâts infligés par les pièges\n- Vous ne subissez pas de malus sur vos jets de Sagesse (Perception) passifs lorsque vous vous déplacez rapidement", Category.Feat, "is_DungeonExpert", 1, 5, Ability.Dexterity, Ability.Wisdom, OnLearnDungeonExpert));
      learnableDictionary.Add(CustomSkill.Gaillard, new LearnableSkill(CustomSkill.Gaillard, "Gaillard", "Robuste et résistant, vous bénéficiez des effets ci-dessous :\n- +1 Constitution (max 20)\n- Lorsque vous lancez un dé de vie pour regagner des points de vie, le nombre minimum de points de vie que vous regagnez de ce jet est égal à deux fois votre modificateur de Constitution (minimum 2).", Category.Feat, "is_Gaillard", 1, 5, Ability.Constitution, Ability.Strength, OnLearnGaillard));
      learnableDictionary.Add(CustomSkill.Elementaliste, new LearnableSkill(CustomSkill.Elementaliste, "Elémentaliste", "Choisissez un type de dégâts parmi : acide, froid, feu, foudre ou tonnerre. Vos sorts bénéficient des effets ci-dessous\n- La résistance à ce type de dégâts est ignorée\n- Lorsque vous obtenez un 1 sur un jet de dégâts avec ce type de dégâts, il est remplacé par un 2\n\nCe don peut être sélectionné plusieurs fois pour des types de dégâts différents.", Category.Feat, "is_Elementalist", 5, 5, Ability.Charisma, Ability.Intelligence, OnLearnElementalist));
      learnableDictionary.Add(CustomSkill.CogneurLourd, new LearnableSkill(CustomSkill.CogneurLourd, "Cogneur Lourd", "Vous avez appris à tirer avantage du poids d'une arme, laissant son élan augmenter l'efficacité de vos frappes. Vous bénéficiez des effets ci-dessous\n- Lorsque, avec une arme de mêlée, vous infligez un coup critique ou faîtes tomber les points de vie d'une créature à 0, vous utilisez automatiquement votre action bonus pour effectuer une attaque supplémentaire\n- Tant que cette capacité est activée, lorsque vous attaquez avec une arme de mêlée à deux mains que vous maîtrisez, vous subissez -5 au jet d'attaque et  gagnez +10 de dégâts (fonctionne également avec les armes versatiles utilisées à deux mains)", Category.Feat, "is_CogneurLourd", 1, 5, Ability.Strength, Ability.Constitution, OnLearnCogneurLourd));
      learnableDictionary.Add(CustomSkill.ProtectionLegere, new LearnableSkill(CustomSkill.ProtectionLegere, "Protection Légère", "Vous avez été formé à la maîtrise des armures légères. Vous bénéficiez des effets ci-dessous\n- +1 Force ou Dextérité (max +20)\n- Vous maîtrisez les armures légères", Category.Feat, "is_ProtecLegere", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnProtectionLegere));
      learnableDictionary.Add(CustomSkill.ProtectionIntermediaire, new LearnableSkill(CustomSkill.ProtectionIntermediaire, "Protection Intermédiaire", "Vous avez été formé à la maîtrise des armures intermédiaires et des boucliers. Vous bénéficiez des effets ci-dessous\n- +1 Force ou Dextérité (max +20)\n- Vous maîtrisez les armures intermédiaires et les boucliers", Category.Feat, "is_ProtecInter", 1, 5, Ability.Constitution, Ability.Dexterity, OnLearnProtectionIntermediaire, learnablePrerequiste: new() { CustomSkill.LightArmorProficiency }));
      learnableDictionary.Add(CustomSkill.ProtectionLourde, new LearnableSkill(CustomSkill.ProtectionLourde, "Protection Lourde", "Vous avez été formé à la maîtrise des armures lourdes. Vous bénéficiez des effets ci-dessous\n- +1 Force (max +20)\n- Vous maîtrisez les armures lourdes", Category.Feat, "is_ProtecLourde", 1, 5, Ability.Strength, Ability.Constitution, OnLearnProtectionLourde, learnablePrerequiste: new() { CustomSkill.MediumArmorProficiency }));
      learnableDictionary.Add(CustomSkill.MaitreArmureLourde, new LearnableSkill(CustomSkill.MaitreArmureLourde, "Maître des armures lourdes", "Vous pouvez utiliser votre armure pour détourner des attaques qui en auraient tué plus d'un. Vous bénéficiez des effets ci-dessous\n- +1 Force (max +20)\n- Lorsque vous portez une armure lourde, les dégâts des attaques non magiques sont réduits de 3", Category.Feat, "is_HeavyMaster", 1, 5, Ability.Strength, Ability.Constitution, OnLearnMaitreArmureLourde, learnablePrerequiste: new() { CustomSkill.HeavyArmorProficiency }));
      learnableDictionary.Add(CustomSkill.MaitreArmureIntermediaire, new LearnableSkill(CustomSkill.MaitreArmureIntermediaire, "Maître des armures intermédiaires", "Vous avez pratiqué l'usages des armures intermédiaires au point de bénéficier des effets ci-dessous\n- Porter une armure intermédiaire n'impose pas de désavantage à vos jets de Dextérité (Furtivité)\n-  Lorsque vous portez une armure intermédiaire, vous pouvez ajouter 3, au lieu de 2, à votre CA si votre modificateur de dextérité le permet", Category.Feat, "is_InterMaster", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnMaitreArmureIntermediaire, learnablePrerequiste: new() { CustomSkill.MediumArmorProficiency }));
      learnableDictionary.Add(CustomSkill.MaitreBouclier, new LearnableSkill(CustomSkill.MaitreBouclier, "Maître des boucliers", "Vous utilisez les boucliers non seulement pour vous protéger, mais aussi de manière offensive. Lorsque vous êtes équipé d'un bouclier, vous bénéficiez des effets ci-dessous\n- Vous pouvez utiliser une action bonus afin de tenter de renverser la cible\n- Ajoutez le bonus de base à la CA de votre bouclier à vos jets de sauvegarde de Dextérité\n- Une fois par round, si vous êtes soumis à un effet qui vous permet d'effectuer un jet de sauvegarde de Dextérité pour ne subir que la moitié des dégâts, vous interposez votre bouclier entre vous et la source de l'effet. Si vous réussissez le jet, vous ne subissez aucun dégât si vous l'échouez, vous n'en subissez que la moitié\n- Vous maîtrisez les pavois", Category.Feat, "is_ShieldMaster", 1, 5, Ability.Constitution, Ability.Strength, OnLearnMaitreBouclier));
      learnableDictionary.Add(CustomSkill.TueurDeMage, new LearnableSkill(CustomSkill.TueurDeMage, "Tueur de mage", "Vous avez pratiqué des techniques utiles afin de contrer les lanceurs de sorts au corps à corps. Vous bénéficiez des effets ci-dessous\n- Quand une créature dont vous êtes au contact lance un sort, vous utilisez automatiquement votre réaction pour effectuer une attaque au corps à corps avec une arme contre cette créature (si vous avez une réaction disponible)\nSi vous touchez une créature qui se concentre sur un sort, cette créature a un désavantage à son jet de sauvegarde pour maintenir sa concentration\n- Vous avez un avantage aux jets de sauvegarde contre les sorts lancés par les créatures dont vous êtes au contact", Category.Feat, "is_MageSlayer", 1, 5, Ability.Dexterity, Ability.Strength, OnLearnTueurDeMage));
      learnableDictionary.Add(CustomSkill.Mobile, new LearnableSkill(CustomSkill.Mobile, "Mobile", "Vous êtes exceptionnellement rapide. Vous bénéficiez des effets ci-dessous\n- +30% de vitesse de déplacement\nLorsque vous utilisez l'action Sprinter, vous n'êtes pas ralenti par les terrains difficiles\n- Après avoir effectué une attaque de mêlée contre une créature, celle-ci ne peut plus vous infliger d'attaque d'opportunité pendant 1 round", Category.Feat, "is_Mobile", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnMobile));
      learnableDictionary.Add(CustomSkill.Resilient, new LearnableSkill(CustomSkill.Resilient, "Résilient", "Vous gagnez +1 dans la caractéristique de votre choix (max 20) et maîtrisez les jets de sauvegardes liés à cette caractéristique.", Category.Feat, "is_Resilient", 1, 5, Ability.Constitution, Ability.Charisma, OnLearnResilient));
      learnableDictionary.Add(CustomSkill.AgresseurSauvage, new LearnableSkill(CustomSkill.AgresseurSauvage, "Agresseur Sauvage", "Lorsque vous attaquez avec une arme de mêlée, vous lancez vos dés dégâts deux fois et utilisez le meilleur résultat.", Category.Feat, "is_SavageAg", 1, 5, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.HastMaster, new LearnableSkill(CustomSkill.HastMaster, "Maître d'Hast", "Les armes à allonge vous permettent de tenir vos ennemis à distance. Vous bénéficiez des effets ci-dessous\n- Lorsque vous attaquez avec une hallebarde, un bâton ou une lance, vous effectuez une attaque supplémentaire avec l'extrémité opposée de l'arme (1x par round, 1d4 + force ou dextérité contondant)\n- Lorsque vous portez une hallebarde un bâton ou une lance, vous effectuez une attaque d'opportunité lorsqu'une créature entre à portée de votre allonge", Category.Feat, "is_SavageAg", 1, 5, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Sentinelle, new LearnableSkill(CustomSkill.Sentinelle, "Sentinelle", "Vous maîtrisez des techniques qui tirent avantage des faiblesses de la garde de vos ennemis et bénéficiez des effets ci-dessous\n- Lorsque vous touchez une créature avec une attaque d'opportunité, la vitesse de la créature est réduite à 0 pour un round\n- Vous pouvez effectuer une attaque d'opportunité même contre les créatures qui utilisent l'action Désengagement\n- Quand une créature hostile à portée de mêlée attaque une cible alliée et si cet allié ne dispose pas du don sentinelle, vous utilisez automatiquement votre réaction pour effectuer une attaque d'opportunité contre la créature avec une arme de mêlée\n- Vous avez l'avantage sur vos attaques d'opportunité", Category.Feat, "is_Sentinelle", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnSentinelle));
      learnableDictionary.Add(CustomSkill.TireurDelite, new LearnableSkill(CustomSkill.TireurDelite, "Tireur d'Elite", "Vous êtes un maître du combat à distance et êtes capables de prouesses que d'aucuns penseraient impossible. Vous obtenez les effets ci-dessous\n- Vous n'êtes pas désavantagé lorsque vous tirez au-delà de la capacité optimale de votre arme\n- Vous n'êtes pas désavantagé lorsque vous tirez sur une cible en hauteur\n- Lorsque ce don est activé, vous subissez -5 aux jets d'attaque des armes à distance que vous maîtrisez et bénéficiez d'un bonus de +10 aux dégâts", Category.Feat, "is_Sentinelle", 1, 5, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BagarreurDeTaverne, new LearnableSkill(CustomSkill.BagarreurDeTaverne, "Bagarreur de taverne", "Habitué à vous battre comme un chiffonnier en utilisant tout ce qui vous tombe sous la main, vous obtenez les effets ci-dessous\n- +1 Force ou Constitution (max 20)\n- Vous maîtrisez les armes improvisées (pour le moment uniquement utilisable en animation. Dégâts à la discrétion du DM : 1d4 si l'objet utilisé ne peut pas faire office d'arme, sinon dégâts de l'arme dont il se rapproche le plus)\n- Votre attaque à mains nues utilise un d4 pour les dégâts (si elle n'est pas déjà supérieure)\n- Ajoutez votre modificateur de force à vos attaques à mains nues ou avec des armes improvisées (au total, x2 si votre force est supérieure à votre dextérité, ou dextérité + force si votre dextérité est supérieure)\n\nAttention, en rp cela signifie également que votre style de combat est extrêmement grossier et ne fait preuve d'aucun raffinement", Category.Feat, "is_Bagarreur", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnBagarreurDeTaverne));
      learnableDictionary.Add(CustomSkill.MageDeGuerre, new LearnableSkill(CustomSkill.MageDeGuerre, "Mage de guerre", "Votre pratique de l'incantation en combat, vous permet de bénéficier des effets ci-dessous\n- Avantage sur les jets de sauvegarde de Constitution pour maintenir votre concentration\n- Vous pouvez effectuer les composantes somatiques d'un sort même si vous avez des armes ou un bouclier dans les mains\n- Si ce don est activé, lorsque vous avez la possibilité d'effectuer une attaque d'opportunité, au lieu de frapper avec votre arme vous lancez le sort décharge électrique sur la cible", Category.Feat, "is_WarMage", 1, 5, Ability.Charisma, Ability.Constitution, OnLearnMageDeGuerre));
      learnableDictionary.Add(CustomSkill.AgiliteDesCourtsSurPattes, new LearnableSkill(CustomSkill.AgiliteDesCourtsSurPattes, "Agilité des courts-sur-pattes", "Prérequis : Nain, Gnome, Halfelin\n\nAgilité des courts-sur-pattes\n\nVous êtes particulièrement agile pour votre race. Vous bénéficiez des effets ci-dessous\n- +1 Force ou Dextérité (max 20)\n- Vous ne subissez plus de malus racial de déplacement\n- Vous maîtrisez Acrobatie ou Athlétisme, au choix\n- Vous avez l'avantage sur vos jets de Force (Athlétisme) ou Dextérité (Acrobatie) pour vous échapper si vous êtes agrippé.", Category.Feat, "race_halfling", 1, 5, Ability.Dexterity, Ability.Strength, OnLearnAgiliteDesCourtsSurPattes, racePrerequiste: new() { CustomRace.Halfling, CustomRace.LightfootHalfling, CustomRace.StrongheartHalfling, CustomRace.Dwarf, CustomRace.GoldDwarf, CustomRace.ShieldDwarf, CustomRace.Duergar, CustomRace.Gnome, CustomRace.DeepGnome, CustomRace.ForestGnome, CustomRace.RockGnome }));
      learnableDictionary.Add(CustomSkill.Robuste, new LearnableSkill(CustomSkill.Robuste, "Robuste", "Vous gagnez 2 points de vie supplémentaires pour chaque niveau. Ce don est rétroactif.", Category.Feat, "is_Robuste", 1, 5, Ability.Constitution, Ability.Strength, OnLearnRobuste));
      learnableDictionary.Add(CustomSkill.Broyeur, new LearnableSkill(CustomSkill.Broyeur, "Broyeur", "Vous êtes maître dans l'art d'écraser vos ennemis, ce qui vous confère les effets ci-dessous\n- +1 Force ou Constitution (max 20)\n- Diminue de 1 le jet nécessaire pour effectuer un critique avec les armes de mêlée contondante. Effet cumulable\n- Si vous infligez un critique avec une arme contondante, vous avez un avantage aux jets d'attaque jusqu'au début de votre prochain tour", Category.Feat, "is_Broyeur", 1, 5, Ability.Strength, Ability.Constitution, OnLearnBroyeur));
      learnableDictionary.Add(CustomSkill.ConstitutionInfernale, new LearnableSkill(CustomSkill.ConstitutionInfernale, "Constitution Infernale", "Prérequis : Tiefflin\n\nVotre héritage diabolique se manifeste de façon particulièrement puissante. Vous obtenez les effets ci-dessous\n- +1 Constitution (max 20)\n- Résistance aux dégâts de froid et de poison\n- Avantage aux jets de sauvegarde contre l'empoisonnement", Category.Feat, "race_tiefling", 1, 5, Ability.Constitution, Ability.Strength, OnLearnConstitutionInfernale, racePrerequiste: new() { CustomRace.AsmodeusThiefling, CustomRace.MephistoThiefling, CustomRace.ZarielThiefling }));
      learnableDictionary.Add(CustomSkill.FureurOrc, new LearnableSkill(CustomSkill.FureurOrc, "Fureur Orc", "Prérequis : Demi-Orc\n\nVotre furie brûle sans relâche. Vous gagnez les avantages ci-dessous\n- +1 Force ou Constitution (max 20)\n- Une fois par repos court, quand vous frappez avec une arme de mêlée avec une arme, vous lancez un dé de dégâts supplémentaire\n- Lorsque votre don d'Endurance s'active et que vous êtes en train d'attaquer, vous utilisez votre réaction pour infliger une attaque supplémentaire", Category.Feat, "is_FureurOrc", 1, 5, Ability.Strength, Ability.Constitution, OnLearnFureurOrc, racePrerequiste: new() { CustomRace.HalfOrc }, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.Pourfendeur, new LearnableSkill(CustomSkill.Pourfendeur, "Pourfendeur", "Vous savez où trancher pour obtenir les meilleurs résultats, ce qui vous confère les effets suivants\n- +1 Force ou Constitution (max 20)\n- Une fois par round, lorsque vous infligez des dégâts tranchants, la vitesse de la cible est réduite de 30% pendant 1 round\n- Si vous infligez un critique sur des dégâts tranchants, la cible subit un désavantage à tous ses jets d'attaque pendant un round", Category.Feat, "is_Slayer", 1, 5, Ability.Strength, Ability.Dexterity, OnLearnPourfendeur));
      learnableDictionary.Add(CustomSkill.Empaleur, new LearnableSkill(CustomSkill.Empaleur, "Empaleur", "Vos attaques perforantes sont d'une précision telle que vous obtenez les effets ci-dessous\n- +1 Force ou Dextérité (max 20)\n- Une fois par round, si vous faites 2- sur un dé de dégâts perforant, lorsque vous touchez une créature avec une attaque qui inflige des dégâts perforants, vous relancez le dé et conservez le résultat\n- Lorsque vous infligez un coup critique qui inflige des dégâts perforants, vous lancez un dé de dégâts supplémentaire", Category.Feat, "is_Empaleur", 1, 5, Ability.Dexterity, Ability.Constitution, OnLearnEmpaleur));
      learnableDictionary.Add(CustomSkill.EspritVif, new LearnableSkill(CustomSkill.EspritVif, "Esprit Vif", "Vous avez un esprit qui permet de repérer le temps, les directions et les détails avec une précision étonnante. Vous obtenez les avantages ci-dessous\n- +1 Intelligence (max 20)\n- Vous savez toujours où se trouve le nord\n- Vous savez toujours le nombre d'heures restantes avant le prochain lever ou coucher de soleil\n- Vous pouvez vous rappeler avec précision ce que vous avez vu ou entendu au cours du mois passé.", Category.Feat, "is_EspritVif", 1, 5, Ability.Intelligence, Ability.Wisdom, OnLearnEspritVif));
      learnableDictionary.Add(CustomSkill.Observateur, new LearnableSkill(CustomSkill.Observateur, "Observateur", "Vous remarquez des détails dans votre environnement qui échappent à d'autres. Vous obtenez les effets suivants\n- +1 Intelligence ou Sagesse (max 20)\n- Vous pouvez lire sur les lèvres à partir du moment où vous maitrisez la langue\n- +5 à vos jets de Sagesse (Perception) et d'Intelligence (Investigation) passifs", Category.Feat, "is_Observant", 1, 5, Ability.Wisdom, Ability.Intelligence, OnLearnObservateur));
      learnableDictionary.Add(CustomSkill.MartialInitiate, new LearnableSkill(CustomSkill.MartialInitiate, "Initié Martial", "Votre entraînement martial vous a permis de développer un style particulier de combat.\n\nChoisissez un style de combat de votre choix de la liste des styles de guerrier. Vous ne pouvez pas choisir un style que vous connaissez déjà.\n\nChaque fois que vous pouvez choisir un nouveau don, vous pouvez également choisir de changer votre style de combat.", Category.Feat, "is_MartialIni", 1, 5, Ability.Wisdom, Ability.Intelligence, OnLearnMartialInitiate));
      learnableDictionary.Add(CustomSkill.CreateurMerveilleux, new LearnableSkill(CustomSkill.CreateurMerveilleux, "Créateur Merveilleux", "Prérequis : Gnome\n\nVous maîtrisez les techniques de bricolage de votre peuple. Vous gagnes les effets ci-dessous\n- +1 Dextérité ou Intelligence (max 20)\n- Lorsque vous fabriquez des gadgets, vous allez un cran plus loin que les autres et bénéficiez d'un effet supplémentaire sur celui-ci\n\n(Effet à déterminer avec votre MJ, le système artisanal de création de gadget n'étant pas encore en place)", Category.Feat, "is_CreateurMerv", 1, 5, Ability.Intelligence, Ability.Dexterity, OnLearnCreateurMerveilleux, racePrerequiste: new() { CustomRace.RockGnome }));
      learnableDictionary.Add(CustomSkill.LameDoutretombe, new LearnableSkill(CustomSkill.LameDoutretombe, "Lame d'outretombe", "Prérequis : Elfe\n\nVous êtes le descendant d'un maître de la double-lame. Une partie de cette maîtrise a pu vous être inculquée. Vous gagnez les effets ci-dessous\n- +1 Dextérité ou Force (max 20)\n- Lorsque vous maniez une double-lame, vous gagnez +1 à la CA\n- Lorsque vous maniez une double-lame, l'arme est considérée comme ayant la propriété Finesse\n- Vous obtenez les bases d'apprentissage de la maîtrise de la double-lame\n- L'apprentissage de la maîtrise de la double-lame est 25 % plus rapide", Category.Feat, "is_LameDoutre", 1, 5, Ability.Dexterity, Ability.Strength, OnLearnLameDoutretombe, racePrerequiste: new() { CustomRace.RockGnome }));
      learnableDictionary.Add(CustomSkill.Prodige, new LearnableSkill(CustomSkill.Prodige, "Prodige", "Prérequis : Humain, Demi-Elfe, Demi-Orc\n\nVotre attrait pour apprendre des nouveautés est indéniable. Vous bénéficiez des effets ci-dessous\n- L'apprentissage de maîtrise de compétence est 25 % plus rapide\n- L'apprentissage d'expertise de compétence est 25 % plus rapide\n- Apprendre une langue est 25 % plus rapide", Category.Feat, "is_Prodige", 1, 5, Ability.Intelligence, Ability.Wisdom, OnLearnProdige, racePrerequiste: new() { CustomRace.HalfOrc, CustomRace.Human, CustomRace.HalfElf, CustomRace.HighHalfElf, CustomRace.DrowHalfElf, CustomRace.WoodHalfElf }));
      learnableDictionary.Add(CustomSkill.FlammesDePhlegetos, new LearnableSkill(CustomSkill.FlammesDePhlegetos, "Flammes de Phlegetos", "Prérequis : Tieffelin\n\nVous êtes capables de mettre les feux de l'enfer à votre service. Vous bénéficiez des effets ci-dessous.\n- +1 Intelligence ou Charisme (max 20)\n- Lorsque vous faites un 1 sur un jet de dégâts pour infliger des dégâts de feu, vous pouvez relancer le dé et devez utiliser le nouveau résultat quel qu'il soit\n-  Lorsque vous lancez un sort qui inflige des dégâts de feu, vous êtes entouré d'un bouclier de flammes pour un round. Ces flammes infligent 1d4 dégâts de feu à toutes les créatures qui vous touchent avec une attaque de mêlée", Category.Feat, "is_Phlegetos", 1, 5, Ability.Charisma, Ability.Intelligence, OnLearnFlammesDePhlegetos, racePrerequiste: new() { CustomRace.AsmodeusThiefling, CustomRace.MephistoThiefling, CustomRace.ZarielThiefling }));
      learnableDictionary.Add(CustomSkill.AmiDeToutLeMonde, new LearnableSkill(CustomSkill.AmiDeToutLeMonde, "L'ami de tout le monde", "Prérequis : Demi-Elfe\n\nVous avez une personnalité magnétique, ce qui facilite nettement vos relations avec les autres. Vous gagnez les effets ci-dessous\n- +1 Charisme (max 20)\n- Maîtrise de Tromperie et Persuasion. Si vous maîtrisez déjà ces compétences, vous en gagnez l'expertise", Category.Feat, "ife_X2EpicRepu", 1, 5, Ability.Charisma, Ability.Intelligence, OnLearnAmiDeToutLeMonde, racePrerequiste: new() { CustomRace.HalfElf, CustomRace.DrowHalfElf, CustomRace.WoodHalfElf, CustomRace.HighHalfElf }));
      learnableDictionary.Add(CustomSkill.Expert, new LearnableSkill(CustomSkill.Expert, "Expert", "Vous avez perfectionné votre maîtrise avec des compétences particulières. Vous bénéficiez des effets ci-dessous\n- +1 à la caractéristique de votre choix (max 20)\n- L'apprentissage de maîtrise de compétence est 25 % plus rapide\n- L'apprentissage d'expertise de compétence est 25 % plus rapide", Category.Feat, "ife_X1Expert", 1, 5, Ability.Intelligence, Ability.Constitution, OnLearnExpert));
      learnableDictionary.Add(CustomSkill.Linguiste, new LearnableSkill(CustomSkill.Linguiste, "Linguiste", "Vous avez étudié les langues et les codes, vous bénéficiez des effets ci-dessous\n- +1 Intelligence (max 20)\n- Vous apprenez les langues deux fois plus rapidement\n- Vous êtes capables de créer des codes écrits. Les autres sont incapables de déchiffrer vos codes, à moins que vous ne leur appreniez, qu'ils ne réussissent un jet d'intelligence (DD votre modificateur d'intelligence + bonus de maîtrise) ou qu'ils ne fassent appel à la magie", Category.Feat, "is_Linguiste", 1, 5, Ability.Intelligence, Ability.Wisdom, OnLearnLinguiste));
      learnableDictionary.Add(CustomSkill.MeneurExaltant, new LearnableSkill(CustomSkill.MeneurExaltant, "Meneur Exaltant", "Lorsque vous activez ce don, vos alliés dans un rayon de 3m bénéficient d'un nombre de points de vies temporaires égal à votre niveau + votre modificateur de Charisme\n- Une même créature ne peut pas être affectée deux fois par cet effet avant de prendre un repos court, même si l'effet provient d'une autre source\n- Cet effet se cumule avec d'autres sources de points de vie temporaires", Category.Feat, "ife_X1HDenier", 1, 5, Ability.Charisma, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AgressionOrc, new LearnableSkill(CustomSkill.AgressionOrc, "Agression", "Prérequis : Demi-Orc\n\nAction bonus\n\nVous sprintez vers votre cible pendant un round. Vous ne pouvez pas effectuer d'autre action ou changer de direction pendant ce round.", Category.Feat, "is_OrcFury", 1, 5, Ability.Strength, Ability.Constitution, LearnActivableFeat, racePrerequiste: new() { CustomRace.HalfOrc }));
      learnableDictionary.Add(CustomSkill.Determination, new LearnableSkill(CustomSkill.Determination, "Détermination", "Prérequis : Humain\n\nVous êtes empli d'une détermination telle que des hauteurs inatteignables pour d'autres sont à votre portée. Vous obtenez les effets ci-dessous\n- +1 a une caractéristique de votre choix\n- Une fois par repos court, vous pouvez choisir d'effectuer un jet avec avantage (principalement utilisable en animation pour le moment)", Category.Feat, "is_Determination", 1, 5, Ability.Constitution, Ability.Charisma, OnLearnDetermination, racePrerequiste: new() { CustomRace.Human }, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.Doue, new LearnableSkill(CustomSkill.Doue, "Doué", "L'apprentissage de la maîtrise de compétences est 50 % plus rapide", Category.Feat, "is_Doue", 1, 5, Ability.Intelligence, Ability.Wisdom, OnLearnDoue));
      learnableDictionary.Add(CustomSkill.MaitreDarme, new LearnableSkill(CustomSkill.MaitreDarme, "Maître d'armes", "- +1 Force ou Dextérité (max 20)\n- Vous obtenez les bases de la maîtrise de quatre armes simples ou martiales au choix\n- Vous apprenez à maîtriser les armes 50 % plus rapidement", Category.Feat, "is_MaitreDarme", 1, 5, Ability.Intelligence, Ability.Constitution, OnLearnMaitreDarme));
      learnableDictionary.Add(CustomSkill.PrecisionElfique, new LearnableSkill(CustomSkill.PrecisionElfique, "Précision elfique", "Prérequis : Elfe, Demi-Elfe\n\n- +1 Dextérité, Intelligence, Sagesse ou Charisme (max 20)\n- Lorsque vous avez un avantage sur un jet d'attaque utilisant la dextérité, l'intelligence, la sagesse ou le charisme, vous relancez le dé une fois de plus et prenez le meilleur résultat", Category.Feat, "is_ElvenAccuracy", 1, 5, Ability.Dexterity, Ability.Charisma, OnLearnPrecisionElfique, racePrerequiste: new() { CustomRace.Elf, CustomRace.HalfElf, CustomRace.WoodHalfElf, CustomRace.WoodElf, CustomRace.DrowHalfElf, CustomRace.Drow, CustomRace.HighHalfElf, CustomRace.HighElf }));
      learnableDictionary.Add(CustomSkill.SecondeChance, new LearnableSkill(CustomSkill.SecondeChance, "Seconde Chance", "Prérequis : Halfelin\n\nLa chance vous sourit lorsque quelqu'un tente de vous frapper. Vous bénéficiez des effets ci-dessous\n+1 Dextérité, Constitution ou Charisme (max 20)\n- Lorsqu'une créature vous inflige un coup critique, vous forcez cette créature à relancer son jet d'attaque\n\nVous ne pouvez utiliser cette capacité qu'une seule fois par combat (nécessite le lancer d'un nouveau jet d'initiative).", Category.Feat, "is_SecondChance", 1, 5, Ability.Charisma, Ability.Dexterity, OnLearnSecondeChance, racePrerequiste: new() { CustomRace.Halfling, CustomRace.LightfootHalfling, CustomRace.StrongheartHalfling }));
      learnableDictionary.Add(CustomSkill.ChanceDebordante, new LearnableSkill(CustomSkill.ChanceDebordante, "Chance Débordante", "Prérequis : Halfelin\n\nVotre chance naturelle s'étend bien au-delà de votre simple personne.\n\nSi n'importe quel allié à moins de 9 m de vous obtient un 1 naturel sur un d20, cet allié relance son dé.\n\nPendant un round, vous ne pouvez alors plus utiliser votre propre trait racial Chanceux et l'allié en question ne peut plus être affecté par Chance Débordante ou Chanceux, quelle qu'en soit la source.", Category.Feat, "is_BountifulLuck", 1, 5, Ability.Charisma, Ability.Dexterity, OnLearnChanceDebordante, racePrerequiste: new() { CustomRace.Halfling, CustomRace.LightfootHalfling, CustomRace.StrongheartHalfling }));
      learnableDictionary.Add(CustomSkill.Chanceux, new LearnableSkill(CustomSkill.Chanceux, "Chanceux", "Attention : Pour le moment, uniquement utilisable en animation\n\nVous avez une chance inexplicable qui tombe toujours au bon moment.\n\nVous avez 3 points de chance que vous pouvez dépenser pour bénéficier d'un avantage sur 3 jets que effectuez ou qui vous ciblent. \n\nVous pouvez choisir de dépenser ces points après avoir lancé le dé mais avant que son effet soit déterminé.\n\nSi plus d'une créature dépense un point de chance pour influencer le résultat d'un jet, les points s'annulent ; aucun dé supplémentaire n'est lancé.\n\nVous regagnez vos points de chance dépensés lorsque vous terminez un repos long.", Category.Feat, "is_Lucky", 1, 5, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.VigueurNaine, new LearnableSkill(CustomSkill.VigueurNaine, "Vigueur Naine", "Prérequis : Nain\n\nLe sang des héros nains coule dans vos veines. Vous bénéficiez des effets ci-dessous\n- +1 Constitution (max 20)\n- Lorsque vous utilisez l'action Esquiver en combat, vous dépensez un dé de vie (+ CON mod) pour vous soigner (minimum 1)\n- Les dés de vie correspondent aux dés utilisés par vos classes lors de la montée de niveau. Par exemple, si vous êtes Barbare 1, mage 4, vous disposez de 1d12 et 4d6 dés de vie\n- Ces dés sont tirés au hasard lorsque vous utilisez Vigueur Naine et ne peuvent plus être retirés une fois utilisés\n- Ces dés sont récupérés après chaque repos court", Category.Feat, "is_DwarfVigor", 1, 5, Ability.Constitution, Ability.Strength, OnLearnVigueurNaine, racePrerequiste: new() { CustomRace.Dwarf, CustomRace.GoldDwarf, CustomRace.ShieldDwarf, CustomRace.Duergar }, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.Healer, new LearnableSkill(CustomSkill.Healer, "Guérisseur", "Vous êtes un bon médecin. Vous obtenez les effets ci-dessous\n- Lorsque vous utilisez un objet de soin (kit, potion, etc) la créature ciblée regagne 1d6 + votre modificateur d'intelligence et de sagesse en points de vie supplémentaires", Category.Feat, "is_Healer", 1, 5, Ability.Intelligence, Ability.Wisdom));

      // RACES
      // HUMAN

      learnableDictionary.Add(CustomSkill.HumanVersatility, new LearnableSkill(CustomSkill.HumanVersatility, "Versatile", "Les humains sont caractérisé par leur rapidité à s'adapter à leur environnement. Ils bénéficient des avantages suivants:\n- Maîtrise d'une compétence supplémentaire\n- Capables de porter 25% de poids supplémentaire\n- Vitesse d'apprentissage doublée pour la première languée étudiée\n- Maîtrise des lances, des armures légères et des boucliers", Category.Race, "race_human", 1, 1, Ability.Constitution, Ability.Strength));

      // HIGHELF
      learnableDictionary.Add(CustomSkill.HighElfLanguage, new LearnableSkill(CustomSkill.HighElfLanguage, "Supérieurement cultivé", "Les haut-elfes apprennent leur première langue deux fois plus rapidement.", Category.Race, "race_highelf", 1, 1, Ability.Intelligence, Ability.Wisdom));

      // CLASSES
      // FIGHTER

      learnableDictionary.Add(CustomSkill.Fighter, new LearnableSkill(CustomSkill.Fighter, "Guerrier", "", Category.Class, "fighter", 3, 1, Ability.Strength, Ability.Dexterity, Fighter.LevelUp, "14508VWlYNEYcZoXhO4vUo81s4AHbUOgJ6Rjh9nt86Ys"));
      learnableDictionary.Add(CustomSkill.FighterSecondWind, new LearnableSkill(CustomSkill.FighterSecondWind, "Second Souffle", "Action bonus\nVous soigne de 1d10 + votre niveau de guerrier\nRécupération : repos court", Category.Fight, "ief_SecondWind", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.FighterCombatStyleArchery, new LearnableSkill(CustomSkill.FighterCombatStyleArchery, "Style de combat - Archerie", "Passif\nBonus d'attaque de +2 pour toutes les attaques effectuées avec une arme à distance.", Category.FightingStyle, "ief_Archery", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FighterCombatStyleDefense, new LearnableSkill(CustomSkill.FighterCombatStyleDefense, "Style de combat - Défense", "Passif\nBonus de +1 de CA tant que vous portez une armure.", Category.FightingStyle, "ief_Defense", 1, 1, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.FighterCombatStyleDuel, new LearnableSkill(CustomSkill.FighterCombatStyleDuel, "Style de combat - Duel", "Passif\nBonus de +2 dégâts lorsque vous utilisez une arme de mêlée à une main et que vous ne tenez pas d'arme dans votre autre main.\n\nNe fonctionne pas si vous utilisez une arme versatile en mode deux mains", Category.FightingStyle, "ief_Duel", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FighterCombatStyleTwoHanded, new LearnableSkill(CustomSkill.FighterCombatStyleTwoHanded, "Style de combat - Deux mains", "Passif\nSi vous faites un 1 ou un 2 sur un jet de dégâts pour une attaque effectuée avec une arme à deux mains, vous relancez ce jet.", Category.FightingStyle, "is_GreatWeapon", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FighterCombatStyleProtection, new LearnableSkill(CustomSkill.FighterCombatStyleProtection, "Style de combat - Protection", "Passif\nLorsque vous utilisez un bouclier, infligez un désavantage aux ennemis qui attaquent vos alliés situés à portée de mêlée.\n\nVous devez être en mesure de voir l'attaquant pour que l'effet s'applique.", Category.FightingStyle, "ief_Protection", 1, 1, Ability.Strength, Ability.Constitution, OnLearnProtectionStyle));
      learnableDictionary.Add(CustomSkill.FighterCombatStyleDualWield, new LearnableSkill(CustomSkill.FighterCombatStyleDualWield, "Style de combat - Deux armes", "Passif\nLorsque vous effectuez une attaque avec votre main secondaire, ajoutez votre modificateur de caractéristiques aux dégâts de l'attaque.", Category.FightingStyle, "ief_TwoWeapon", 1, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.FighterSurge, new LearnableSkill(CustomSkill.FighterSurge, "Fougue Martiale", "Action gratuite\nVous bénéficiez d'une attaque supplémentaire.\nDurée et cooldown : 10 rounds\nRécupération : repos court\n\nVous obtenez une seconde charge au niveau 17", Category.Fight, "ief_SecondWind", 1, 2, Ability.Constitution, Ability.Strength, LearnActivableFeat, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.FighterBonusAttack, new LearnableSkill(CustomSkill.FighterBonusAttack, "Guerrier - Attaque bonus", "Votre niveau de guerrier vous permet de bénéficier d'attaques supplémentaires aux niveaux 5, 11 et 20", Category.Fight, "is_ExtraAttack", 1, 3, Ability.Strength, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.FighterInflexible, new LearnableSkill(CustomSkill.FighterInflexible, "Inflexibilité", "Lorsque vous échouez un JDS, lancez un nouveau jet avec un malus de 2 (1 au niveau 13 et 0 au niveau 17)", Category.Fight, "is_Inflexible", 1, 3, Ability.Strength, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.FighterChampion, new LearnableSkill(CustomSkill.FighterChampion, "Champion", "", Category.FighterSubClass, "champion", 20, 1, Ability.Strength, Ability.Dexterity, Fighter.LevelUp, "1Qw48sfNLCHaHY0VFvhkfdkBPjkBqldUD3yBd9OVUelE"));
      learnableDictionary.Add(CustomSkill.FighterChampionBonusCombatStyle, new LearnableSkill(CustomSkill.FighterChampionBonusCombatStyle, "Champion - Style de combat supplémentaire", "Vous maîtrisez un style de combat supplémentaire", Category.Fight, "champion", 1, 1, Ability.Strength, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.FighterChampionImprovedCritical, new LearnableSkill(CustomSkill.FighterChampionImprovedCritical, "Champion - Coup Critique Supérieur", "Vous avez besoin d'un dé moins élevé pour porter des coups critiques (1 au level 3, 2 au level 15).\n\nStack avec les effets similaires", Category.Fight, "is_ImprovedCrit", 1, 2, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FighterChampionRemarkableAthlete, new LearnableSkill(CustomSkill.FighterChampionRemarkableAthlete, "Champion - Athlète accompli", "Vous ajoutez la moitié de votre bonus de maîtrise (arrondi supérieur) aux jets de STR, DEX, CON dont vous n'avez pas la maîtrise", Category.Fight, "is_RemarkAthlete", 1, 1, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FighterChampionUltimeSurvivant, new LearnableSkill(CustomSkill.FighterChampionUltimeSurvivant, "Champion - Ultime Survivant", "S'il vous reste moins de de la moitié de vos points de vie et que vous n'êtes pas KO, vous récupérez 5 + modificateur CON PV à chaque début de round", Category.Fight, "is_UltimSurvivor", 1, 2, Ability.Constitution, Ability.Strength));

      learnableDictionary.Add(CustomSkill.FighterArcaneArcher, new LearnableSkill(CustomSkill.FighterArcaneArcher, "Archer-Mage", "", Category.FighterSubClass, "IR_ARCHER", 20, 1, Ability.Dexterity, Ability.Strength, Fighter.LevelUp, "1vqEeNsEmg2VSjaoGN6ApmcbY7ALjEbxT9itTmeMedJA"));
      learnableDictionary.Add(CustomSkill.ArcaneArcherPrestidigitation, new LearnableSkill(CustomSkill.ArcaneArcherPrestidigitation, "Prestidigitation (Archer-Mage)", NwSpell.FromSpellId(CustomSpell.Prestidigitation).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Prestidigitation).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherDruidisme, new LearnableSkill(CustomSkill.ArcaneArcherDruidisme, "Druidisme (Archer-Mage)", NwSpell.FromSpellId(CustomSpell.Druidisme).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Druidisme).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirAffaiblissant, new LearnableSkill(CustomSkill.ArcaneArcherTirAffaiblissant, "Tir Affaiblissant", "Votre prochaine attaque avec un arc inflige +2d6 nécrotique (4d6 au niveau 18) et JDS CON ou divise par 2 les dégâts d'attaque de la cible pour un round\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirAffaib", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirAgrippant, new LearnableSkill(CustomSkill.ArcaneArcherTirAgrippant, "Tir Agrippant", "Votre prochaine attaque avec un arc inflige +2d6 poison (4d6 au niveau 18) et vitesse réduite de 30 %\nChaque round, si la cible s'est déplacée, elle subit 2d6 dégâts tranchants\n\nUn jet d'Athlétisme réussi permet de dissiper l'effet\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirAgrippant", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirBannissement, new LearnableSkill(CustomSkill.ArcaneArcherTirBannissement, "Tir de Bannissement", "Votre prochaine attaque avec un arc bannie la cible en Féerie pour un round en cas d'échec de son JDS de charisme. Elle ne peut ni agir ni se de déplacer\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirBanniss", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirChercheur, new LearnableSkill(CustomSkill.ArcaneArcherTirChercheur, "Tir Chercheur", "Sélectionner une cible. Dans la minute qui suit, vous pouvez réutiliser cette capacité pour envoyer une flèche à tête chercheuse sur la cible d'origine, où que celle-ci se trouve et inflige les dégâts normaux +1d6 (force) (+2d6 au niveau 18)\n\nAucun jet d'attaque n'est nécessaire, la cible doit réussir un JDS de dextérité pour ne subir que la moitié des dégâts\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirChercheur", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirOmbres, new LearnableSkill(CustomSkill.ArcaneArcherTirOmbres, "Tir des Ombres", "Votre prochaine attaque avec un arc inflige +2d6 psychique (4d6 au niveau 18). La cible doit réussir un JDS de sagesse ou être aveuglée pendant 1 round\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirDesOmbres", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirEnvoutant, new LearnableSkill(CustomSkill.ArcaneArcherTirEnvoutant, "Tir Envoûtant", "Votre prochaine attaque avec un arc inflige +2d6 psychique (4d6 au niveau 18). La cible doit réussir un JDS de sagesse ou être charmée pendant 1 round. Le charme se dissipe si vous effectuer une action hostile contre la cible\n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirEnvoutant", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirExplosif, new LearnableSkill(CustomSkill.ArcaneArcherTirExplosif, "Tir Explosif", "Votre prochaine attaque avec un arc provoque une explosion (+2d6 force, 4d6 au niveau 18) d'un rayon de 3 mètres\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirExplosif", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirPerforant, new LearnableSkill(CustomSkill.ArcaneArcherTirPerforant, "Tir Perforant", "+1d6 perforant (2d6 au niveau 18)\nVous tirez une flèche éthérée en ligne droite. Celle-ci traverse les objets sans les affecter. Les créatures traversées doivent réussir un JDS dextérité pour ne subir que la moitié des dégâts\n\nZone d'effet : 30 cm de largeur, 9 m de longueur \n\nDD 8 + maîtrise + Modificateur d'intelligence\n\n2 utilisations par repos court", Category.TirArcanique, "is_TirPerforant", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneArcherTirIncurve, new LearnableSkill(CustomSkill.ArcaneArcherTirIncurve, "Tir Incurvé", "Action Bonus\n\nLorsque vous manquez votre cible, vous relancez automatiquement le jet d'attaque contre une autre cible située à moins de 18 m", Category.Fight, "is_TirPerforant", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.FighterWarMaster, new LearnableSkill(CustomSkill.FighterWarMaster, "Maître de guerre", "", Category.FighterSubClass, "warmaster", 20, 1, Ability.Strength, Ability.Dexterity, Fighter.LevelUp, "1f5Hx-Yt0kRTVj4RrbMv0K225hfdzIZeg4qqpHiWIEts"));
      learnableDictionary.Add(CustomSkill.WarMasterAttaqueMenacante, new LearnableSkill(CustomSkill.WarMasterAttaqueMenacante, "Attaque Menaçante", "La prochaine attaque qui touche votre cible ajoute un dé de supériorité aux dégâts et effraie la cible pour un round si celle-ci échoue un JDS de sagesse.\nDD : 8 + bonus de maîtrise + modificateur de force ou dextérité (en fonction du plus élevé)\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_MenacingAtta", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterAttaquePrecise, new LearnableSkill(CustomSkill.WarMasterAttaquePrecise, "Attaque Précise", "Vous ajoutez un dé de supériorité à la prochaine attaque que vous échouez, vous donnant une seconde chance de la réussir\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_PrecisionAtt", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterBalayage, new LearnableSkill(CustomSkill.WarMasterBalayage, "Balayage", "La prochaine attaque qui touche votre cible vous permet d'effectuer une nouvelle attaque gratuite sur une autre cible à portée de mêlée en échange d'un dé de supériorité\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Balayage", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterRenversement, new LearnableSkill(CustomSkill.WarMasterRenversement, "Renversement", "Votre prochaine attaque qui touche une cible d'une catégorie ou moins de taille supérieure à la votre provoque un JDS de force en échange d'un dé de supériorité. Si la cible échoue, elle est renversée. Dé ajouté aux dégâts\nDD : 8 + bonus de maîtrise + modificateur de force ou dextérité (en fonction du plus élevé)\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Renversement", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterDesarmement, new LearnableSkill(CustomSkill.WarMasterDesarmement, "Désarmement", "Votre prochaine attaque qui touche votre cible provoque un JDS de force. Si la cible échoue, son arme est rangée dans son inventaire et elle ne peut pas équiper de nouvelle arme avant le prochain round. Dé ajouté aux dégâts\nDD : 8 + bonus de maîtrise + modificateur de force ou dextérité (en fonction du plus élevé)\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Disarm", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterDiversion, new LearnableSkill(CustomSkill.WarMasterDiversion, "Diversion", "Votre prochaine attaque qui touche votre cible permet aux alliés d'effectuer leur  prochaine attaque contre cette cible avec un avantage. L'effet expire après 1 round. Dé ajouté aux dégâts\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Diversion", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterFeinte, new LearnableSkill(CustomSkill.WarMasterFeinte, "Feinte", "Votre prochaine attaque utilise votre action bonus afin d'être portée avec avantage. Dé ajouté aux dégâts\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Feinte", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterInstruction, new LearnableSkill(CustomSkill.WarMasterInstruction, "Instruction", "Vous utilisez votre action bonus pour donner une attaque supplémentaire à l'allié ciblé au prochain round qui consomme sa réaction. En échange, vous disposerez d'une attaque de moins au prochain round. Dé ajouté aux dégâts de l'allié\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Instruction", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterJeuDeJambe, new LearnableSkill(CustomSkill.WarMasterJeuDeJambe, "Jeu de Jambe", "Pendant un round, toutes les attaques de mêlée portées contre vous ont un désavantage\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Footwork", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterManoeuvreTactique, new LearnableSkill(CustomSkill.WarMasterManoeuvreTactique, "Manoeuvre Tactique", "Pendant un round, la vitesse de déplacement de l'allié ciblé augmente de 50 %. Celui-ci ne provoque pas d'attaque d'opportunité\n\nVous ajoutez votre dé de supériorité aux dégâts de votre prochaine attaque.\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_TacticMan", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterParade, new LearnableSkill(CustomSkill.WarMasterParade, "Parade", "Lorsque cette manoeuvre est active, si une attaque de mêlée vous touche, vous utilisez un dé de supériorité et votre réaction pour réduire les dégâts d'un montant égal au résultat du dé + votre modificateur de dextérité \n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "ife_impparry", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterProvocation, new LearnableSkill(CustomSkill.WarMasterProvocation, "Provocation", "Votre prochaine attaque qui touche votre cible la force à effectuer ses prochaines contre toute autre cible que vous avec désavantage si elle échoue un JDS de sagesse. Dure un round. Dé de supériorité ajouté aux dégâts\nDD : 8 + bonus de maîtrise + modificateur de force ou dextérité (en fonction du plus élevé)\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "warmaster", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterRalliement, new LearnableSkill(CustomSkill.WarMasterRalliement, "Ralliement", "Action bonus\nL'allié ciblé, gagne le résultat du dé de supériorité + votre modificateur de charisme en points de vie temporaires. Portée : 18m\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Rally", 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterRiposte, new LearnableSkill(CustomSkill.WarMasterRiposte, "Riposte", "La prochaine fois qu'un adversaire rate une attaque de mêlée contre vous, vous utilisez votre réaction et un dé de supériorité pour déclencher une attaque supplémentaire contre cette créature. Si vous touchez, ajoutez le dé aux dégâts\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Riposte", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterEvaluationTactique, new LearnableSkill(CustomSkill.WarMasterEvaluationTactique, "Evalution Tactique", "Lorsque vous effectuez un jet d'Investigation, d'Histoire ou d'Intuition, vous pouvez dépenser un dé de supériorité pour l'ajouter au résultat du jet.\n\nDé de supériorité : +1d8 (1d10 au level 10, 1d12 au level 18)\n\nVous disposez de 4 dés par repos court (5 au level 7, 6 au level 15)", Category.Manoeuvre, "is_Observation", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.WarMasterObservation, new LearnableSkill(CustomSkill.WarMasterObservation, "Observation", "Sens de l'observation : Lorsque vous n'êtes pas engagé en combat, vous pouvez effectuer un jet de perception (VS furtivité) pour obtenir une information sur la créature que vous observez. En cas de réussite, vous pourrez déterminer si la cible a plus ou moins que vous des caractéristiques suivantes :\n-Force\n-Dextérité\n-Constitution\n-CA\n-Points de vie actuels\n-Niveau d'une de vos classes", Category.Fight, "ife_X1HDenier", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Barbarian, new LearnableSkill(CustomSkill.Barbarian, "Barbare", "", Category.Class, "barbarian", 3, 1, Ability.Strength, Ability.Constitution, Barbarian.LevelUp, "1fz5tHKt-49jRze5YM6MyVTmCo_K1PDlRMyJgs5Hr5yc"));
      learnableDictionary.Add(CustomSkill.BarbarianUnarmoredDefence, new LearnableSkill(CustomSkill.BarbarianUnarmoredDefence, "Défense sans armure", "Si vous ne portez pas d'armure, ajoute votre bonus de constitution (si positif) en tant que bonus d'armure", Category.Fight, "is_UnarmoredDef", 1, 1, Ability.Constitution, Ability.Strength, OnLearnUnarmoredDefence));
      learnableDictionary.Add(CustomSkill.BarbarianRage, new LearnableSkill(CustomSkill.BarbarianRage, "Rage", NwSpell.FromSpellType(Spell.AbilityBarbarianRage).Description.ToString(), Category.Fight, NwSpell.FromSpellType(Spell.AbilityBarbarianRage).IconResRef, 1, 1, Ability.Strength, Ability.Constitution, OnLearnBarbarianRage));
      learnableDictionary.Add(CustomSkill.BarbarianRecklessAttack, new LearnableSkill(CustomSkill.BarbarianRecklessAttack, "Frappe Téméraire", "Pour un round, vous avez l'avantage sur vos jets d'attaques effectués avec une arme de mêlée, mais vos adversaires ont également l'avantage sur toutes leurs attaques qui vous ciblent", Category.Fight, "is_RecklessAttac", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BarbarianBonusAttack, new LearnableSkill(CustomSkill.BarbarianBonusAttack, "Barbare - Attaque bonus", "Votre niveau de barbare vous permet de bénéficier d'une attaque supplémentaire au niveau 5", Category.Fight, "is_ExtraAttack", 1, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.BarbarianFastMovement, new LearnableSkill(CustomSkill.BarbarianFastMovement, "Déplacement Rapide", "Votre niveau de barbare vous permet de bénéficier de vous déplacer 30 % plus rapidement", Category.Fight, "ife_barbend", 1, 1, Ability.Constitution, Ability.Strength, OnLearnBarbarianFastMovement));
      learnableDictionary.Add(CustomSkill.BarbarianInstinctSauvage, new LearnableSkill(CustomSkill.BarbarianInstinctSauvage, "Instinct Sauvage", "Vous conservez votre bonus de dextérité à la CA même pris au dépourvu.\n\nVous ne subissez plus de malus lorsque vous êtes pris en tenaille\n\nLorsque vous êtes surpris, vous pouvez entrer en rage afin d'agir normalement", Category.Fight, "ife_uncdodge", 1, 1, Ability.Constitution, Ability.Dexterity, OnLearnInstinctSauvage));
      learnableDictionary.Add(CustomSkill.BarbarianCritiqueBrutal, new LearnableSkill(CustomSkill.BarbarianCritiqueBrutal, "Critique Brutal", "Ajoute un dé de dégât supplémentaire aux coups critiques portés avec une arme de mêlée (2 dés au level  13, 3 dés au level 17)", Category.Fight, "is_BrutalCritical", 1, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.BarbarianRageImplacable, new LearnableSkill(CustomSkill.BarbarianRageImplacable, "Rage Implacable", "Tant que vous êtes en rage, si vous tombez à 0 PV, vous lancez un JDS de constitution DD 10.\n\nEn cas de réussite, vous récupérez 1 PV et le DD du prochain jet augmente de 5.\n\nLe DD est réinitialisé à 10 après un repos court", Category.Fight, "is_RelentlesRage", 1, 1, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.BarbarianRagePersistante, new LearnableSkill(CustomSkill.BarbarianRagePersistante, "Rage Persistante", "Votre Rage ne s'interrompt prématurément que si vous êtes mis KO", Category.Fight, "is_RagePersist", 1, 1, Ability.Constitution, Ability.Strength));
      learnableDictionary.Add(CustomSkill.BarbarianPuissanceIndomptable, new LearnableSkill(CustomSkill.BarbarianPuissanceIndomptable, "Puissance Indomptable", "Si le résultat d'un de vos jets de force est inférieur à la valeur de votre force, vous utilisez votre valeur de force à la place", Category.Fight, "is_IndomMight", 1, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.BarbarianChampionPrimitif, new LearnableSkill(CustomSkill.BarbarianChampionPrimitif, "Champion Primitif", "Force et Constitution +4. Vos valeurs maximum dans ces caractéristiques est désormais de 24", Category.Fight, "is_ChampPrimitif", 1, 1, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.BarbarianBerseker, new LearnableSkill(CustomSkill.BarbarianBerseker, "Berserker", "", Category.BarbarianSubClass, "berseker", 20, 1, Ability.Strength, Ability.Constitution, Barbarian.LevelUp, "19vKrKk6syyslazraiEOjTqzGErEuTVFnZnOU8U4f7KI"));
      learnableDictionary.Add(CustomSkill.BersekerFrenziedStrike, new LearnableSkill(CustomSkill.BersekerFrenziedStrike, "Frappe Frénétique", "Action bonus utilisable sous l'effet de rage : inflige une attaque supplémentaire à votre cible actuelle si vous êtes équipé d'une arme de mêlée\n\nChaque utilisation ajoute un malus cumulatif de 1 au jet d'attaque\n\nLe malus prend fin en même temps que votre rage", Category.Fight, "is_FrenzyStrike", 1, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.BersekerRageAveugle, new LearnableSkill(CustomSkill.BersekerRageAveugle, "Rage Aveugle", "Sous l'effet de Rage, vous ne pouvez plus être charmé, effrayé ou terrorisé\n\nCalm Emotions ne met plus fin à Rage\n\nDissipe les effets de charme, de peur et de terreur que vous subissez", Category.Fight, "is_MindlessRage", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BersekerRepresailles, new LearnableSkill(CustomSkill.BersekerRepresailles, "Représailles", "Une fois par round, lorsque vous subissez des dégâts de la part d'une créature que vous pouvez atteindre avec une arme de mêlée, vous effectuez une attaque gratuite contre cette créature", Category.Fight, "is_Represailles", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BersekerPresenceIntimidante, new LearnableSkill(CustomSkill.BersekerPresenceIntimidante, "Présence Intimidante", "Aura de 9m\n\nToutes les créatures hostiles qui se trouvent dans l'aura doivent effectuer un JDS volonté ou être effrayées\n\nDD : 8 + bonus de maîtrise + modificateur de charisme\n\nLes créatures qui réussissent leur jet ne peuvent plus subir cet effet avant leur prochain repos long\n\nDurée de l'effet : 1 round. Les créatures effrayées qui se trouvent dans l'aura doivent réussir un nouveau jet ou voir l'effet être renouvelé", Category.Fight, "is_Intimidating", 1, 1, Ability.Strength, Ability.Charisma, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.BarbarianTotem, new LearnableSkill(CustomSkill.BarbarianTotem, "Totem", "", Category.BarbarianSubClass, "totem", 20, 1, Ability.Strength, Ability.Constitution, Barbarian.LevelUp, "1zMgiYOS_r39s-uv0A3bAK4582Srv8Dn00WPbayF8lTo"));
      learnableDictionary.Add(CustomSkill.TotemSpeakAnimal, new LearnableSkill(CustomSkill.TotemSpeakAnimal, "Communication Animale (Voie du Totem)", NwSpell.FromSpellId(CustomSpell.SpeakAnimal).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.SpeakAnimal).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemSensAnimal, new LearnableSkill(CustomSkill.TotemSensAnimal, "Sens Animal (Voie du Totem)", NwSpell.FromSpellId(CustomSpell.SpeakAnimal).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.SpeakAnimal).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemEspritOurs, new LearnableSkill(CustomSkill.TotemEspritOurs, "Esprit de l'Ours", "Sous rage, vous bénéficiez d'une résistance à tous les dégâts, sauf psychiques. Une fois par rage, vous pouvez utiliser Férocité Indomptable pour vous soigner de 1d8 + modificateur de Constitution", Category.EspritTotem, "is_BearTotem", 1, 1, Ability.Constitution, Ability.Strength, OnLearnTotemEspritOurs));
      learnableDictionary.Add(CustomSkill.TotemEspritAigle, new LearnableSkill(CustomSkill.TotemEspritAigle, "Esprit de l'Aigle", "Sous rage, vous pouvez utiliser Sprint comme une action bonus, les attaques d'opportunités qui vous ciblent ont un désavantage et vous vous déplacez 25 % plus rapidement", Category.EspritTotem, "is_EagleTotem", 1, 1, Ability.Dexterity, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemEspritElan, new LearnableSkill(CustomSkill.TotemEspritElan, "Esprit de l'Elan", "Sous rage, votre vitesse de déplacement augmente de 50%", Category.EspritTotem, "is_ElkTotem", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemEspritLoup, new LearnableSkill(CustomSkill.TotemEspritLoup, "Esprit du Loup", "Sous  rage, vos alliés à moins de 2m bénéficient d'un avantage sur leurs attaques de mêlée. Vous pouvez utiliser l'action Hurlement Galvanisant afin d'augmenter la vitesse de déplacement de vos alliés de 30 % pour un round", Category.EspritTotem, "is_WolfTotem", 1, 1, Ability.Strength, Ability.Dexterity, OnLearnTotemEspritLoup));
      
      learnableDictionary.Add(CustomSkill.TotemAspectOurs, new LearnableSkill(CustomSkill.TotemAspectOurs, "Aspect de l'Ours", "Double le poids que vous pouvez porter et votre capacité à soulever des objets et donne l'avantage sur les jets de force", Category.AspectTotem, "is_BearAspect", 1, 1, Ability.Constitution, Ability.Strength, OnLearnTotemAspectOurs));
      learnableDictionary.Add(CustomSkill.TotemAspectAigle, new LearnableSkill(CustomSkill.TotemAspectAigle, "Aspect de l'Aigle", "Vision dans le noir 12m. Avantage sur les jets de perception et vous pouvez distinguer les plus fins détails jusqu'à 1,5 km de distance", Category.AspectTotem, "is_EagleAspect", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemAspectLoup, new LearnableSkill(CustomSkill.TotemAspectLoup, "Aspect du Loup", "Vous maîtrisez la compétence Furtivité. Vous et vos alliés à moins de 18 m ajoutez votre modificateur de dextérité aux jets de furtivité", Category.AspectTotem, "is_WolfAspect", 1, 1, Ability.Dexterity, Ability.Strength, OnLearnTotemAspectLoup));
      learnableDictionary.Add(CustomSkill.TotemAspectElan, new LearnableSkill(CustomSkill.TotemAspectElan, "Aspect de l'Elan", "Vous et vos alliés à moins de 18 m vous déplacez 10% plus rapidement", Category.AspectTotem, "is_ElkAspect", 1, 1, Ability.Strength, Ability.Constitution, OnLearnTotemAspectElan));
      learnableDictionary.Add(CustomSkill.TotemAspectCrocodile, new LearnableSkill(CustomSkill.TotemAspectCrocodile, "Aspect du Crocodile", "Dans l'eau, vous vous déplacez 30 % plus vite. Vous avez l'avantage sur les jets de sauvegarde contre le renversement", Category.AspectTotem, "is_CrocoAspect", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemAspectRatel, new LearnableSkill(CustomSkill.TotemAspectRatel, "Aspect du Ratel", "Si vous êtes empoisonné, effrayé, ou sous un effet mental, 50% chance de ne pas consommer de charge lorsque vous entrez en rage", Category.AspectTotem, "is_RatelAspect", 1, 1, Ability.Strength, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemAspectEtalon, new LearnableSkill(CustomSkill.TotemAspectEtalon, "Aspect de l'Etalon", "Sprinter vous donne deux fois votre niveau de barbare en points de vie temporaires", Category.AspectTotem, "is_EtalonAspect", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemAspectTigre, new LearnableSkill(CustomSkill.TotemAspectTigre, "Aspect du Tigre", "En rage, avec une arme de mêlée, vous pouvez utiliser Soif du Tigre afin d'effectuer une attaque supplémentaire sur un autre ennemi que votre cible actuelle. Cette double attaque inflige les trois-quarts de vos dégâts habituels ainsi que le saignement \n\nSaignement : 2 dégâts tranchants par round, dure 2 rounds, inflige désavantage aux JDS CON, effet retiré par les soins", Category.AspectTotem, "is_TigerAspect", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemAspectGlouton, new LearnableSkill(CustomSkill.TotemAspectGlouton, "Aspect du Glouton", "Les cibles subissant saignement ou empoisonnement sur lesquelles vous parvenez à porter une attaque de mêlée sont immobilisées pour un round", Category.AspectTotem, "is_GloutonAspect", 1, 1, Ability.Constitution, Ability.Strength, OnLearnTotemAspectGlouton));

      learnableDictionary.Add(CustomSkill.TotemCommunionAvecLaNature, new LearnableSkill(CustomSkill.TotemCommunionAvecLaNature, "Communion avec la nature (Voie du Totem)", NwSpell.FromSpellId(CustomSpell.CommunionAvecLaNature).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.CommunionAvecLaNature).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.TotemLienLoup, new LearnableSkill(CustomSkill.TotemLienLoup, "Lien du Loup", "En rage, lorsque vous touchez une créature de taille G ou inférieure avec une arme de mêlée, vous utilisez automatiquement votre action bonus (si disponible) pour la renverser pendant 2 rounds", Category.LienTotem, "is_WolfLink", 1, 1, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemLienElan, new LearnableSkill(CustomSkill.TotemLienElan, "Lien de l'Elan", "En rage, vous pouvez utiliser Ruée Primitive afin de foncer en ligne droite sur 9m. Toutes les créatures rencontrées doivent réussir un JDS FOR (DD 8 + modificateur FOR + bonus de maîtrise) ou subir 1d12 dégâts contondants + MOD FOR et être renversées pour 2 rounds. Ne provoque pas d'attaque d'opportunité", Category.LienTotem, "is_ElkLink", 1, 1, Ability.Strength, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TotemLienTigre, new LearnableSkill(CustomSkill.TotemLienTigre, "Lien du Tigre", "Double votre modificateur de force sur les attaques portées contre des ennemis subissant un saignement ou de poison (pas sur les dégâts). Vous maîtrisez une compétence au choix parmi : Athlétisme, Acrobatie, Furtivité, Survie", Category.LienTotem, "is_TigreLink", 1, 1, Ability.Strength, Ability.Constitution, OnLearnTotemLienTigre));
      learnableDictionary.Add(CustomSkill.TotemLienOurs, new LearnableSkill(CustomSkill.TotemLienOurs, "Lien de l'Ours", "En rage, les créatures hostiles à portée de mêlée ont un désavantage sur leurs jets d'attaque si elles ciblent un autre créature que vous. Les ennemis qui ne peuvent pas vous voir, vous entendre ou être effrayés sont immunisés", Category.LienTotem, "is_BearLink", 1, 1, Ability.Constitution, Ability.Strength, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.BarbarianWildMagic, new LearnableSkill(CustomSkill.BarbarianWildMagic, "Magie Sauvage", "", Category.BarbarianSubClass, "wildmagic", 20, 1, Ability.Strength, Ability.Constitution, Barbarian.LevelUp, "1RBe7LTYRb-s8J1D91oHMOOZD5MrOiOdPiDH9hCsS2MA"));
      learnableDictionary.Add(CustomSkill.WildMagicSense, new LearnableSkill(CustomSkill.WildMagicSense, "Sens de la magie", "Action bonus\nPendant 1 round, vous déployez une aura de 3 m qui vous permet ainsi qu'à vos alliés d'ajouter leur bonus de maîtrises aux JDS contre les sorts\n\nVous pouvez alors sentir la présence de tout effet magique non dissimulé qui se situe à moins de 30 m et en deviner l'école d'origine\n\nUtilisable un nombre de fois égal à votre bonus de maîtrise par repos long", Category.Magic, "is_MagicAware", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnWildMagicSensDeLaMagie));
      learnableDictionary.Add(CustomSkill.WildMagicTeleportation, new LearnableSkill(CustomSkill.WildMagicTeleportation, "Téléportation (voie de la magie sauvage)", "Action bonus\n\nVous pouvez vous téléporter jusqu'à une distance de 18m sur un espace inoccupé sur lequel vous disposez d'une ligne de vue", Category.Magic, "is_MagicTeleport", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnWildMagicTeleportation));
      learnableDictionary.Add(CustomSkill.WildMagicMagieGalvanisanteBienfait, new LearnableSkill(CustomSkill.WildMagicMagieGalvanisanteBienfait, "Magie Galvanisante - Bienfait", "Pendant 10 rounds, +1d4 aux jets d'attaques et de caractéristiques de la cible. Non cumulable", Category.Magic, "is_MagicBoon", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnWildMagicBienfait));
      learnableDictionary.Add(CustomSkill.WildMagicMagieGalvanisanteRecuperation, new LearnableSkill(CustomSkill.WildMagicMagieGalvanisanteRecuperation, "Magie Galvanisante - Récupération", "Pendant 10 rounds, +1d4 aux jets d'attaques et de caractéristiques de la cible. Non cumulable", Category.Magic, "is_MagicRecup", 1, 1, Ability.Constitution, Ability.Wisdom, OnLearnWildMagicRecuperation));

      learnableDictionary.Add(CustomSkill.Rogue, new LearnableSkill(CustomSkill.Rogue, "Roublard", "", Category.Class, "rogue", 3, 1, Ability.Dexterity, Ability.Intelligence, Rogue.LevelUp, "1tppeF4hJsDjOmL9HBo4FOJfcJYKmeEngkTTk6OapSHQ"));
      learnableDictionary.Add(CustomSkill.RogueThief, new LearnableSkill(CustomSkill.RogueThief, "Voleur", "", Category.RogueSubClass, "thief", 20, 1, Ability.Dexterity, Ability.Intelligence, Rogue.LevelUp, "1X5nCJFGForGD5hRHuMEOG-a6MutROrkupp4lYFEwF8w"));
      learnableDictionary.Add(CustomSkill.RogueConspirateur, new LearnableSkill(CustomSkill.RogueConspirateur, "Conspirateur", "", Category.RogueSubClass, "conspirateur", 20, 1, Ability.Intelligence, Ability.Dexterity, Rogue.LevelUp, "1ePqbUdzMRBANxrZ9og3hMHV-9XDSJl-Em9hHU_56YBY"));
      learnableDictionary.Add(CustomSkill.RogueAssassin, new LearnableSkill(CustomSkill.RogueAssassin, "Assassin", "", Category.RogueSubClass, "assassin", 20, 1, Ability.Dexterity, Ability.Intelligence, Rogue.LevelUp, "1cVn8KNYkU3gB8KJCu2Q_Qivh2t8LCKEWyAPKZXE-v4g"));

      learnableDictionary.Add(CustomSkill.ThiefDiscretionSupreme, new LearnableSkill(CustomSkill.ThiefDiscretionSupreme, "Voleur - Discrétion Suprême", "Vos jets de Furtivité ont l'avantage\n\nVous pouvez utiliser le sort invisibilité une fois par repos court", Category.Fight, "is_ThiefReflex", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat, restoreOnShortRest:true));
      learnableDictionary.Add(CustomSkill.ThiefReflex, new LearnableSkill(CustomSkill.ThiefReflex, "Voleur - Réflexes", "Lors de votre premier round de combat, vous bénéficiez d'une attaque supplémentaire", Category.Fight, "is_ThiefReflex", 1, 1, Ability.Dexterity, Ability.Intelligence, OnLearnThiefReflex));

      learnableDictionary.Add(CustomSkill.ConspirateurMaitriseTactique, new LearnableSkill(CustomSkill.ConspirateurMaitriseTactique, "Maîtrise Tactique", "Vous pouvez utiliser votre action bonus pour donner l'avantage à un allié sur sa prochaine attaque (Portée 9m)", Category.Fight, "is_TacticalCon", 1, 1, Ability.Intelligence, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ConspirateurRedirection, new LearnableSkill(CustomSkill.ConspirateurRedirection, "Redirection", "Vous utilisez automatiquement votre réaction pour rediriger la première attaque portée contre vous vers un autre ennemi à votre contact au hasard", Category.Fight, "is_Redirect", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.AssassinAssassinate, new LearnableSkill(CustomSkill.AssassinAssassinate, "Assassinat", "Lors de votre premier round de combat, vous avez l'avantage sur vos attaques tant que vous n'avez pas subit de dégât\nLors de votre premier round, toutes vos attaques réussies sont des coups critiques tant que vous n'avez pas subit de dégât", Category.Fight, "is_Assassinate", 1, 1, Ability.Dexterity, Ability.Intelligence, OnLearnAssassinate));

      learnableDictionary.Add(CustomSkill.Monk, new LearnableSkill(CustomSkill.Monk, "Moine", "", Category.Class, "monk", 3, 1, Ability.Dexterity, Ability.Strength, Monk.LevelUp, "1S89vtFohS-YuCDsdMLaoOd3RFpbCtB4zoRGnoi_Tl4I"));
      learnableDictionary.Add(CustomSkill.MonkUnarmoredDefence, new LearnableSkill(CustomSkill.MonkUnarmoredDefence, "Défense sans armure", "Si vous ne portez pas d'armure ni de bouclier, ajoutez votre bonus de sagesse (si positif) en tant que bonus d'armure\n\nNOTE : Ne se stack pas avec l'équivalent barbare", Category.Fight, "is_UnarmoredDef", 1, 1, Ability.Constitution, Ability.Strength, OnLearnMonkUnarmoredDefence));
      learnableDictionary.Add(CustomSkill.MonkBonusAttack, new LearnableSkill(CustomSkill.MonkBonusAttack, "Art Martial", "A mains nues ou avec une arme de moine, vous pouvez utiliser votre action bonus afin d'effectuer une attaque à main nue supplémentaire", Category.Fight, "is_MonkBonusAtt", 1, 1, Ability.Dexterity, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkPatience, new LearnableSkill(CustomSkill.MonkPatience, "Patience", "Action bonus\n\nDésavantage sur les attaques qui vous ciblent\n\nVous avez l'avantage sur les JDS de dextérité\n\nDurée : 1 round\nCoût : 1 ki", Category.Ki, "is_PatientDef", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkDelugeDeCoups, new LearnableSkill(CustomSkill.MonkDelugeDeCoups, "Déluge de coups", "Action bonus\n\nVotre prochaine attaque vous permet d'enchaîner deux attaques à mains nues supplémentaires\nCoût : 1 ki", Category.Ki, "is_FlurryOfBlows", 1, 1, Ability.Dexterity, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkUnarmoredSpeed, new LearnableSkill(CustomSkill.MonkUnarmoredSpeed, "Célérité sans armure", "Tant que vous n'avez ni armure ni bouclier équipé, vous vous déplacez 30 % plus rapidement", Category.Fight, "is_MonkSpeed", 1, 1, Ability.Dexterity, Ability.Wisdom, OnLearnUnarmoredSpeed));
      learnableDictionary.Add(CustomSkill.MonkSlowFall, new LearnableSkill(CustomSkill.MonkSlowFall, "Chute contrôlée", "Vous pouvez utiliser votre réaction lorsque vous tombez afin de réduire les dégâts de chute d'un montant égal 5 fois votre niveau de moine", Category.Fight, "is_SlowFall", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkStunStrike, new LearnableSkill(CustomSkill.MonkStunStrike, "Frappe étourdissante", "Si votre cible rate un JDS de constitution, votre prochaine attaque de mêlée l'étourdit.\nDD 8 +  bonus de maîtrise + modificateur de sagesse\nDurée : 1 round\nCoût : 1 ki", Category.Ki, "is_StunStrike", 1, 1, Ability.Dexterity, Ability.Strength, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkSerenity, new LearnableSkill(CustomSkill.MonkSerenity, "Sérénité", "Met fin à un effet de charme ou de peur qui vous affecte", Category.Fight, "is_Serenity", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkDiamondSoul, new LearnableSkill(CustomSkill.MonkDiamondSoul, "Âme de diamant", "Tant que âme de diamant est activé, si vous échouez un jet de sauvegarde, vous dépensez un point de ki et le relancez. Le nouveau résultat est conservé.", Category.Fight, "is_DiamondSoul", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkDesertion, new LearnableSkill(CustomSkill.MonkDesertion, "Désertion de l'âme", "Vous devenez invisible et êtes résistant à tous les types de dégâts à l'exception de ceux de force\nDurée : 1 minutes\nCoût : 4 ki", Category.Ki, "ife_emptybod", 1, 1, Ability.Wisdom, Ability.Constitution, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.MonkPaume, new LearnableSkill(CustomSkill.MonkPaume, "Voie de la Paume", "", Category.MonkSubClass, "monk_paume", 20, 1, Ability.Dexterity, Ability.Strength, Monk.LevelUp, "1ZZkR07V6l2q5s9HGQ2cd8uLhfMS5NLSynd9d1aqLuTo"));
      learnableDictionary.Add(CustomSkill.MonkPaumeTechnique, new LearnableSkill(CustomSkill.MonkPaumeTechnique, "Technique de la Paume", "Les attaques portées avec Déluge de coups infligent renversement si la cible échoue un JDS de force ou de dextérité", Category.Fight, "is_PaumeKD", 1, 1, Ability.Dexterity, Ability.Strength));
      learnableDictionary.Add(CustomSkill.MonkPlenitude, new LearnableSkill(CustomSkill.MonkPlenitude, "Plénitude", "Vous récupérez trois fois votre niveau de moine en points de vie", Category.Fight, "is_Plenitude", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkManifestationAme, new LearnableSkill(CustomSkill.MonkManifestationAme, "Manifestation de l'âme", "Vos attaques à mains nues infligent +1d4 + modificateur de sagesse dégâts radiants", Category.Fight, "is_ManifSoul", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkManifestationCorps, new LearnableSkill(CustomSkill.MonkManifestationCorps, "Manifestation du corps", "Vos attaques à mains nues infligent +1d4 + modificateur de sagesse dégâts nécrotiques", Category.Fight, "is_ManifBody", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkManifestationEsprit, new LearnableSkill(CustomSkill.MonkManifestationEsprit, "Manifestation de l'esprit", "Vos attaques à mains nues infligent +1d4 + modificateur de sagesse dégâts psychiques", Category.Fight, "is_ManifMind", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkResonanceKi, new LearnableSkill(CustomSkill.MonkResonanceKi, "Résonance du Ki", "Action bonus\n\nVous portez une attaque à mains nues supplémentaire. Si celle-ci touche, elle fait entrer le ki de la cible en résonance pour 1 round", Category.Fight, "is_ResonanceKi", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkExplosionKi, new LearnableSkill(CustomSkill.MonkExplosionKi, "Explosion Ki", "Les créatures en résonance avec vous et à moins de 18 m déclenchent une explosion de 5 m et de 3d6 dégâts de force. Si elles réussissent un JDS de dextérité, elles n'en subissent que la moitié\nCoût : 1 Ki", Category.Ki, "is_ExplosionKi", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkPaumeVibratoire, new LearnableSkill(CustomSkill.MonkPaumeVibratoire, "Paume Vibratoire", "La prochaine attaque à mains nues réussie fait tomber la cible à 0 PV. Si elle réussit un JDS de constitution, elle subit 10d10 dégâts nécrotiques à la place\nCoût : 3 Ki", Category.Ki, "is_PaumeVib", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.MonkOmbre, new LearnableSkill(CustomSkill.MonkOmbre, "Voie de l'Ombre", "", Category.MonkSubClass, "monk_shadow", 20, 1, Ability.Dexterity, Ability.Strength, Monk.LevelUp, "102uzVDKTvDTh1hyLBvIZvedh0vAE4QPVEa07MG2aouU"));
      learnableDictionary.Add(CustomSkill.MonkTenebres, new LearnableSkill(CustomSkill.MonkTenebres, "Ténèbres (Voie des Ombres)", "Pour un coût de 2 Ki, vous reproduisez les effets du sort Ténèbres", Category.Ki, "is_Darkness", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkDarkVision, new LearnableSkill(CustomSkill.MonkDarkVision, "Vision dans le noir (Voie des Ombres)", "Pour un coût de 2 Ki, vous reproduisez les effets du sort Vision dans le noir", Category.Ki, "is_DarkVis", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkPassageSansTrace, new LearnableSkill(CustomSkill.MonkPassageSansTrace, "Passange sans trace (Voie des Ombres)", "Pour un coût de 2 Ki, vous reproduisez les effets du sort Passage sans trace", Category.Ki, "is_NoTrace", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkSilence, new LearnableSkill(CustomSkill.MonkSilence, "Silence (Voie des Ombres)", "Pour un coût de 2 Ki, vous reproduisez les effets du sort silence", Category.Ki, "is_Silence", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkLinceulDombre, new LearnableSkill(CustomSkill.MonkLinceulDombre, "Linceul d'ombre", "Si vous n'êtes dans une zone sombre, vous devenez invisible pour 10 rounds\n\nTechniquement, pour le moment : ne fonctionne que la nuit ou en intérieur", Category.Fight, "is_ShadowCloak", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkFouleeDombre, new LearnableSkill(CustomSkill.MonkFouleeDombre, "Foulée d'ombre", "Action bonus\n\nSi vous êtes sous le couvert des ombres, vous vous téléportez dans l'ombre de la créature ciblée et pour un round obtenez un avantage sur votre prochaine attaque de mêlée\nPortée : 18 m\n\nPour le moment, ne peut être utilisé qu'en intérieur ou de nuit sur une créature qui ne dispose d'aucun effet de lumière", Category.Fight, "is_ShadowStep", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkFrappeDombre, new LearnableSkill(CustomSkill.MonkFrappeDombre, "Frappe d'ombre", "Action bonus\n\nSi vous êtes totalement invisible pour la créature ciblée, vous vous téléportez dans son ombre et lui infligez 3d8 dégâts psychiques\nPortée : 18 m\nCoût : 3 Ki\nLa cible ne doit disposer d'aucun effet de lumière", Category.Ki, "is_ShadowStrike", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MonkOpportuniste, new LearnableSkill(CustomSkill.MonkOpportuniste, "Opportuniste", "Si la créature que vous attaquez en mêlée subit une attaque de la part d'une autre créature, vous utilisez automatiquement votre réaction pour lui infliger une attaque de corps à corps supplémentaire", Category.Fight, "ife_opportunist", 1, 1, Ability.Dexterity, Ability.Wisdom, LearnActivableFeat));

      //learnableDictionary.Add(CustomSkill.MonkElements, new LearnableSkill(CustomSkill.MonkElements, "Voie des Éléments", "", Category.MonkSubClass, "monk_elements", 20, 1, Ability.Wisdom, Ability.Dexterity, Monk.LevelUp, "1Q41PA3akr8AsxKMnbjdixlbOOdNrZsByEtbwJN3lt2A"));
      learnableDictionary.Add(CustomSkill.MonkHarmony, new LearnableSkill(CustomSkill.MonkHarmony, "Harmonie de l'eau et du feu", "Si vous n'êtes pas en combat, vous regagnez la moitié de votre Ki.\nUtilisable une fois par repos long.", Category.MindBody, "is_Harmony", 1, 1, Ability.Wisdom, Ability.Dexterity, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.Wizard, new LearnableSkill(CustomSkill.Wizard, "Magicien", "", Category.Class, "wizard", 2, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1ymEMqm6nx6CsYoEktRjfQYm6IKs3XmG5a-abbOcdtUU"));
      learnableDictionary.Add(CustomSkill.WizardRestaurationArcanique, new LearnableSkill(CustomSkill.WizardRestaurationArcanique, "Restauration Arcanique", "Si vous n'êtes pas en combat, choisissez un niveau de sort pour lequel vous souhaitez récuperer des emplacements\nNombre de charges : la moitié de votre niveau de magicien\nCharges récupérées à chaque repos court", Category.Magic, "is_ArcaneRecover", 1, 1, Ability.Intelligence, Ability.Wisdom, OnLearnRestaurationArcanique));

      learnableDictionary.Add(CustomSkill.WizardAbjuration, new LearnableSkill(CustomSkill.WizardAbjuration, "Ecole - Abjuration", "", Category.WizardSubClass, "abjuration", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1R9MbWOTrYAeeVTEIcXvQ1tM_MltYnyNgHXvqXGo8K_E"));
      learnableDictionary.Add(CustomSkill.AbjurationWard, new LearnableSkill(CustomSkill.AbjurationWard, "Protection Arcanique", "Vous disposez d'une protection dont l'intensité maximale est de 2x votre level de mage\nChaque fois que vous lancez un sort d'abjuration, l'intensité augmente d'une valeur correspondant au niveau du sort\nChaque fois que vous subissez des dégâts, la protection annule des dégâts correspondant à son niveau d'intensité actuel et l'intensité diminue de 1\nA chaque repos long, l'intensité se réinitialise à un niveau correspondant à votre level de mage", Category.Magic, "is_AbjWard", 1, 1, Ability.Intelligence, Ability.Wisdom, OnLearnAbjurationWard));
      learnableDictionary.Add(CustomSkill.AbjurationWardProjetee, new LearnableSkill(CustomSkill.AbjurationWardProjetee, "Protection Projetée", "Action bonus\nL'allié ciblé bénéficie des effets de Protection Arcanique à votre place. Si l'allié s'éloigne de plus de 9m, alors il perd l'effet et vous en récupérez le bénéfice", Category.Magic, "is_AbjWardPrj", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AbjurationImproved, new LearnableSkill(CustomSkill.AbjurationImproved, "Abjuration Supérieure", "Lorsque vous prenez un repos court, l'intensité de Protection Arcanique est doublée", Category.Magic, "is_ImpAbjuration", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AbjurationSpellResistance, new LearnableSkill(CustomSkill.AbjurationSpellResistance, "Résistance aux sorts", "Vous avez l'avantage sur vos jets de sauvegarde contre les sorts et obtenez résistance contre les dégâts des sorts", Category.Magic, "ife_hardspel", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.WizardDivination, new LearnableSkill(CustomSkill.WizardDivination, "Ecole - Divination", "", Category.WizardSubClass, "divination", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1hfNBRd6kJ4O54ck79fYaTsDYcXsUCsvl_O5FKYfIOY8"));
      learnableDictionary.Add(CustomSkill.DivinationPresage, new LearnableSkill(CustomSkill.DivinationPresage, "Présage", "A chaque repos long, vous lancez 2 dés et conservez ces jets anticipés\n\nVous pouvez utilisez une action bonus pour remplacer le prochain jet de la cible par le dés de votre choix\n\nNote : en animation, pensez bien à annoncer le présage AVANT que la cible ne fasse son jet et sur quel type de jet vous souhaitez l'appliquer", Category.Magic, "is_Presage", 1, 1, Ability.Intelligence, Ability.Wisdom, OnLearnDivinationPresage));
      learnableDictionary.Add(CustomSkill.DivinationExpert, new LearnableSkill(CustomSkill.DivinationExpert, "Devin Expert", "Lorsque vous utilisez un emplacement de sort pour lancer un sort de divination de niveau 2+, vous récupérez un emplacement de sort de niveau inférieur au sort lancé et inférieur à 6", Category.Magic, "is_DevinExpert", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DivinationDarkVision, new LearnableSkill(CustomSkill.DivinationDarkVision, "Devin - Vision dans le noir", "Vous bénéficiez des effets du sort Vision dans le noir jusqu'à votre prochain repos long", Category.Magic, "is_DivDarkVision", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DivinationSeeInvisibility, new LearnableSkill(CustomSkill.DivinationSeeInvisibility, "Devin - Voir l'invisible", "Vous bénéficiez des effets du sort Détection de l'invisibilité jusqu'à votre prochain repos long", Category.Magic, "is_DivSeeInvis", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DivinationSeeEthereal, new LearnableSkill(CustomSkill.DivinationSeeEthereal, "Devin - Vision éthérée", "Vous pouvez voir dans le plan éthéré dans un rayon de 18m autour de vous jusqu'à votre prochain repos long", Category.Magic, "is_EthVis", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DivinationPresageSuperieur, new LearnableSkill(CustomSkill.DivinationPresageSuperieur, "Présage Supérieur", "Vous obtenez un troisième dé de présage", Category.Magic, "is_Presage", 1, 1, Ability.Intelligence, Ability.Wisdom, OnLearnDivinationPresageSuperieur));

      learnableDictionary.Add(CustomSkill.WizardEnchantement, new LearnableSkill(CustomSkill.WizardEnchantement, "Ecole - Enchantement", "", Category.WizardSubClass, "enchantement", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1PXUw4Ryw05MjbSPAkwAjCnleqNovo2eRusFBFgwgfPI"));
      learnableDictionary.Add(CustomSkill.EnchantementCharmeInstinctif, new LearnableSkill(CustomSkill.EnchantementCharmeInstinctif, "Enchanteur - Charme Instinctif", "Réaction\n\nLorsqu'une créature vous attaque et qu'elle échoue son JDS de sagesse, vous utilisez votre réaction afin de dévier l'attaque vers une autre créature à moins de 2m de vous\n\nSi la cible réussit son JDS, vous ne pouvez plus l'affecter jusqu'à votre prochain long repos", Category.Magic, "is_CharmInstinct", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnchantementRegardHypnotique, new LearnableSkill(CustomSkill.EnchantementRegardHypnotique, "Enchanteur - Regard Hypnotique", "Concentration\n\n Si La créature ciblée échoue un JDS de sagesse, elle devient incapable de se déplacer et d'agir\n\nPortée : mêlée\n\nL'effet prend fin si vous n'êtes plus à portée de mêlée de la cible si celle-ci subit des dégâts ou si vous cessez de vous concentrer\n\nVous ne pouvez tenter une hypnose qu'une fois par repos long contre la même créature", Category.Magic, "is_HypnoGaze", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnchantementPartage, new LearnableSkill(CustomSkill.EnchantementPartage, "Enchanteur - Enchantement Partagé", "Vos sorts d'enchantement mono-cibles affectent désormais les créatures à moins de 2m de la cible", Category.Magic, "is_SplitEnchant", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnchantementAlterationMemorielle, new LearnableSkill(CustomSkill.EnchantementAlterationMemorielle, "Enchanteur - Altération Mémorielle", "Lorsque plusieurs créatures sont soumises à vos effets de charme, vous pouvez choisir l'une d'entre elle qui ne sera pas consciente d'avoir subi l'effet d'un sort\n\nVous pouvez faire oublier à cette créature une une partie du temps durant lequel elle a été charmée (max 1 h + mod CHA (min 1), JDS INT)\n\nNote : Uniquement utile en animation", Category.Magic, "ife_stillmind", 1, 1, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.WizardEvocation, new LearnableSkill(CustomSkill.WizardEvocation, "Ecole - Evocation", "", Category.WizardSubClass, "evocation", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1MltSvd-ow_KVYm-8MMprdwYdfQQtf04zflKl7kGyoB8"));
      learnableDictionary.Add(CustomSkill.EvocateurFaconneurDeSorts, new LearnableSkill(CustomSkill.EvocateurFaconneurDeSorts, "Evocateur - Façonneur de sorts", "Vos alliés ne sont pas affectés par les effets négatifs de vos sorts d'évocation", Category.Magic, "is_SculptSpells", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EvocateurToursPuissants, new LearnableSkill(CustomSkill.EvocateurToursPuissants, "Evocateur - Tours puissants", "Vos tours de magie infligent la moitié de leurs dégâts, même si la cible réussit son jet de sauvegarde", Category.Magic, "is_TourPuissant", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EvocateurSuperieur, new LearnableSkill(CustomSkill.EvocateurSuperieur, "Evocateur Supérieur", "Vous ajoutez votre modificateur aux jets dégâts de vos sorts d'évocation\n\n(Note : si jamais l'effet est trop puissant, cette capacité sera nerfée en ajoutant le bonus uniquement aux dégâts totaux du sort)", Category.Magic, "is_EvoImproved", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EvocateurSurcharge, new LearnableSkill(CustomSkill.EvocateurSurcharge, "Evocateur - Surcharge Arcanique", "Lorsque vous utilisez cette capacité, votre prochain sort de niveau entre 1 et 5 inflige le maximum de dégâts possible\n\nA partir de la seconde utilisation par repos long, vous subissez 2d12 dégâts nécrotiques par niveau de sort. Ceux-ci augmentent de 1d12 par utilisation successive\n\nCes dégâts ignorent toute résistance ou immunité", Category.Magic, "is_EvoSurge", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.WizardIllusion, new LearnableSkill(CustomSkill.WizardIllusion, "Ecole - Illusion", "", Category.WizardSubClass, "illusion", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1FhC82E9mdoliQyl2KOE89nBHk53QQwXtgLNjyzgpJEU"));
      learnableDictionary.Add(CustomSkill.WizardIllusionMalleable, new LearnableSkill(CustomSkill.WizardIllusionMalleable, "Illusions Malléables", "Lorsque vous lancez un sort d'illusion qui dure plus d'une minute, vous pouvez utiliser votre action pour changer la nature de l'illusion (en respectant les paramètres normaux du sort) tant que vous pouvez voir l'illusion\n\nNote : Utilisable en rp et en animation", Category.Magic, "is_SculptSpells", 1, 1, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.IllusionVoirLinvisible, new LearnableSkill(CustomSkill.IllusionVoirLinvisible, "Illusion - Détection de l'invisibilité", "Une fois par repos court, vous pouvez lancer le sort Détection de l'invisibilité sans consommer d'emplacement", Category.Magic, "is_SeeInvi", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.IllusionDouble, new LearnableSkill(CustomSkill.IllusionDouble, "Illusion - Double Illusoire", "Une fois par repos court, vous pouvez utiliser votre réaction afin de faire échouer la prochaine attaque portée contre vous", Category.Magic, "is_IllusorySelf", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat, restoreOnShortRest: true));
      learnableDictionary.Add(CustomSkill.WizardRealiteIllusoire, new LearnableSkill(CustomSkill.WizardRealiteIllusoire, "Illusion - Réalité Illusoire", "Lorsque vous lancez un sort d'illusion de niveau 1+, vous pouvez rendre réel pendant 1 minute un objet inanimé non magique\n\n  L'objet ne peut pas infliger de dégâts ou nuire directement à quiconque\n\nNote : Utile uniquement en rp et en animation", Category.Magic, "ife_foc_spel", 1, 1, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.WizardInvocation, new LearnableSkill(CustomSkill.WizardInvocation, "Ecole - Invocation", "", Category.WizardSubClass, "invocation", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1FSP_upDOMeg9i-f3kCBz6oPhRqaFv5shYtW7MjcW5oc"));
      learnableDictionary.Add(CustomSkill.InvocationMineure, new LearnableSkill(CustomSkill.InvocationMineure, "Invocation Mineure", "Vous pouvez invoquer un objet inanimé dans un rayon de 3m\n\nCet objet ne peut pas avoir plus d'1 mètre de côté et ne peut pas peser plus 5 kg\n\nSa forme doit être celle d'un objet non magique que vous avez déjà vu\n\nL'objet disparaît après 1 heure, si vous en invoquez un autre, s'il subi ou inflige des dégâts\n\nNote : Utile uniquement en rp et animation", Category.Magic, "is_InvoMineur", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.InvocationPermutation, new LearnableSkill(CustomSkill.InvocationPermutation, "Invocation - Permutation", "Vous vous téléportez à une distance de 9m sur un espace inoccupé que vous pouvez voir ou échangez de place avec l'allié ciblé", Category.Magic, "is_Transpo", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.InvocationConcentration, new LearnableSkill(CustomSkill.InvocationConcentration, "Invocation - Concentration Suprême", "Lorsque vous vous concentrez sur un sort d'invocation, celle-ci ne peut plus être brisée par des dégâts", Category.Magic, "is_FocusConju", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.InvocationSupreme, new LearnableSkill(CustomSkill.InvocationSupreme, "Invocation Suprême", "Vos créatures invoquées bénéficient de 30 points de vie temporaires", Category.Magic, "is_InvoSupreme", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.WizardNecromancie, new LearnableSkill(CustomSkill.WizardNecromancie, "Ecole - Nécromancie", "", Category.WizardSubClass, "necromancie", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1Mb9YuAl0QiajconTQ32cnLYmwho_YS8EdTA7AF-tU0I"));
      learnableDictionary.Add(CustomSkill.NecromancieMoissonDuFiel, new LearnableSkill(CustomSkill.NecromancieMoissonDuFiel, "Nécromancie - Moisson du Fiel", "Si un de vos sorts de niveau 1+ tue une créature vivante, vous êtes soigné d'un nombre de points de vie égal à 2x le niveau du sort (3x s'il s'agit d'un sort de nécromancie)", Category.Magic, "is_GrimHarvest", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.NecromancieUndeadThralls, new LearnableSkill(CustomSkill.NecromancieUndeadThralls, "Nécromancie - Serviteurs mort-vivants", "Vous apprenez le sort Animation des Morts\n\nAnimation des Morts anime un cadavre supplémentaire\n\nLes morts-vivants animés par vos sorts de nécromancie ajoutent votre niveau de magicien à leurs PV et votre bonus de maîtrise à leurs jets de dégâts", Category.Magic, "is_UndeadThralls", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.NecromancieInsensible, new LearnableSkill(CustomSkill.NecromancieInsensible, "Nécromancie - Insensible", "Vous obtenez la résistance aux dégâts nécrotiques\n\nVotre maximum de points de vie ne peut pas être réduit", Category.Magic, "is_Insensible", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.NecromancieUndeadControl, new LearnableSkill(CustomSkill.NecromancieUndeadControl, "Nécromancie - Contrôle des mort-vivants", "Si le mort-vivant ciblé échoue son JDS de charisme, il vous obéit\n\nSi la cible réussit son JDS, elle devient immunisée à votre contrôle\n\nSi la cible a plus de 8 d'intelligence, elle a l'avantage sur son JDS\n\nSi la cible a plus de 12 d'intelligence, elle tente un nouveau JDS toutes les heures", Category.Magic, "is_ConUnd", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.WizardTransmutation, new LearnableSkill(CustomSkill.WizardTransmutation, "Ecole - Transmutation", "", Category.WizardSubClass, "transmutation", 20, 1, Ability.Intelligence, Ability.Wisdom, Wizard.LevelUp, "1W5CHtTiH0L-4i703SuxxK08kZEtX3HDMXFiHXJ9HG2E"));
      learnableDictionary.Add(CustomSkill.TransmutationAlchimieMineure, new LearnableSkill(CustomSkill.TransmutationAlchimieMineure, "Transmutation - Alchimie Mineure", "Vous pouvez transformer un objet entièrement composé de bois, pierre, fer, cuivre ou argent en un autre de ces matériaux\n\nIl vous faut 10 minutes pour transformer un cube de 30 cm d'arrête de matériaux\n\nAu bout d'une heure ou si vous perdez votre concentration, la matière retrouve sa substance d'origine\n\nNote : Utile uniquemenet en rp et animation", Category.Magic, "is_TransAlchimie", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TransmutationStone, new LearnableSkill(CustomSkill.TransmutationStone, "Pierre de Transmutation", "Vous pouvez passer 8h à créer une pierre de transmutation. Chaque fois que vous lancez un sort de transmutation de niveau 1+, vous pouvez lui donner un nouvel effet à la pierre parmi :\n  - Vitesse de déplacement +30%\n  - Résistance à l'acide, froid, feu, électricité ou foudre (au choix)\n  - Vision dans le noir (18m)\n  - Maîtrise des JDS CON\n\nLa créature en possession de la pierre bénéficie de l'effet choisi\n\nSi vous créez une nouvelle pierre, la précédente perd son effet", Category.Magic, "is_TranStone", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TransmutationMetamorphose, new LearnableSkill(CustomSkill.TransmutationMetamorphose, "Transmutation - Métamorphe", "Vous apprenez le sort Métamorphose\n\nUne fois par repos court, ce sort ne vous coûte pas d'emplacement si vous vous ciblez vous-même et que vous vous transformez en une bête de FP1-", Category.Magic, "is_TransMeta", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TransmutationMaitre, new LearnableSkill(CustomSkill.TransmutationMaitre, "Transmutation - Maître", "Vous pouvez consumer d'un seul coup toute l'énergie de votre pierre de transmutation afin de produire l'un des effets ci-dessous\n  - Jouvence : L'âge apparent de la créature consentante ciblée de 3d10 années jusqu'à un minimum de 18 ans. N'augmente pas l'espérance de vie\n  - Panacée : Guérit la créature ciblée de toutes les maladies, malédictions et poisons\n  - Restitution : Guérit la créature ciblée d'un effet négatif majeur de KO et lui rend tous ses points de vie\n  - Transformation majeure : L'objet non-magique ciblé (taille max 1,5 m3) est transformé en un autre objet de taille et masse similaire et d'une valeur inférieure. Nécessite 10 minutes de concentration", Category.Magic, "is_TransMaster", 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.RogueArcaneTrickster, new LearnableSkill(CustomSkill.RogueArcaneTrickster, "Escroc Arcanique", "", Category.RogueSubClass, "arcane_trickster", 20, 1, Ability.Dexterity, Ability.Intelligence, Rogue.LevelUp, "1i1qrycz6Frk3uJ6FWgXuyjbIqY8fO8eMyO6ITi5W4H8"));
      learnableDictionary.Add(CustomSkill.ArcaneTricksterMagicalAmbush, new LearnableSkill(CustomSkill.ArcaneTricksterMagicalAmbush, "Embuscade Arcanique", "Les ennemis qui ne peuvent pas vous voir ont un désavantage sur les jets de sauvegarde contre vos sorts", Category.Magic, "is_MagicalAmbush", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ArcaneTricksterPolyvalent, new LearnableSkill(CustomSkill.ArcaneTricksterPolyvalent, "Escroc Polyvalent", "", Category.Magic, "is_PolyTrick", 1, 1, Ability.Dexterity, Ability.Intelligence, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.FighterEldritchKnight, new LearnableSkill(CustomSkill.FighterEldritchKnight, "Guerrier Occulte", "", Category.FighterSubClass, "eldritchknight", 20, 1, Ability.Constitution, Ability.Intelligence, Fighter.LevelUp, "1lLsqIE8zc66j6YxedEb6MZvhYo_Sy3FBeMsJqIc4fMQ"));
      learnableDictionary.Add(CustomSkill.EldritchKnightArmeLiee, new LearnableSkill(CustomSkill.EldritchKnightArmeLiee, "Arme Liée", "Une fois par repos court, vous pouvez choisir deux armes  auxquelles vous lier (rp parlant, la création de ce lien se fait avec un rituel d'une heure et vous devez tenir l'arme en main pendant tout le rituel)\n- Lorsque vous maniez cette arme, vous ne pouvez pas être désarmé\n- Si l'arme se trouve sur le même plan d'existence que vous, vous pouvez utiliser votre action bonus pour la téléporter dans votre main \n- Tout nouveau rituel annule le précédent", Category.Fight, "is_WeaponBond1", 1, 1, Ability.Constitution, Ability.Intelligence, OnLearnArmeLiee));
      learnableDictionary.Add(CustomSkill.EldritchKnightArmeLieeInvocation, new LearnableSkill(CustomSkill.EldritchKnightArmeLieeInvocation, "Arme Liée - Invocation", "Action bonus\n\nSi votre arme liée se trouve sur le même plan d'existence que vous, vous pouvez la téléporter dans votre main", Category.Fight, "is_WeaponSummon1", 1, 1, Ability.Constitution, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.EldritchKnightMagieDeGuerre, new LearnableSkill(CustomSkill.EldritchKnightMagieDeGuerre, "Magie de guerre", "Tant que vous êtes en train d'attaquer, vos tours de magie sont considérés comme des actions bonus\n\nA partir du niveau 18, vous n'êtes vous plus restreint aux tours de magie : tous vos sorts sont élligibles", Category.Fight, "is_WarMagic", 1, 1, Ability.Constitution, Ability.Intelligence, OnLearnMagieDeGuerre));
      learnableDictionary.Add(CustomSkill.EldritchKnightFrappeOcculte, new LearnableSkill(CustomSkill.EldritchKnightFrappeOcculte, "Frappe Occulte", "Lorsque vous touchez une créature avec une attaque d'arme, celle-ci subit un désavantage sur les jets de sauvegarde contre vos sorts pendant un round", Category.Fight, "is_EldritchStrike", 1, 1, Ability.Constitution, Ability.Intelligence, OnLearnFrappeOcculte));
      learnableDictionary.Add(CustomSkill.EldritchKnightChargeArcanique, new LearnableSkill(CustomSkill.EldritchKnightChargeArcanique, "Charge Arcanique", "Après avoir utilisé fougue, vous pouvez vous téléporter jusqu'à 9 m dans un espace inoccupé", Category.Fight, "is_ArcaneCharge", 1, 1, Ability.Constitution, Ability.Intelligence, LearnActivableFeat));

      // SPELLS
      // CANTRIPS

      learnableDictionary.Add(CustomSkill.RayOfFrost, new LearnableSkill(CustomSkill.RayOfFrost, "Rayon de Givre", NwSpell.FromSpellType(Spell.RayOfFrost).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.RayOfFrost).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.AcidSplash, new LearnableSkill(CustomSkill.AcidSplash, "Aspersion d'acide", NwSpell.FromSpellType(Spell.AcidSplash).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.AcidSplash).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ElectricJolt, new LearnableSkill(CustomSkill.ElectricJolt, "Poigne électrique", NwSpell.FromSpellType(Spell.ElectricJolt).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.ElectricJolt).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BladeWard, new LearnableSkill(CustomSkill.BladeWard, "Protection contre les lames", NwSpell.FromSpellId(CustomSpell.BladeWard).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.BladeWard).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FireBolt, new LearnableSkill(CustomSkill.FireBolt, "Trait de feu", NwSpell.FromSpellId(CustomSpell.FireBolt).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.FireBolt).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Friends, new LearnableSkill(CustomSkill.Friends, "Amis", NwSpell.FromSpellId(CustomSpell.Friends).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Friends).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BoneChill, new LearnableSkill(CustomSkill.BoneChill, "Frisson Glacial", NwSpell.FromSpellId(CustomSpell.BoneChill).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.BoneChill).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.TrueStrike, new LearnableSkill(CustomSkill.TrueStrike, "Coup au but", NwSpell.FromSpellType(Spell.TrueStrike).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.TrueStrike).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.PoisonSpray, new LearnableSkill(CustomSkill.PoisonSpray, "Bouffée empoisonnée", NwSpell.FromSpellId(CustomSpell.PoisonSpray).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.PoisonSpray).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Light, new LearnableSkill(CustomSkill.Light, "Lumière", NwSpell.FromSpellType(Spell.Light).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.Light).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.LightDrow, new LearnableSkill(CustomSkill.LightDrow, "Lumière (Drow)", NwSpell.FromSpellType(Spell.Light).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.Light).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FaerieFireDrow, new LearnableSkill(CustomSkill.FaerieFireDrow, "Lueurs Féeriques (Drow)", NwSpell.FromSpellId(CustomSpell.FaerieFire).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.FaerieFire).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.DarknessDrow, new LearnableSkill(CustomSkill.DarknessDrow, "Ténèbres (Racial)", NwSpell.FromSpellType(Spell.Darkness).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.Darkness).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.InvisibilityDuergar, new LearnableSkill(CustomSkill.InvisibilityDuergar, "Invisibilité (Duergar)", NwSpell.FromSpellType(Spell.Invisibility).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.Invisibility).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.EnlargeDuergar, new LearnableSkill(CustomSkill.EnlargeDuergar, "Agrandissement (Duergar)", NwSpell.FromSpellId(CustomSpell.Enlarge).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Enlarge).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.SpeakAnimalGnome, new LearnableSkill(CustomSkill.SpeakAnimalGnome, "Communication Animale (Gnome des forêts)", NwSpell.FromSpellId(CustomSpell.SpeakAnimal).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.SpeakAnimal).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.ProduceFlame, new LearnableSkill(CustomSkill.ProduceFlame, "Pyrotechnie", NwSpell.FromSpellId(CustomSpell.ProduceFlame).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.ProduceFlame).IconResRef, 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.HellishRebuke, new LearnableSkill(CustomSkill.HellishRebuke, "Représailles Infernales", NwSpell.FromSpellId(CustomSpell.HellishRebuke).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.HellishRebuke).IconResRef, 1, 1, Ability.Charisma, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.MageHand, new LearnableSkill(CustomSkill.MageHand, "Main de mage", NwSpell.FromSpellId(CustomSpell.MageHand).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.MageHand).IconResRef, 1, 1, Ability.Charisma, Ability.Intelligence, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BurningHands, new LearnableSkill(CustomSkill.BurningHands, "Mains Brûlantes", NwSpell.FromSpellType(Spell.BurningHands).Description.ToString(), Category.Magic, NwSpell.FromSpellType(Spell.BurningHands).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.FlameBlade, new LearnableSkill(CustomSkill.FlameBlade, "Lame de feu", NwSpell.FromSpellId(CustomSpell.FlameBlade).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.FlameBlade).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Thaumaturgy, new LearnableSkill(CustomSkill.Thaumaturgy, "Thaumaturgie", NwSpell.FromSpellId(CustomSpell.Thaumaturgy).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Thaumaturgy).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.SearingSmite, new LearnableSkill(CustomSkill.SearingSmite, "Châtiment Calcinant", NwSpell.FromSpellId(CustomSpell.SearingSmite).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.SearingSmite).IconResRef, 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.BrandingSmite, new LearnableSkill(CustomSkill.BrandingSmite, "Châtiment Révélateur", NwSpell.FromSpellId(CustomSpell.BrandingSmite).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.BrandingSmite).IconResRef, 1, 1, Ability.Charisma, Ability.Constitution, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Prestidigitation, new LearnableSkill(CustomSkill.Prestidigitation, "Prestidigitation", NwSpell.FromSpellId(CustomSpell.Prestidigitation).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Prestidigitation).IconResRef, 1, 1, Ability.Intelligence, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.Druidisme, new LearnableSkill(CustomSkill.Druidisme, "Druidisme", NwSpell.FromSpellId(CustomSpell.Druidisme).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.Druidisme).IconResRef, 1, 1, Ability.Wisdom, Ability.Charisma, LearnActivableFeat));
      learnableDictionary.Add(CustomSkill.IllusionMineure, new LearnableSkill(CustomSkill.IllusionMineure, "ILlusion Mineure", NwSpell.FromSpellId(CustomSpell.IllusionMineure).Description.ToString(), Category.Magic, NwSpell.FromSpellId(CustomSpell.IllusionMineure).IconResRef, 1, 1, Ability.Intelligence, Ability.Wisdom, LearnActivableFeat));

      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot0, new LearnableSkill(CustomSkill.ImprovedSpellSlot0, "Emplacement Cercle 0", "Augmente le nombre d'emplacements de sorts de cercle 0 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsC1", 10, 1, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot1, new LearnableSkill(CustomSkill.ImprovedSpellSlot1, "Emplacement Cercle 1", "Augmente le nombre d'emplacements de sorts de cercle 1 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsA1", 10, 2, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot2, new LearnableSkill(CustomSkill.ImprovedSpellSlot2, "Emplacement Cercle 2", "Augmente le nombre d'emplacements de sorts de cercle 2 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsF1", 10, 3, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot3, new LearnableSkill(CustomSkill.ImprovedSpellSlot3, "Emplacement Cercle 3", "Augmente le nombre d'emplacements de sorts de cercle 3 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsE1", 10, 4, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot4, new LearnableSkill(CustomSkill.ImprovedSpellSlot4, "Emplacement Cercle 4", "Augmente le nombre d'emplacements de sorts de cercle 4 disponibles d'un par niveau.", Category.Magic, "ife_X2EnrRsS1", 10, 5, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot5, new LearnableSkill(CustomSkill.ImprovedSpellSlot5, "Emplacement Cercle 5", "Augmente le nombre d'emplacements de sorts de cercle 5 disponibles d'un par niveau.", Category.Magic, "ife_X2EpSkFSpCr", 10, 6, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot6, new LearnableSkill(CustomSkill.ImprovedSpellSlot6, "Emplacement Cercle 6", "Augmente le nombre d'emplacements de sorts de cercle 6 disponibles d'un par niveau.", Category.Magic, "ife_X2EpicFort", 10, 7, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot7, new LearnableSkill(CustomSkill.ImprovedSpellSlot7, "Emplacement Cercle 7", "Augmente le nombre d'emplacements de sorts de cercle 7 disponibles d'un par niveau.", Category.Magic, "ife_X2EpicRefl", 10, 8, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot8, new LearnableSkill(CustomSkill.ImprovedSpellSlot8, "Emplacement Cercle 8", "Augmente le nombre d'emplacements de sorts de cercle 8 disponibles d'un par niveau.", Category.Magic, "ife_X2EpicProw", 10, 9, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));
      learnableDictionary.Add(CustomSkill.ImprovedSpellSlot9, new LearnableSkill(CustomSkill.ImprovedSpellSlot9, "Emplacement Cercle 9", "Augmente le nombre d'emplacements de sorts de cercle 9 disponibles d'un par niveau.", Category.Magic, "ife_X2EpicRepu", 10, 10, Ability.Charisma, Ability.Constitution, HandleAddedSpellSlot));

      learnableDictionary.Add(CustomSkill.MateriaScanning, new LearnableSkill(CustomSkill.MateriaScanning, "Détection de matéria", "Permet l'utilisation des inscriptions de détection de matéria afin de trouver des dépôts de minerais riches en Substance.\nEn mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt de faible concentration et de 1 % celle de découvrir une qualité supérieure.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Wisdom, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.OreDetection, new LearnableSkill(CustomSkill.OreDetection, "Détection de matéria minérale", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt minéral de faible concentration et de 1 % celle de découvrir une qualité supérieure.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.WoodDetection, new LearnableSkill(CustomSkill.WoodDetection, "Détection de matéria végétale", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt végétal de faible concentration et de 1 % celle de découvrir une qualité supérieure.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.PeltDetection, new LearnableSkill(CustomSkill.PeltDetection, "Détection de matéria animale", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt animal de faible concentration et de 1 % celle de découvrir une qualité supérieure.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.OreDetectionSpeed, new LearnableSkill(CustomSkill.OreDetectionSpeed, "Détection minérale rapide", "Chaque niveau diminue de 5 % le temps de recherche nécessaire à la détection de matéria minérale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.WoodDetectionSpeed, new LearnableSkill(CustomSkill.WoodDetectionSpeed, "Détection végétale rapide", "Chaque niveau diminue de 5 % le temps de recherche nécessaire à la détection de matéria végétale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.PeltDetectionSpeed, new LearnableSkill(CustomSkill.PeltDetectionSpeed, "Détection animale rapide", "Chaque niveau diminue de 5 % le temps de recherche nécessaire à la détection de matéria animale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.OreDetectionSafe, new LearnableSkill(CustomSkill.OreDetectionSafe, "Détection minérale prudente", "Chaque niveau diminue de 2 % le risque d'épuisement d'une inscription lors de la détection de matéria minérale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.WoodDetectionSafe, new LearnableSkill(CustomSkill.WoodDetectionSafe, "Détection végétale prudente", "Chaque niveau diminue de 2 % le risque d'épuisement d'une inscription lors de la détection de matéria végétale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.PeltDetectionSafe, new LearnableSkill(CustomSkill.PeltDetectionSafe, "Détection animale prudente", "Chaque niveau diminue de 2 % le risque d'épuisement d'une inscription lors de la détection de matéria animale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.OreDetectionRange, new LearnableSkill(CustomSkill.OreDetectionRange, "Détection minérale élargie", "Chaque niveau augmente le rayon de détection passif de dépôts minéraux de 1.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.WoodDetectionRange, new LearnableSkill(CustomSkill.WoodDetectionRange, "Détection végétale élargie", "Chaque niveau augmente le rayon de détection passif de dépôts végétaux de 1.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.PeltDetectionRange, new LearnableSkill(CustomSkill.PeltDetectionRange, "Détection animale élargie", "Chaque niveau augmente le rayon de détection passif de dépôts animaux de 1.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.OreDetectionEstimation, new LearnableSkill(CustomSkill.OreDetectionEstimation, "Détection minérale précise", "Chaque niveau augmente de 5 % la précision de l'estimation de concentration de matéria d'un dépôt minérale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.WoodDetectionEstimation, new LearnableSkill(CustomSkill.WoodDetectionEstimation, "Détection végétale précise", "Chaque niveau augmente de 5 % la précision de l'estimation de concentration de matéria d'un dépôt arboricole.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.PeltDetectionEstimation, new LearnableSkill(CustomSkill.PeltDetectionEstimation, "Détection animale précise", "Chaque niveau augmente de 5 % la précision de l'estimation de concentration de matéria d'un dépôt animal.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.OreDetectionAccuracy, new LearnableSkill(CustomSkill.OreDetectionAccuracy, "Détection minérale sensible", "En mode actif, chaque niveau augmente de 1 % la chance de détection d'un dépôt minéral de faible concentration de qualité supérieure.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.WoodDetectionAccuracy, new LearnableSkill(CustomSkill.WoodDetectionAccuracy, "Détection végétale sensible", "En mode actif, chaque niveau augmente de 1 % la chance de détection d'un dépôt végétal de faible concentration de qualité supérieure.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.PeltDetectionAccuracy, new LearnableSkill(CustomSkill.PeltDetectionAccuracy, "Détection animale sensible", "En mode actif, chaque niveau augmente de 1 % la chance de détection d'un dépôt animal de faible concentration de qualité supérieure.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.OreDetectionAdvanced, new LearnableSkill(CustomSkill.OreDetectionAdvanced, "Détection minérale avancée", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt de faible concentration.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Constitution, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.WoodDetectionAdvanced, new LearnableSkill(CustomSkill.WoodDetectionAdvanced, "Détection végétale avancée", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt de faible concentration.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Constitution, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.PeltDetectionAdvanced, new LearnableSkill(CustomSkill.PeltDetectionAdvanced, "Détection animale avancée", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt de faible concentration.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Constitution, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.OreDetectionMastery, new LearnableSkill(CustomSkill.OreDetectionMastery, "Détection minérale maitrisée", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt de faible concentration.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Constitution, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.WoodDetectionMastery, new LearnableSkill(CustomSkill.WoodDetectionMastery, "Détection végétale maitrisée", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt de faible concentration.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Constitution, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.PeltDetectionMastery, new LearnableSkill(CustomSkill.PeltDetectionMastery, "Détection animale maitrisée", "En mode actif, chaque niveau augmente de 5 % la chance de révélation d'un dépôt de faible concentration.\nChaque niveau augmente la précision de l'estimation de quantité de matéria du filon de 5 %.\nChaque niveau diminue de 5 % le temps de recherche nécessaire.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Constitution, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.MateriaExtraction, new LearnableSkill(CustomSkill.MateriaExtraction, "Extraction de matéria", "Permet l'utilisation des inscriptions d'extraction de matéria afin d'obtenir de la matéria à partir de dépôts naturels.\n\nChaque niveau diminue de 5 % le temps nécessaire à une extraction.\nChaque niveau augmente de 5 % le rendement de l'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.OreExtraction, new LearnableSkill(CustomSkill.OreExtraction, "Extraction minérale", "Chaque niveau augmente de 5 % la quantité de matéria extraite d'un dépôt minéral ainsi que la vitesse d'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.OreExtractionSpeed, new LearnableSkill(CustomSkill.OreExtractionSpeed, "Extraction minérale accélérée", "Chaque niveau augmente de 5 % la vitesse d'extraction d'un dépôt minéral.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.OreExtractionYield, new LearnableSkill(CustomSkill.OreExtractionYield, "Extraction minérale améliorée", "Chaque niveau augmente de 5 % la quantité de matéria extraite d'un dépôt minéral.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.OreExtractionSafe, new LearnableSkill(CustomSkill.OreExtractionSafe, "Extraction minérale prudente", "Chaque niveau réduit de 2 % le risque d'épuisement d'une inscription lors d'une extraction minérale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.OreExtractionDurable, new LearnableSkill(CustomSkill.OreExtractionDurable, "Extraction minérale durable", "Chaque niveau augmente de 1 % la chance de conserver un dépôt minéral intact même lorsque l'extraction provoque son épuisement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.OreExtractionAdvanced, new LearnableSkill(CustomSkill.OreExtractionAdvanced, "Extraction minérale avancée", "Chaque niveau diminue de 5 % le temps nécessaire à une extraction.\nChaque niveau augmente de 5 % le rendement de l'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.OreExtractionMastery, new LearnableSkill(CustomSkill.OreExtractionMastery, "Extraction minérale maîtrise", "Chaque niveau diminue de 5 % le temps nécessaire à une extraction.\nChaque niveau augmente de 5 % le rendement de l'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.WoodExtraction, new LearnableSkill(CustomSkill.WoodExtraction, "Extraction végétale", "Chaque niveau augmente de 5 % la quantité de matéria extraite d'une dépôt végétal ainsi que la vitesse d'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Strength, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.WoodExtractionSpeed, new LearnableSkill(CustomSkill.WoodExtractionSpeed, "Extraction végétale accélérée", "Chaque niveau augmente de 5 % la vitesse d'extraction d'un dépôt végétal.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Strength, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.WoodExtractionYield, new LearnableSkill(CustomSkill.WoodExtractionYield, "Extraction végétale améliorée", "Chaque niveau augmente de 5 % la quantité de matéria extraite d'un dépôt végétal.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Strength, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.WoodExtractionSafe, new LearnableSkill(CustomSkill.WoodExtractionSafe, "Extraction végétale prudente", "Chaque niveau réduit de 2 % le risque d'épuisement d'une inscription lors d'une extraction végétale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.WoodExtractionDurable, new LearnableSkill(CustomSkill.WoodExtractionDurable, "Extraction végétale durable", "Chaque niveau augmente de 1 % la chance de conserver un dépôt végétal intact même lorsque l'extraction provoque son épuisement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.WoodExtractionAdvanced, new LearnableSkill(CustomSkill.WoodExtractionAdvanced, "Extraction végétale avancée", "Chaque niveau diminue de 5 % le temps nécessaire à une extraction.\nChaque niveau augmente de 5 % le rendement de l'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.WoodExtractionMastery, new LearnableSkill(CustomSkill.WoodExtractionMastery, "Extraction végétale maîtrise", "Chaque niveau diminue de 5 % le temps nécessaire à une extraction.\nChaque niveau augmente de 5 % le rendement de l'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.PeltExtraction, new LearnableSkill(CustomSkill.PeltExtraction, "Extraction animale", "Chaque niveau augmente de 5 % la quantité de matéria extraite d'un dépôt animal ainsi que la vitesse d'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.\"", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.PeltExtractionSpeed, new LearnableSkill(CustomSkill.PeltExtractionSpeed, "Extraction animale accélérée", "Chaque niveau augmente de 5 % la vitesse d'extraction d'un dépôt animal.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.PeltExtractionYield, new LearnableSkill(CustomSkill.PeltExtractionYield, "Extraction animale améliorée", "Chaque niveau augmente de 5 % la quantité de matéria extraite d'un dépôt animal.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.PeltExtractionSafe, new LearnableSkill(CustomSkill.PeltExtractionSafe, "Extraction animale prudente", "Chaque niveau réduit de 2 % le risque d'épuisement d'une inscription lors d'une extraction animale.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.PeltExtractionDurable, new LearnableSkill(CustomSkill.PeltExtractionDurable, "Extraction animale durable", "Chaque niveau réduit de 1 % le risque de destruction du dépôt lorsque l'extraction animale le vide complètement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Dexterity));
      learnableDictionary.Add(CustomSkill.PeltExtractionAdvanced, new LearnableSkill(CustomSkill.PeltExtractionAdvanced, "Extraction animale avancée", "Chaque niveau diminue de 5 % le temps nécessaire à une extraction.\nChaque niveau augmente de 5 % le rendement de l'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.PeltExtractionMastery, new LearnableSkill(CustomSkill.PeltExtractionMastery, "Extraction animale maîtrise", "Chaque niveau diminue de 5 % le temps nécessaire à une extraction.\nChaque niveau augmente de 5 % le rendement de l'extraction.\nChaque niveau augmente de 1 % la chance d'obtenir une matéria de concentration supérieure et diminue de 1 % le risque d'en obtenir une de concentration inférieure.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Dexterity, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.ReprocessingOre, new LearnableSkill(CustomSkill.ReprocessingOre, "Raffinage minéral", "Réduit la quantité de matéria minérale gachée lors du raffinage de 3 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingOreEfficiency, new LearnableSkill(CustomSkill.ReprocessingOreEfficiency, "Raffinage minéral efficace", "Réduit la quantité de matéria minérale gachée lors du raffinage de 2 % par niveau..", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingOreExpertise, new LearnableSkill(CustomSkill.ReprocessingOreExpertise, "Raffinage minéral expert", "Réduit de 12 % par niveau la quantité de matéria minérale gachée liée au niveau de qualité (base 25 % par niveau de qualité).", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingOreLuck, new LearnableSkill(CustomSkill.ReprocessingOreLuck, "Chance du Raffineur minéral", "Donne 1 % de chance par niveau de raffiner une matéria minérale brute en une matéria de qualité supérieure.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingWood, new LearnableSkill(CustomSkill.ReprocessingWood, "Raffinage arboricole", "Réduit la quantité de matérial arboricole gachée lors du raffinage de 3 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingWoodEfficiency, new LearnableSkill(CustomSkill.ReprocessingWoodEfficiency, "Raffinage arboricole efficace", "Réduit la quantité de matéria arboricole gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingWoodExpertise, new LearnableSkill(CustomSkill.ReprocessingWoodExpertise, "Raffinage arboricole expert", "Réduit de 12 % par niveau la quantité de matéria aboricole gachée liée au niveau de qualité (base 25 % par niveau de qualité).", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingWoodLuck, new LearnableSkill(CustomSkill.ReprocessingWoodLuck, "Chance du Raffineur arboricole", "Donne 1 % de chance par niveau de raffiner une matéria arboricole brute en une matéria de qualité supérieure.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingPelt, new LearnableSkill(CustomSkill.ReprocessingOre, "Raffinage animal", "Réduit la quantité de matérial animale gachée lors du raffinage de 3 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingPeltEfficiency, new LearnableSkill(CustomSkill.ReprocessingPeltEfficiency, "Raffinage animal efficace", "Réduit la quantité de matéria animale gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingPeltExpertise, new LearnableSkill(CustomSkill.ReprocessingPeltExpertise, "Raffinage animal expert", "Réduit de 12 % par niveau la quantité de matéria animale gachée liée au niveau de qualité (base 25 % par niveau de qualité).", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ReprocessingPeltLuck, new LearnableSkill(CustomSkill.ReprocessingPeltLuck, "Chance du Raffineur animal", "Donne 1 % de chance par niveau de raffiner une matéria animale brute en une matéria de qualité supérieure.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.ReprocessingGrade1Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade1Expertise, "Raffinage expert qualité 1", "Réduit la quantité de matéria de qualité 1 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade2Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade2Expertise, "Raffinage expert qualité 2", "Réduit la quantité de matéria de qualité 2 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade3Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade3Expertise, "Raffinage expert qualité 3", "Réduit la quantité de matéria de qualité 3 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade4Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade4Expertise, "Raffinage expert qualité 4", "Réduit la quantité de matéria de qualité 4 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade5Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade5Expertise, "Raffinage expert qualité 5", "Réduit la quantité de matéria de qualité 5 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 5, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade6Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade6Expertise, "Raffinage expert qualité 6", "Réduit la quantité de matéria de qualité 6 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 6, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade7Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade7Expertise, "Raffinage expert qualité 7", "Réduit la quantité de matéria de qualité 7 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 7, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ReprocessingGrade8Expertise, new LearnableSkill(CustomSkill.ReprocessingGrade8Expertise, "Raffinage expert qualité 8", "Réduit la quantité de matéria de qualité 8 gachée lors du raffinage de 2 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 8, Ability.Dexterity, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.MateriaGradeConcentration, new LearnableSkill(CustomSkill.MateriaGradeConcentration, "Concentration de matéria", "Réduit la quantité de matéria nécessaire pour amorcer une concentration de 5 % par niveau.", Category.Craft, "ife_X2EpicRepu", 20, 2, Ability.Strength, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.ConnectionsGates, new LearnableSkill(CustomSkill.ConnectionsGates, "Relations Quartier des Portes", "Diminue les taxes imposées aux Portes de la Cité de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ConnectionsGovernment, new LearnableSkill(CustomSkill.ConnectionsGovernment, "Relations Quartier du Gouvernement", "Diminue les taxes imposées au Quartier du Gouvernement de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ConnectionsPromenade, new LearnableSkill(CustomSkill.ConnectionsPromenade, "Relations Quartier de la Promenade", "Diminue les taxes imposées au Quartier de la Promenade de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ConnectionsTemple, new LearnableSkill(CustomSkill.ConnectionsTemple, "Relations Quartier des Temples", "Diminue les taxes imposées au Quartier des Temples de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.BlueprintCopy, new LearnableSkill(CustomSkill.BlueprintCopy, "Copie de patron", "Permet la copie de patrons originaux. Diminue le temps de copie 5 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.BlueprintEfficiency, new LearnableSkill(CustomSkill.BlueprintEfficiency, "Copie efficace", "Augmente le nombre d'utilisations des patrons que vous copiez de 1 par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.BlueprintEconomy, new LearnableSkill(CustomSkill.BlueprintEconomy, "Artisan économe", "Donne une chance de 5 % par niveau de ne pas consommer d'utilisation lors d'un travail artisanal faisant usage d'une copie de patron.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.BlueprintResearch, new LearnableSkill(CustomSkill.BlueprintResearch, "Recherche en efficacité", "Permet de rechercher une amélioration en efficacité sur des patrons originaux.\nDiminue le temps de recherche de 5 % par niveau.\nCe type de recherche permet de diminuer le temps de fabrication, de réparation de l'objet correspondant.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.BlueprintMetallurgy, new LearnableSkill(CustomSkill.BlueprintMetallurgy, "Recherche en rendement", "Permet de recherche une amélioration de rendement sur des patrons originaux.\nDiminue le temps de recherche de 5 % par niveau.\nCetype de recherche permet de diminuer le coût de fabrication de l'objet correspondant.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Intelligence, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.AdvancedCraft, new LearnableSkill(CustomSkill.AdvancedCraft, "Artisanat avancé", "Diminue de 3 % supplémentaires les temps de recherche sur des patrons originaux.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Intelligence, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.Blacksmith, new LearnableSkill(CustomSkill.Blacksmith, "Forgeron", "Diminue le temps de fabrication, de réparation et le coût en matéria d'un objet de la forge de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.Woodworker, new LearnableSkill(CustomSkill.Woodworker, "Ebéniste", "Diminue le temps de fabrication, de réparation et le coût en matéria d'un objet de la scierie de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Strength));
      learnableDictionary.Add(CustomSkill.Tanner, new LearnableSkill(CustomSkill.Tanner, "Tanneur", "Diminue le temps de fabrication, de réparation et le coût en matéria d'un objet de la tannerie de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ArtisanExceptionnel, new LearnableSkill(CustomSkill.ArtisanExceptionnel, "Artisan d'exception", "Augmente de 1 % par niveau la chance de parvenir à produire un objet avec un emplacement d'inscription supplémentaire.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.ArtisanApplique, new LearnableSkill(CustomSkill.ArtisanApplique, "Artisan appliqué", "Augmente de 3 % par niveau la chance d'augmenter la durabilité d'un objet lors de sa fabrication.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ArtisanFocus, new LearnableSkill(CustomSkill.ArtisanFocus, "Artisan concentré", "Augmente de 5 % le gain de durabilité obtenu lors de l'activation de la compétence artisan appliqué.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.ArtisanPrudent, new LearnableSkill(CustomSkill.ArtisanPrudent, "Artisan Prudent", "Chaque niveau diminue de 2 % le risque d'épuisement d'une inscription lors de la manipulation de matéria raffinée.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Dexterity));

      learnableDictionary.Add(CustomSkill.Renforcement, new LearnableSkill(CustomSkill.Renforcement, "Renforcement", "Permet d'augmenter la durabilité d'un objet de 5 % par renforcement. Cumulable 10 fois.\n\nDiminue le temps de travail nécessaire de 5 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.Recycler, new LearnableSkill(CustomSkill.Recycler, "Recyclage", "Permet de mettre en pièces les objets afin d'extraire une fraction de la matéria brute qu'ils contiennent.\n\n Diminue le temps nécessaire au recyclage et augmente le rendement de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.RecyclerFast, new LearnableSkill(CustomSkill.RecyclerFast, "Recyclage accéléré", "Permet d'effectuer une tâche de recyclage 1 % plus rapidement par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.RecyclerExpert, new LearnableSkill(CustomSkill.RecyclerExpert, "Recyclage expert", "Augmente le rendement du recyclage de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.Repair, new LearnableSkill(CustomSkill.Repair, "Réparation", "Permet de réparer les objets.\n\n Diminue le temps et le coût en matéria nécessaires à la réparation.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.RepairFast, new LearnableSkill(CustomSkill.RepairFast, "Réparation accélérée", "Permet d'effectuer une tâche de réparation 1 % plus rapidement par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Intelligence));
      learnableDictionary.Add(CustomSkill.RepairExpert, new LearnableSkill(CustomSkill.RepairExpert, "Réparation experte", "Diminue le coût en matéria d'une réparation de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Wisdom));
      learnableDictionary.Add(CustomSkill.RepairCareful, new LearnableSkill(CustomSkill.RepairCareful, "Réparation prudente", "Diminue la perte de durabilité maximale à chaque réparation de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Dexterity, Ability.Wisdom));

      learnableDictionary.Add(CustomSkill.CalligraphieSurcharge, new LearnableSkill(CustomSkill.CalligraphieSurcharge, "Calligraphie Surchargée", "Permet de forcer l'ajout d'emplacements d'inscriptions sur un objet au risque de le briser.\n\nAugmente de 2 % par niveau la chance de parvenir à forcer l'ajout d'un emplacement d'enchantement supplémentaire.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CalligraphieSurchargeControlee, new LearnableSkill(CustomSkill.CalligraphieSurchargeControlee, "Calligraphie surcharge contrôlée", "Augmente de 10 % par niveau la chance de conserver l'objet intact lors de l'échec d'une tentative de surcharge.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Wisdom, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.CalligrapheArmurier, new LearnableSkill(CustomSkill.CalligrapheArmurier, "Calligraphe Armurier", "Permet de réaliser des inscriptions ouvragées sur des pièces d'armure et de leur donner vie sous forme d'effets magiques permanents.\n\nRéduit de 2 % par niveau le coût et le temps nécessaire pour réaliser une inscription.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheArmurierMaitre, new LearnableSkill(CustomSkill.CalligrapheArmurierMaitre, "Calligraphe Armurier Maître", "Réduit de 2 % par niveau le temps et le coût de réalisation d'une inscription sur une pièce d'armure.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheArmurierScience, new LearnableSkill(CustomSkill.CalligrapheArmurierScience, "Science de la calligraphie d'armure", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription d'une inscription sur une pièce d'armure.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheArmurierExpert, new LearnableSkill(CustomSkill.CalligrapheArmurierExpert, "Expertise de la calligraphie d'armure", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription d'une inscription sur une pièce d'armure.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Wisdom, Ability.Charisma));

      learnableDictionary.Add(CustomSkill.CalligrapheBlindeur, new LearnableSkill(CustomSkill.CalligrapheBlindeur, "Calligraphe Blindeur", "Permet de réaliser des inscriptions ouvragées sur des boucliers et de leur donner vie sous forme d'effets magiques permanents.\n\nRéduit de 2 % par niveau le coût et le temps nécessaire pour réaliser une inscription.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheBlindeurMaitre, new LearnableSkill(CustomSkill.CalligrapheBlindeurMaitre, "Calligraphe Blindeur Maître", "Réduit de 2 % par niveau le temps et le coût de réalisation d'une inscription sur un bouclier.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheBlindeurScience, new LearnableSkill(CustomSkill.CalligrapheBlindeurScience, "Science de la calligraphie de bouclier", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur un bouclier.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheBlindeurExpert, new LearnableSkill(CustomSkill.CalligrapheBlindeurExpert, "Expertise de la calligraphie de bouclier", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur un bouclier.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Wisdom, Ability.Charisma));

      learnableDictionary.Add(CustomSkill.CalligrapheCiseleur, new LearnableSkill(CustomSkill.CalligrapheCiseleur, "Calligraphe Ciseleur", "Permet de réaliser des inscriptions ouvragées sur un ornement et de leur donner vie sous forme d'effets magiques permanents.\n\nRéduit de 2 % par niveau le coût et le temps nécessaire pour réaliser une inscription.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Intelligence, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheCiseleurMaitre, new LearnableSkill(CustomSkill.CalligrapheCiseleurMaitre, "Calligraphe Ciseleur Maître", "Réduit de 2 % par niveau le temps et le coût de réalisation d'une inscription sur un ornement.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheCiseleurScience, new LearnableSkill(CustomSkill.CalligrapheCiseleurScience, "Science de la calligraphie des ornements", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur un ornement.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Intelligence, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheCiseleurExpert, new LearnableSkill(CustomSkill.CalligrapheCiseleurExpert, "Expertise de la calligraphie des ornements", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur un ornement.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Intelligence, Ability.Charisma));

      learnableDictionary.Add(CustomSkill.CalligrapheFourbisseur, new LearnableSkill(CustomSkill.CalligrapheFourbisseur, "Calligraphe Coutelier", "Permet de réaliser des inscriptions ouvragées sur une arme et de leur donner vie sous forme d'effets magiques permanents.\n\nRéduit de 2 % par niveau le coût et le temps nécessaire pour réaliser une inscription.", Category.Craft, "ife_X2EpicRepu", 5, 1, Ability.Intelligence, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheFourbisseurMaitre, new LearnableSkill(CustomSkill.CalligrapheFourbisseurMaitre, "Calligraphe Coutelier Maître", "Réduit de 2 % par niveau le temps et le coût de réalisation d'une inscription sur une arme.", Category.Craft, "ife_X2EpicRepu", 5, 2, Ability.Wisdom, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheFourbisseurScience, new LearnableSkill(CustomSkill.CalligrapheFourbisseurScience, "Science de la calligraphie des armes", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur une arme.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 3, Ability.Intelligence, Ability.Charisma));
      learnableDictionary.Add(CustomSkill.CalligrapheFourbisseurExpert, new LearnableSkill(CustomSkill.CalligrapheFourbisseurExpert, "Expertise de la calligraphie des armes", "Réduit de 3 % par niveau le temps et le coût de réalisation d'une inscription sur une arme.\n\nAugmente de 1% la chance de ne pas consommer d'emplacement.", Category.Craft, "ife_X2EpicRepu", 5, 4, Ability.Intelligence, Ability.Charisma));

      learnableDictionary.Add(CustomSkill.CombattantPrecautionneux, new LearnableSkill(CustomSkill.CombattantPrecautionneux, "Combattant Précautionneux", "Diminue de 1 % par niveau le risque d'usure des objets.", Category.Fight, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Intelligence));

      learnableDictionary.Add(CustomSkill.CraftOnHandedMeleeWeapon, new LearnableSkill(CustomSkill.CraftOnHandedMeleeWeapon, "Fourbisseur léger", "Diminue le temps de fabrication, de réparation et le coût en matériaux des armes de mêlée à une main de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTwoHandedMeleeWeapon, new LearnableSkill(CustomSkill.CraftTwoHandedMeleeWeapon, "Fourbisseur lourd", "Diminue le temps de fabrication, de réparation et le coût en matériaux des armes de mêlée à deux mains de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftRangedWeapon, new LearnableSkill(CustomSkill.CraftRangedWeapon, "Artillier", "Diminue le temps de fabrication, de réparation et le coût en matériaux des armes à distance de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShield, new LearnableSkill(CustomSkill.CraftShield, "Blindeur", "Diminue le temps de fabrication, de réparation et le coût en matériaux des boucliers 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftArmor, new LearnableSkill(CustomSkill.CraftArmor, "Armurier", "Diminue le temps de fabrication, de réparation et le coût en matériaux des armures de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftClothes, new LearnableSkill(CustomSkill.CraftClothes, "Costumier", "Diminue le temps de fabrication, de réparation et le coût en matériaux des vêtements de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftAmmunitions, new LearnableSkill(CustomSkill.CraftAmmunitions, "Cartouchier", "Diminue le temps de fabrication, de réparation et le coût en matériaux des munitions de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));

      learnableDictionary.Add(CustomSkill.CraftClothing, new LearnableSkill(CustomSkill.CraftClothing, "Craft Vêtements", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftFullPlate, new LearnableSkill(CustomSkill.CraftFullPlate, "Craft Harnois", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHalfPlate, new LearnableSkill(CustomSkill.CraftHalfPlate, "Craft Armure de plaques", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSplintMail, new LearnableSkill(CustomSkill.CraftSplintMail, "Craft Clibanion", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBreastPlate, new LearnableSkill(CustomSkill.CraftBreastPlate, "Craft Cuirasse", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftScaleMail, new LearnableSkill(CustomSkill.CraftScaleMail, "Craft Chemise de mailles", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftStuddedLeather, new LearnableSkill(CustomSkill.CraftStuddedLeather, "Craft Cuir clouté", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLeatherArmor, new LearnableSkill(CustomSkill.CraftLeatherArmor, "Craft Armure de cuir", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftPaddedArmor, new LearnableSkill(CustomSkill.CraftPaddedArmor, "Craft Armure matelassée", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShortsword, new LearnableSkill(CustomSkill.CraftShortsword, "Craft Epée courte", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLongsword, new LearnableSkill(CustomSkill.CraftLongsword, "Craft Epée longue", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBattleAxe, new LearnableSkill(CustomSkill.CraftBattleAxe, "Craft Hache d'armes", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBastardSword, new LearnableSkill(CustomSkill.CraftBastardSword, "Craft Epée bâtarde", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLightFlail, new LearnableSkill(CustomSkill.CraftLightFlail, "Craft Fléau léger", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftWarHammer, new LearnableSkill(CustomSkill.CraftWarHammer, "Craft Marteau de guerre", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHeavyCrossbow, new LearnableSkill(CustomSkill.CraftHeavyCrossbow, "Craft Arbalète lourde", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLightCrossbow, new LearnableSkill(CustomSkill.CraftLightCrossbow, "Craft Arbalète légère", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLongBow, new LearnableSkill(CustomSkill.CraftLongBow, "Craft Arc long", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLightMace, new LearnableSkill(CustomSkill.CraftLightMace, "Craft Masse légère", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHalberd, new LearnableSkill(CustomSkill.CraftHalberd, "Craft Hallebarde", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShortBow, new LearnableSkill(CustomSkill.CraftShortBow, "Craft Arc court", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTwoBladedSword, new LearnableSkill(CustomSkill.CraftTwoBladedSword, "Craft Epée double", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftGreatSword, new LearnableSkill(CustomSkill.CraftGreatSword, "Craft Epée à deux mains", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSmallShield, new LearnableSkill(CustomSkill.CraftSmallShield, "Craft Rondache", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTorch, new LearnableSkill(CustomSkill.CraftTorch, "Craft Torche", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHelmet, new LearnableSkill(CustomSkill.CraftHelmet, "Craft Heaume", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftGreatAxe, new LearnableSkill(CustomSkill.CraftGreatAxe, "Craft Grande Hache", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftAmulet, new LearnableSkill(CustomSkill.CraftAmulet, "Craft Amulette", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftArrow, new LearnableSkill(CustomSkill.CraftArrow, "Craft Flêches", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBelt, new LearnableSkill(CustomSkill.CraftBelt, "Craft Ceinture", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDagger, new LearnableSkill(CustomSkill.CraftDagger, "Craft Dague", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBolt, new LearnableSkill(CustomSkill.CraftBolt, "Craft Carreaux", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBoots, new LearnableSkill(CustomSkill.CraftBoots, "Craft Bottes", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBullets, new LearnableSkill(CustomSkill.CraftBullets, "Craft Billes", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftClub, new LearnableSkill(CustomSkill.CraftClub, "Craft Gourdin", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDarts, new LearnableSkill(CustomSkill.CraftDarts, "Craft Dards", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDireMace, new LearnableSkill(CustomSkill.CraftDireMace, "Craft Masse double", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHeavyFlail, new LearnableSkill(CustomSkill.CraftHeavyFlail, "Craft Fléau lourd", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftGloves, new LearnableSkill(CustomSkill.CraftGloves, "Craft Gants", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLightHammer, new LearnableSkill(CustomSkill.CraftLightHammer, "Craft Marteau léger", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftHandAxe, new LearnableSkill(CustomSkill.CraftHandAxe, "Craft Hachette", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftKama, new LearnableSkill(CustomSkill.CraftKama, "Craft Kama", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftKukri, new LearnableSkill(CustomSkill.CraftKukri, "Craft Kukri", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftMagicRod, new LearnableSkill(CustomSkill.CraftMagicRod, "Craft Bâton magique", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftStaff, new LearnableSkill(CustomSkill.CraftStaff, "Craft Bourdon", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftMagicWand, new LearnableSkill(CustomSkill.CraftMagicWand, "Craft Baguette magique", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftMorningStar, new LearnableSkill(CustomSkill.CraftMorningStar, "Craft Morgenstern", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftPotion, new LearnableSkill(CustomSkill.CraftPotion, "Craft Potion", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Intelligence, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftQuarterstaff, new LearnableSkill(CustomSkill.CraftQuarterstaff, "Craft Bâton", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftRapier, new LearnableSkill(CustomSkill.CraftRapier, "Craft Rapière", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftRing, new LearnableSkill(CustomSkill.CraftRing, "Craft Anneau", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftScimitar, new LearnableSkill(CustomSkill.CraftScimitar, "Craft Cimeterre", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftScythe, new LearnableSkill(CustomSkill.CraftScythe, "Craft Faux", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftLargeShield, new LearnableSkill(CustomSkill.CraftLargeShield, "Craft Ecu", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTowerShield, new LearnableSkill(CustomSkill.CraftTowerShield, "Craft Pavois", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShortSpear, new LearnableSkill(CustomSkill.CraftShortSpear, "Craft Lance", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftShuriken, new LearnableSkill(CustomSkill.CraftShuriken, "Craft Shuriken", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSickle, new LearnableSkill(CustomSkill.CraftSickle, "Craft Serpe", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSling, new LearnableSkill(CustomSkill.CraftSling, "Craft Fronde", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftThrowingAxe, new LearnableSkill(CustomSkill.CraftThrowingAxe, "Craft Hache de lancer", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftBracer, new LearnableSkill(CustomSkill.CraftBracer, "Craft Brassard", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftCloak, new LearnableSkill(CustomSkill.CraftCloak, "Craft Cape", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 1, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftTrident, new LearnableSkill(CustomSkill.CraftTrident, "Craft Trident", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDwarvenWarAxe, new LearnableSkill(CustomSkill.CraftDwarvenWarAxe, "Craft Hache naine", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftWhip, new LearnableSkill(CustomSkill.CraftWhip, "Craft Fouet", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Dexterity, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftDoubleAxe, new LearnableSkill(CustomSkill.CraftDoubleAxe, "Craft Hache double", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftKatana, new LearnableSkill(CustomSkill.CraftKatana, "Craft Katana", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 3, Ability.Strength, Ability.Constitution));
      learnableDictionary.Add(CustomSkill.CraftSpellScroll, new LearnableSkill(CustomSkill.CraftSpellScroll, "Craft Parchemin", "Diminue le temps de fabrication, de réparation et le coût en matériaux de l'objet concerné de 1 % par niveau.", Category.Craft, "ife_X2EpicRepu", 10, 2, Ability.Intelligence, Ability.Constitution));

      // COMBAT SKILLS
      learnableDictionary.Add(CustomSkill.SeverArtery, new LearnableSkill(CustomSkill.SeverArtery, "Tranche-artère", "Adrénaline : 4\nAttaque à l'épée.\nInflige 5...21...25 secondes de saignement.", Category.Fight, "ife_SeverA", 5, 1, Ability.Strength, Ability.Dexterity));

      // INSCRIPTIONS
      learnableDictionary.Add(CustomInscription.Cuirassé, new LearnableSkill(CustomInscription.Cuirassé, "Cuirassé", "Inscription de pièce d'armure\n\n+1 Armure et consomme un emplacement libre d'inscription.", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Absorption, new LearnableSkill(CustomInscription.Absorption, "Absorption", "Inscription de pièce d'armure\n\n-1 dégâts physiques aux coups portés sur la pièce d'armure où se trouve cette inscription.\nConsomme un emplacement libre d'inscription\nSe cumule jusqu'à -3 maximum.", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Prismatique, new LearnableSkill(CustomInscription.Prismatique, "Prismatique", "Inscription de pièce d'armure\n\n+1 Armure si maîtrise de l'air > 14\n+1 Armure si maîtrise de la terre > 14\n+1 Armure si maîtrise du feu > 14\n+1 Armure si maîtrise de l'eau > 14\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Artisan, new LearnableSkill(CustomInscription.Artisan, "Artisan", "Inscription de pièce d'armure\n\n+1 Armure par sceau équipé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeDragon, new LearnableSkill(CustomInscription.GardeDragon, "Garde-Dragon", "Inscription de pièce d'armure\n\n+3 Armure contre les dragons\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeExtérieur, new LearnableSkill(CustomInscription.GardeExtérieur, "Garde-Extérieur", "Inscription de pièce d'armure\n\n+3 Armure contre les extérieurs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeAberration, new LearnableSkill(CustomInscription.GardeAberration, "Garde-Aberration", "Inscription de pièce d'armure\n\n+3 Armure contre les aberrations\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeElementaire, new LearnableSkill(CustomInscription.GardeElementaire, "Garde-Elémentaire", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Persécuteur, new LearnableSkill(CustomInscription.Persécuteur, "Persécuteur", "Inscription de pièce d'armure\n\n+1 Armure\n+6 aux dégâts divins reçus sur cette pièce d'armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Inflexible, new LearnableSkill(CustomInscription.Inflexible, "Inflexible", "Inscription de pièce d'armure\n\n+1 Armure contre les dégâts physiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Redoutable, new LearnableSkill(CustomInscription.Redoutable, "Redoutable", "Inscription de pièce d'armure\n\n+1 Armure contre les dégâts élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Marchevent, new LearnableSkill(CustomInscription.Marchevent, "Marche-Vent", "Inscription de pièce d'armure\n\n+1 Armure si affecté par 3 sorts positifs\n+2 Armure si affecté par 4 sorts positifs\n+3 Armure si affecté par 5 sorts positifs\n+4 Armure si affecté par 6 sorts positifs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeGeant, new LearnableSkill(CustomInscription.GardeGeant, "Garde-Géant", "Inscription de pièce d'armure\n\n+3 Armure contre les géants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeMagie, new LearnableSkill(CustomInscription.GardeMagie, "Garde-Magie", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures magiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeBon, new LearnableSkill(CustomInscription.GardeBon, "Garde-Bien", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées au Bien\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeChaos, new LearnableSkill(CustomInscription.GardeChaos, "Garde-Chaos", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées au Chaos\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeMal, new LearnableSkill(CustomInscription.GardeMal, "Garde-Mal", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées au Mal\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeNeutre, new LearnableSkill(CustomInscription.GardeNeutre, "Garde-Neutre", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées de façon Neutre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeLoi, new LearnableSkill(CustomInscription.GardeLoi, "Garde-Loi", "Inscription de pièce d'armure\n\n+2 Armure contre les créatures alignées à la Loi\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Hivernal, new LearnableSkill(CustomInscription.Hivernal, "Hivernal", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Polaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Ignifugé, new LearnableSkill(CustomInscription.Ignifugé, "Ignifugé", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts de Feu\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Paratonnerre, new LearnableSkill(CustomInscription.Paratonnerre, "Paratonerre", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts de Foudre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Tectonique, new LearnableSkill(CustomInscription.Tectonique, "Tectonique", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Terrestres\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Infiltrateur, new LearnableSkill(CustomInscription.Infiltrateur, "Infiltrateur", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Perçants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Saboteur, new LearnableSkill(CustomInscription.Saboteur, "Saboteur", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Tranchants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.AvantGarde, new LearnableSkill(CustomInscription.AvantGarde, "Avant-Garde", "Inscription de pièce d'armure\n\n+2 Armure contre les dégâts Contondants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeHalfelin, new LearnableSkill(CustomInscription.GardeHalfelin, "Garde-Halfelin", "Inscription de pièce d'armure\n\n+3 Armure contre les Halfelins\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeHumain, new LearnableSkill(CustomInscription.GardeHumain, "Garde-Humain", "Inscription de pièce d'armure\n\n+3 Armure contre les Humains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeDemiElfe, new LearnableSkill(CustomInscription.GardeDemiElfe, "Garde-Demi-Elfe", "Inscription de pièce d'armure\n\n+3 Armure contre les Demi-Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeDemiOrc, new LearnableSkill(CustomInscription.GardeDemiOrc, "Garde-Demi-Orc", "Inscription de pièce d'armure\n\n+3 Armure contre les Demi-Orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeElfe, new LearnableSkill(CustomInscription.GardeElfe, "Garde-Elfe", "Inscription de pièce d'armure\n\n+3 Armure contre les Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeGnome, new LearnableSkill(CustomInscription.GardeGnome, "Garde-Gnome", "Inscription de pièce d'armure\n\n+3 Armure contre les Gnomes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeNain, new LearnableSkill(CustomInscription.GardeNain, "Garde-Gnome", "Inscription de pièce d'armure\n\n+3 Armure contre les Nains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Agitateur, new LearnableSkill(CustomInscription.Agitateur, "Agitateur", "Inscription de pièce d'armure\n\n+1 Armure en attaquant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Sentinelle, new LearnableSkill(CustomInscription.Sentinelle, "Sentinelle", "Inscription de pièce d'armure\n\n+1 Armure avec une pose de combat\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Belluaire, new LearnableSkill(CustomInscription.Belluaire, "Belluaire", "Inscription de pièce d'armure\n\n+1 Armure tant que votre compagnon animal est vivant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Eclaireur, new LearnableSkill(CustomInscription.Eclaireur, "Eclaireur", "Inscription de pièce d'armure\n\n+1 Armure tant que vous êtes sous l'effet d'une préparation\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Disciple, new LearnableSkill(CustomInscription.Disciple, "Disciple", "Inscription de pièce d'armure\n\n+2 Armure tant que vous êtes affecté par une condition\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Virtuose, new LearnableSkill(CustomInscription.Virtuose, "Virtuose", "Inscription de pièce d'armure\n\n+2 Armure tant que incantez un sort\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Fossoyeur, new LearnableSkill(CustomInscription.Fossoyeur, "Fossoyeur", "Inscription de pièce d'armure\n\n+1 Armure tant que vous êtes à moins de 80 % de votre santé max\n+2 Armure tant que vous êtes à moins de 60 % de votre santé max\n+3 Armure tant que vous êtes à moins de 40 % de votre santé max\n+4 Armure tant que vous êtes à moins de 20 % de votre santé max\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Prodige, new LearnableSkill(CustomInscription.Prodige, "Prodige", "Inscription de pièce d'armure\n\n+1 Armure tant que vous rechargez 2 capacités\n+2 Armure tant que vous rechargez 4 capacités\n+3 Armure tant que vous rechargez 6 capacités\n+4 Armure tant que vous rechargez 8 capacités\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Destructeur, new LearnableSkill(CustomInscription.Destructeur, "Destructeur", "Inscription de pièce d'armure\n\n+3 Armure tant que vous êtes affecté par un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Bénédiction, new LearnableSkill(CustomInscription.Bénédiction, "Bénédiction", "Inscription de pièce d'armure\n\n+1 Armure tant que vous êtes affecté par un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Centurion, new LearnableSkill(CustomInscription.Centurion, "Bénédiction", "Inscription de pièce d'armure\n\n+1 Armure tant que vous êtes affecté par un cri, un écho ou un chant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Oublié, new LearnableSkill(CustomInscription.Oublié, "Oublié", "Inscription de pièce d'armure\n\n+1 Armure tant que vous n'êtes affecté par aucun sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeNonVie, new LearnableSkill(CustomInscription.GardeNonVie, "Garde-Non-Vie", "Inscription de pièce d'armure\n\n+3 Armure contre les mort-vivants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeArtifice, new LearnableSkill(CustomInscription.GardeArtifice, "Garde-Artifice", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures artificielles\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeOrc, new LearnableSkill(CustomInscription.GardeOrc, "Garde-Orc", "Inscription de pièce d'armure\n\n+3 Armure contre les orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Lieutenant, new LearnableSkill(CustomInscription.Lieutenant, "Lieutenant", "Inscription de pièce d'armure\n\n-2% de durée des maléfices\n-4 Armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.MaîtreBlème, new LearnableSkill(CustomInscription.MaîtreBlème, "Maître-Blème", "Inscription de pièce d'armure\n\n+1 Armure tant que vous contrôlez 1 mort-vivant\n+2 Armure tant que vous contrôlez 3 mort-vivants\n+3 Armure tant que vous contrôlez 5 mort-vivants\n+4 Armure tant que vous contrôlez 8 mort-vivants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Marionnettiste, new LearnableSkill(CustomInscription.Marionnettiste, "Marionnettiste", "Inscription de pièce d'armure\n\n+1 Armure tant que vous contrôlez 1 invocation\n+2 Armure tant que vous contrôlez 3 invocation\n+3 Armure tant que vous contrôlez 5 invocations\n+4 Armure tant que vous contrôlez 8 invocations\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Chaman, new LearnableSkill(CustomInscription.Chaman, "Chaman", "Inscription de pièce d'armure\n\n+1 Armure tant que vous contrôlez 1 esprit\n+2 Armure tant que vous contrôlez 3 esprits\n+3 Armure tant que vous contrôlez 5 esprits\n+4 Armure tant que vous contrôlez 8 esprits\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeMonstre, new LearnableSkill(CustomInscription.GardeMonstre, "Garde-Monstre", "Inscription de pièce d'armure\n\n+3 Armure contre les Monstres Primitifs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeHumanoïde, new LearnableSkill(CustomInscription.GardeHumanoïde, "Garde-Humanoïde", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures Humanoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeMétamorphe, new LearnableSkill(CustomInscription.GardeMétamorphe, "Garde-Métamorphe", "Inscription de pièce d'armure\n\n+3 Armure contre les Métamorphes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeGoblinoïde, new LearnableSkill(CustomInscription.GardeGoblinoïde, "Garde-Goblinoïde", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures Gobelinoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeAnimal, new LearnableSkill(CustomInscription.GardeAnimal, "Garde-Animal", "Inscription de pièce d'armure\n\n+3 Armure contre les animaux\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeReptilien, new LearnableSkill(CustomInscription.GardeReptilien, "Garde-Reptilien", "Inscription de pièce d'armure\n\n+3 Armure contre les créatures Reptiliennes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.GardeVermine, new LearnableSkill(CustomInscription.GardeVermine, "Garde-Vermine", "Inscription de pièce d'armure\n\n+3 Armure contre les vermines\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Pourfendeur, new LearnableSkill(CustomInscription.Pourfendeur, "Pourfendeur", "Inscription d'arme\n\n+1% Dégâts\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Défense, new LearnableSkill(CustomInscription.Défense, "Défense", "Inscription d'arme\n\n+1 Armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Courage, new LearnableSkill(CustomInscription.Courage, "Courage", "Inscription d'arme\n\n+4 Santé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Fulgurance, new LearnableSkill(CustomInscription.Fulgurance, "Fulgurance", "Inscription d'arme\n\n1% de chance de diminuer de moitié le temps d'incantation de vos sorts\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Extension, new LearnableSkill(CustomInscription.Extension, "Extension", "Inscription d'arme\n\n6% de durées supplémentaires pour les sorts positifs que vous lancez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Vampirisme, new LearnableSkill(CustomInscription.Vampirisme, "Vampirisme", "Inscription d'arme\n\n+1 de drain de vie\n-1 de régénération de santé\nCumulable jusqu'à +3 max\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Zèle, new LearnableSkill(CustomInscription.Zèle, "Zèle", "Inscription d'arme\n\n+1 de gain d'énergie au touché\n-1 de régénération de santé\nNon cumulable\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurDragon, new LearnableSkill(CustomInscription.PourfendeurDragon, "Pourfendeur de Dragon", "Inscription d'arme\n\n+3% de dégâts contre les Dragons\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurExtérieur, new LearnableSkill(CustomInscription.PourfendeurExtérieur, "Pourfendeur d'Extérieur", "Inscription d'arme\n\n+3% de dégâts contre les Extérieurs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurAberration, new LearnableSkill(CustomInscription.PourfendeurAberration, "Pourfendeur d'Aberration", "Inscription d'arme\n\n+3% de dégâts contre les Aberrations\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurElementaire, new LearnableSkill(CustomInscription.PourfendeurElementaire, "Pourfendeur Elémentaire", "Inscription d'arme\n\n+3% de dégâts contre les créature élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.ForceEtHonneur, new LearnableSkill(CustomInscription.ForceEtHonneur, "Force & Honneur", "Inscription d'arme\n\n+2% de dégâts tant que votre santé est au-dessus de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MaîtreDeSonDestin, new LearnableSkill(CustomInscription.MaîtreDeSonDestin, "Maître de son Destin", "Inscription d'arme\n\n+2% de dégâts tant vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.DanseAvecLaMort, new LearnableSkill(CustomInscription.DanseAvecLaMort, "Danse avec la Mort", "Inscription d'arme\n\n+2% de dégâts tant vous êtes sous l'effet d'une pose de combat\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Sadisme, new LearnableSkill(CustomInscription.Sadisme, "Sadisme", "Inscription d'arme\n\n+3% de dégâts contre les cibles affectées par un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Masochisme, new LearnableSkill(CustomInscription.Masochisme, "Masochisme", "Inscription d'arme\n\n+2% de dégâts\n-1 Armure tant que vous attaquez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.QueDuMuscle, new LearnableSkill(CustomInscription.QueDuMuscle, "Que du muscle", "Inscription d'arme\n\n+2% de dégâts\n-1 Energie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Refuge, new LearnableSkill(CustomInscription.Refuge, "Refuge", "Inscription d'arme\n\n+1 Armure contre les dégâts physiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Protecteur, new LearnableSkill(CustomInscription.Protecteur, "Protecteur", "Inscription d'arme\n\n+1 Armure contre les dégâts élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Dévotion, new LearnableSkill(CustomInscription.Dévotion, "Dévotion", "Inscription d'arme\n\n+6 Santé tant que vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Endurance, new LearnableSkill(CustomInscription.Endurance, "Endurance", "Inscription d'arme\n\n+6 Santé tant que vous êtes sous l'effet d'une pose de combat\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Valeur, new LearnableSkill(CustomInscription.Valeur, "Valeur", "Inscription d'arme\n\n+8 Santé tant que vous êtes affecté par un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Sérénité, new LearnableSkill(CustomInscription.Sérénité, "Sérénité", "Inscription d'arme\n\n1% de chance de diviser par deux le temps de recharge de vos capacités\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.ToutAuTalent, new LearnableSkill(CustomInscription.ToutAuTalent, "Tout au Talent", "Inscription d'arme\n\n2% de chance de diviser par deux le temps d'incantation des sorts correspondant à l'attribut de votre arme\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Vision, new LearnableSkill(CustomInscription.Vision, "Vision", "Inscription d'arme\n\n+1 Energie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurGéant, new LearnableSkill(CustomInscription.PourfendeurGéant, "Pourfendeur de Géant", "Inscription d'arme\n\n+3% de dégâts contre les Géants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurMagie, new LearnableSkill(CustomInscription.PourfendeurMagie, "Pourfendeur Magique", "Inscription d'arme\n\n+3% de dégâts contre les créatures Magiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurBien, new LearnableSkill(CustomInscription.PourfendeurBien, "Pourfendeur du Bien", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées au Bien\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurChaos, new LearnableSkill(CustomInscription.PourfendeurChaos, "Pourfendeur du Chaos", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées au Chaos\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurMal, new LearnableSkill(CustomInscription.PourfendeurMal, "Pourfendeur du Mal", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées au Mal\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurNeutralité, new LearnableSkill(CustomInscription.PourfendeurNeutralité, "Pourfendeur de la Neutralité", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées de façon Neutre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurLoi, new LearnableSkill(CustomInscription.PourfendeurLoi, "Pourfendeur de la Loi", "Inscription d'arme\n\n+2% de dégâts contre les créatures alignées à la Loi\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.VengeanceSeraMienne, new LearnableSkill(CustomInscription.VengeanceSeraMienne, "Vengeance sera mienne", "Inscription d'arme\n\n+3% de dégâts tant que votre santé est en-dessous de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.AccueillezLaFaucheuse, new LearnableSkill(CustomInscription.AccueillezLaFaucheuse, "Accueillez la Faucheuse", "Inscription d'arme\n\n+3% tant que vous êtes affecté par un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Givroclaste, new LearnableSkill(CustomInscription.Givroclaste, "Givroclaste", "Inscription d'arme\n\n+2% de dégâts Polaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Pyroclaste, new LearnableSkill(CustomInscription.Pyroclaste, "Pyroclaste", "Inscription d'arme\n\n+2% de dégâts de Feu\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Electroclaste, new LearnableSkill(CustomInscription.Electroclaste, "Electroclaste", "Inscription d'arme\n\n+2% de dégâts de Foudre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Séismoclaste, new LearnableSkill(CustomInscription.Séismoclaste, "Séismoclaste", "Inscription d'arme\n\n+2% de dégâts Terrestres\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Aiguillon, new LearnableSkill(CustomInscription.Aiguillon, "Aiguillon", "Inscription d'arme\n\n+1% de dégâts de Perçant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Rasoir, new LearnableSkill(CustomInscription.Rasoir, "Rasoir", "Inscription d'arme\n\n+1% de dégâts de Tranchant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Fracasseur, new LearnableSkill(CustomInscription.Fracasseur, "Fracasseur", "Inscription d'arme\n\n+1% de dégâts de Contondant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurHalfelin, new LearnableSkill(CustomInscription.PourfendeurHalfelin, "Pourfendeur d'Halfelin", "Inscription d'arme\n\n+3% de dégâts contre les Hafelins\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurHumain, new LearnableSkill(CustomInscription.PourfendeurHumain, "Pourfendeur d'Humain", "Inscription d'arme\n\n+3% de dégâts contre les Humains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurDemiElfe, new LearnableSkill(CustomInscription.PourfendeurDemiElfe, "Pourfendeur de Demi-Elfe", "Inscription d'arme\n\n+3% de dégâts contre les Demi-Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurDemiOrc, new LearnableSkill(CustomInscription.PourfendeurDemiOrc, "Pourfendeur de Demi-Orc", "Inscription d'arme\n\n+3% de dégâts contre les Demi-Orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurElfe, new LearnableSkill(CustomInscription.PourfendeurElfe, "Pourfendeur d'Elfe", "Inscription d'arme\n\n+3% de dégâts contre les Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurGnome, new LearnableSkill(CustomInscription.PourfendeurGnome, "Pourfendeur de Gnome", "Inscription d'arme\n\n+3% de dégâts contre les Gnomes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurNain, new LearnableSkill(CustomInscription.PourfendeurNain, "Pourfendeur de Nain", "Inscription d'arme\n\n+3% de dégâts contre les Nains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.LaSécuritéAvantTout, new LearnableSkill(CustomInscription.LaSécuritéAvantTout, "La sécurité avant tout !", "Inscription d'arme\n\n+1 d'énergie tant que votre santé est au-dessus de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.AyezFoi, new LearnableSkill(CustomInscription.AyezFoi, "Ayez foi", "Inscription d'arme\n\n+1 d'énergie tant que vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.AucunRecours, new LearnableSkill(CustomInscription.AucunRecours, "Aucun recours !", "Inscription d'arme\n\n+2 d'énergie tant que votre santé est en-dessous de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MienneEstLaPeine, new LearnableSkill(CustomInscription.MienneEstLaPeine, "Mienne est la peine", "Inscription d'arme\n\n+2 d'énergie tant que vous êtes sous l'effet d'un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.CarpeDiem, new LearnableSkill(CustomInscription.CarpeDiem, "Carpe Diem", "Inscription d'arme\n\n+15 d'énergie\n-1 de récupération d'énergie\nNon cumulable\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Sismique, new LearnableSkill(CustomInscription.Sismique, "Sismique", "Inscription d'arme\n\nVotre arme effectue désormais des dégâts Terrestres\nConsomme un emplacement libre d'inscription\nAppliquer cette inscription sur une arme disposant déjà d'une modification de dégâts remplacera la précédente", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Incendiaire, new LearnableSkill(CustomInscription.Incendiaire, "Incendiaire", "Inscription d'arme\n\nVotre arme effectue désormais des dégâts de Feu\nConsomme un emplacement libre d'inscription\nAppliquer cette inscription sur une arme disposant déjà d'une modification de dégâts remplacera la précédente", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Polaire, new LearnableSkill(CustomInscription.Polaire, "Polaire", "Inscription d'arme\n\nVotre arme effectue désormais des dégâts Polaires\nConsomme un emplacement libre d'inscription\nAppliquer cette inscription sur une arme disposant déjà d'une modification de dégâts remplacera la précédente", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Electrocution, new LearnableSkill(CustomInscription.Electrocution, "Electrocution", "Inscription d'arme\n\nVotre arme effectue désormais des dégâts de Foudre\nConsomme un emplacement libre d'inscription\nAppliquer cette inscription sur une arme disposant déjà d'une modification de dégâts remplacera la précédente", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Fureur, new LearnableSkill(CustomInscription.Fureur, "Fureur", "Inscription d'arme\n\n1% de chance de doubler l'adrénaline lors de vos attaques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Pénétration, new LearnableSkill(CustomInscription.Pénétration, "Pénétration", "Inscription d'arme\n\n3% de chance d'obtenir +20% de pénétration d'armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurNonVie, new LearnableSkill(CustomInscription.PourfendeurNonVie, "Pourfendeur de la Non-Vie", "Inscription d'arme\n\n+3% de dégâts contre les mort-vivants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurOrc, new LearnableSkill(CustomInscription.PourfendeurOrc, "Pourfendeur d'Orc", "Inscription d'arme\n\n+3% de dégâts contre les Orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Maîtrise, new LearnableSkill(CustomInscription.Maîtrise, "Maîtrise", "Inscription d'arme\n\n+3% de chance de donner +1 à la compétence de maîtrise de l'objet lors de l'utilisation d'un sort ou d'une compétence\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Adepte, new LearnableSkill(CustomInscription.Adepte, "Adepte", "Inscription d'arme\n\n+3% de chance de diviser par deux le temps d'incantation des sorts liés à l'attribut de votre arme\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Barbelé, new LearnableSkill(CustomInscription.Barbelé, "Barbelé", "Inscription d'arme\n\n+4% de durée des effets de saignements que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Atrocité, new LearnableSkill(CustomInscription.Atrocité, "Atrocité", "Inscription d'arme\n\n+4% de durée des effets de blessures profondes que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Handicapant, new LearnableSkill(CustomInscription.Handicapant, "Handicapant", "Inscription d'arme\n\n+4% de durée des effets d'infirmités que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Pesanteur, new LearnableSkill(CustomInscription.Pesanteur, "Pesanteur", "Inscription d'arme\n\n+4% de durée des effets des faiblesses que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Venimeuse, new LearnableSkill(CustomInscription.Venimeuse, "Venimeuse", "Inscription d'arme\n\n+4% de durée des effets d'empoisonnement que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Mutisme, new LearnableSkill(CustomInscription.Mutisme, "Mutisme", "Inscription d'arme\n\n+4% de durée des effets d'étourdissement que vous infligez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurMonstres, new LearnableSkill(CustomInscription.PourfendeurMonstres, "Pourfendeur de Monstres", "Inscription d'arme\n\n+3% de dégâts contre les Monstres Primitifs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurHumanoïdes, new LearnableSkill(CustomInscription.PourfendeurHumanoïdes, "Pourfendeur d'Humanoïdes", "Inscription d'arme\n\n+3% de dégâts contre les créatures Humanoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurMétamorphes, new LearnableSkill(CustomInscription.PourfendeurMétamorphes, "Pourfendeur de Métamorphes", "Inscription d'arme\n\n+3% de dégâts contre les Métamorphes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurGobelins, new LearnableSkill(CustomInscription.PourfendeurGobelins, "Pourfendeur de Gobelins", "Inscription d'arme\n\n+3% de dégâts contre les créatures Gobelinoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurAnimal, new LearnableSkill(CustomInscription.PourfendeurAnimal, "Pourfendeur Animal", "Inscription d'arme\n\n+3% de dégâts contre les animaux\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurReptilien, new LearnableSkill(CustomInscription.PourfendeurReptilien, "Pourfendeur Reptilien", "Inscription d'arme\n\n+3% de dégâts contre les créatures Reptiliennes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PourfendeurVermine, new LearnableSkill(CustomInscription.PourfendeurVermine, "Pourfendeur de Vermine", "Inscription d'arme\n\n+3% de dégâts contre les Vermines\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Blindé, new LearnableSkill(CustomInscription.Blindé, "Blindé", "Inscription de bouclier\n\n+1 d'armure\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseDragon, new LearnableSkill(CustomInscription.RepousseDragon, "Repousse Dragon", "Inscription de bouclier\n\n+2 d'armure contre les Dragons\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseExtérieur, new LearnableSkill(CustomInscription.RepousseExtérieur, "Repousse Extérieur", "Inscription de bouclier\n\n+2 d'armure contre les Extérieurs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseAberration, new LearnableSkill(CustomInscription.RepousseAberration, "Repousse Aberration", "Inscription de bouclier\n\n+2 d'armure contre les Aberrations\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseElementaire, new LearnableSkill(CustomInscription.RepousseElementaire, "Repousse Elémentaire", "Inscription de bouclier\n\n+2 d'armure contre les créatures élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LongueVieAuRoi, new LearnableSkill(CustomInscription.LongueVieAuRoi, "Longue vie au Roi !", "Inscription de bouclier\n\n+1 d'armure tant que votre santé est au-dessus de 50%\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LaFoiEstMonBouclier, new LearnableSkill(CustomInscription.LaFoiEstMonBouclier, "La Foi est mon bouclier", "Inscription de bouclier\n\n+1 d'armure tant que vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LaSurvieDuMieuxEquipé, new LearnableSkill(CustomInscription.LaSurvieDuMieuxEquipé, "La survie du mieux équipé", "Inscription de bouclier\n\n+1 d'armure contre les dégâts physiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.ParéEnTouteSaison, new LearnableSkill(CustomInscription.ParéEnTouteSaison, "Paré en toute saison", "Inscription de bouclier\n\n+1 d'armure contre les dégâts élémentaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseGéant, new LearnableSkill(CustomInscription.RepousseGéant, "Repousse Géant", "Inscription de bouclier\n\n+2 d'armure contre les géants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseMagie, new LearnableSkill(CustomInscription.RepousseMagie, "Repousse Magie", "Inscription de bouclier\n\n+2 d'armure contre les créatures magiques\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseBon, new LearnableSkill(CustomInscription.RepousseBon, "Repousse Bon", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées au Bien\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseChaos, new LearnableSkill(CustomInscription.RepousseChaos, "Repousse Chaos", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées au Chaos\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseMal, new LearnableSkill(CustomInscription.RepousseMal, "Repousse Mal", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées au Mal\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseNeutre, new LearnableSkill(CustomInscription.RepousseNeutre, "Repousse Neutre", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées de façon Neutre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseLoi, new LearnableSkill(CustomInscription.RepousseLoi, "Repousse Loi", "Inscription de bouclier\n\n+2 d'armure contre les créatures alignées à la Loi\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.ContreVentsEtMarées, new LearnableSkill(CustomInscription.ContreVentsEtMarées, "Contre vents et marées", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Perçants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.lEnigmeDelAcier, new LearnableSkill(CustomInscription.lEnigmeDelAcier, "L'énigme de l'acier", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Tranchants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.PasLeVisage, new LearnableSkill(CustomInscription.PasLeVisage, "Pas le visage !", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Contondants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.PortéParLeVent, new LearnableSkill(CustomInscription.PortéParLeVent, "Porté par le vent", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Polaires\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.CommeUnRoc, new LearnableSkill(CustomInscription.CommeUnRoc, "Comme un roc", "Inscription de bouclier\n\n+2 d'armure contre les dégâts Terrestres\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Illumination, new LearnableSkill(CustomInscription.Illumination, "Illumination", "Inscription de bouclier\n\n+2 d'armure contre les dégâts de Feu\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.ChevaucheLaTempête, new LearnableSkill(CustomInscription.ChevaucheLaTempête, "Chevauche la tempête", "Inscription de bouclier\n\n+2 d'armure contre les dégâts de Foudre\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseHalfelin, new LearnableSkill(CustomInscription.RepousseHalfelin, "Repousse Halfelin", "Inscription de bouclier\n\n+2 d'armure contre les Halfelins\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseHumain, new LearnableSkill(CustomInscription.RepousseHumain, "Repousse Humain", "Inscription de bouclier\n\n+2 d'armure contre les Humains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseDemiElfe, new LearnableSkill(CustomInscription.RepousseDemiElfe, "Repousse Demi-Elfe", "Inscription de bouclier\n\n+2 d'armure contre les Demi-Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseDemiOrc, new LearnableSkill(CustomInscription.RepousseDemiOrc, "Repousse Demi-Orc", "Inscription de bouclier\n\n+2 d'armure contre les Demi-Orcs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseElfe, new LearnableSkill(CustomInscription.RepousseElfe, "Repousse Elfe", "Inscription de bouclier\n\n+2 d'Armure contre les Elfes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseGnome, new LearnableSkill(CustomInscription.RepousseGnome, "Repousse Gnome", "Inscription de bouclier\n\n+2 d'Armure contre les Gnomes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseNain, new LearnableSkill(CustomInscription.RepousseNain, "Repousse Nain", "Inscription de bouclier\n\n+2 d'Armure contre les Nains\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LaRaisonDuPlusFort, new LearnableSkill(CustomInscription.LaRaisonDuPlusFort, "La raison du plus fort", "Inscription de bouclier\n\n+1 d'armure tant que vous attaquez\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.SavoirNestQueLaMoitiéDuChemin, new LearnableSkill(CustomInscription.SavoirNestQueLaMoitiéDuChemin, "Savoir n'est que la moitié du chemin", "Inscription de bouclier\n\n+1 d'armure tant que vous lancez un sort\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.CeNestQuuneEgratignure, new LearnableSkill(CustomInscription.CeNestQuuneEgratignure, "Ce n'est qu'une égratignure", "Inscription de bouclier\n\n+2 d'armure tant que votre santé est en-dessous de 50 %\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.NeTremblezPas, new LearnableSkill(CustomInscription.NeTremblezPas, "Ne tremblez pas", "Inscription de bouclier\n\n+2 d'Armure tant que vous êtes sous l'effet d'un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Vigueur, new LearnableSkill(CustomInscription.Vigueur, "Vigueur", "Inscription de bouclier\n\n+4 Santé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseNonVie, new LearnableSkill(CustomInscription.RepousseNonVie, "Repousse Non-Vie", "Inscription de bouclier\n\n+2 d'Armure contre les mort-vivants\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseOrc, new LearnableSkill(CustomInscription.RepousseOrc, "Repousse Orc", "Inscription de bouclier\n\n+2 d'Armure contre les créatures artificielles\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Piété, new LearnableSkill(CustomInscription.Piété, "Piété", "Inscription de bouclier\n\n+6 de Santé tant que vous êtes sous l'effet d'un sort positif\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Ténacité, new LearnableSkill(CustomInscription.Ténacité, "Ténacité", "Inscription de bouclier\n\n+6 de Santé tant que vous êtes sous l'effet d'une pose de combat\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.Détermination, new LearnableSkill(CustomInscription.Détermination, "Détermination", "Inscription de bouclier\n\n+8 de Santé tant que vous êtes sous l'effet d'un maléfice\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.HeureuxLesSimplesdEsprits, new LearnableSkill(CustomInscription.HeureuxLesSimplesdEsprits, "Heureux les simples d'esprits", "Inscription de bouclier\n\n+1 d'Armure\n-1 d'Energie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.LaVieNestQueDouleur, new LearnableSkill(CustomInscription.LaVieNestQueDouleur, "La vie n'est que douleur", "Inscription de bouclier\n\n+1 d'Armure\n-3 de Santé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseMonstre, new LearnableSkill(CustomInscription.RepousseMonstre, "Repousse Monstre", "Inscription de bouclier\n\n+2 d'Armure contre les Monstres Primitifs\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseHumanoïde, new LearnableSkill(CustomInscription.RepousseHumanoïde, "Repousse Humanoïde", "Inscription de bouclier\n\n+2 d'Armure contre les créatures Humanoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseGobelinoïde, new LearnableSkill(CustomInscription.RepousseGobelinoïde, "Repousse Gobelin", "Inscription de bouclier\n\n+2 d'Armure contre les créatures Gobelinoïdes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseAnimal, new LearnableSkill(CustomInscription.RepousseAnimal, "Repousse Animal", "Inscription de bouclier\n\n+2 d'Armure contre les Animaux\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseMétamorphe, new LearnableSkill(CustomInscription.RepousseMétamorphe, "Repousse Métamorphe", "Inscription de bouclier\n\n+2 d'Armure contre les Métamorphes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseReptilien, new LearnableSkill(CustomInscription.RepousseReptilien, "Repousse Reptilien", "Inscription de bouclier\n\n+2 d'Armure contre les créatures Reptiliennes\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.RepousseVermine, new LearnableSkill(CustomInscription.RepousseVermine, "Repousse Vermine", "Inscription de bouclier\n\n+2 d'Armure contre les Vermines\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Wisdom));
      learnableDictionary.Add(CustomInscription.OnApprendDeSesErreurs, new LearnableSkill(CustomInscription.OnApprendDeSesErreurs, "On apprend de ses erreurs", "Inscription de bijoux\n\n+1 d'Intelligence\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PatienceEtLongueurDeTemps, new LearnableSkill(CustomInscription.PatienceEtLongueurDeTemps, "Patience et longueur de temps", "Inscription de bijoux\n\n+1 de Sagesse\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Evocateur, new LearnableSkill(CustomInscription.Evocateur, "Evocateur", "Inscription de bijoux\n\n+1 emplacement de sort\nEmplacements de sorts maximum 12\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.AuxDependsDeCeluiQuilEcoute, new LearnableSkill(CustomInscription.AuxDependsDeCeluiQuilEcoute, "Aux dépends de celui qui l'écoute", "Inscription de bijoux\n\n+1 de Charisme\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.PoingDeFer, new LearnableSkill(CustomInscription.PoingDeFer, "Poing de fer", "Inscription de bijoux\n\n+1 secondes de durée des renversements que vous infligez\nDurée maximale : 3 secondes\nCette inscription n'a donc pas d'effet sur les capacités dont la durée de renversement est déjà de 3 secondes ou plus\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Ensanglanté, new LearnableSkill(CustomInscription.Ensanglanté, "Ensanglanté", "Inscription de bijoux\n\n-2% de temps d'incantation des sorts exploitant des cadavres\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Invocateur, new LearnableSkill(CustomInscription.Invocateur, "Invocateur", "Inscription de bijoux\n\n-2% de temps d'incantation des sorts d'invocation\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Belliciste, new LearnableSkill(CustomInscription.Belliciste, "Belliciste", "Inscription de bijoux\n\n+1 emplacement de capacité de combat\nMaximum : 12\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.LaMeilleureDesRaisons, new LearnableSkill(CustomInscription.LaMeilleureDesRaisons, "La meilleur des raisons", "Inscription de bijoux\n\n+1 Force\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Opportuniste, new LearnableSkill(CustomInscription.Opportuniste, "Opportuniste", "Inscription de bijoux\n\n+1 Dextérité\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Clarté, new LearnableSkill(CustomInscription.Clarté, "Clarté", "Inscription de bijoux\n\n-5% de durée des effets d'aveuglement vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Pureté, new LearnableSkill(CustomInscription.Pureté, "Pureté", "Inscription de bijoux\n\n-5% de durée des effets de maladie vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Récupération, new LearnableSkill(CustomInscription.Récupération, "Récupération", "Inscription de bijoux\n\n-5% de durée des effets d'étourdissement vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Cicatrisant, new LearnableSkill(CustomInscription.Cicatrisant, "Cicatrisant", "Inscription de bijoux\n\n-5% de durée des effets de blessures profondes vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Ardeur, new LearnableSkill(CustomInscription.Ardeur, "Ardeur", "Inscription de bijoux\n\n-5% de durée des effets de faiblesse vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Mithridate, new LearnableSkill(CustomInscription.Mithridate, "Mithridate", "Inscription de bijoux\n\n-5% de durée des effets d'empoisonnement vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Coagulant, new LearnableSkill(CustomInscription.Coagulant, "Coagulant", "Inscription de bijoux\n\n-5% de durée des effets de saignement vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Hardiesse, new LearnableSkill(CustomInscription.Hardiesse, "Hardiesse", "Inscription de bijoux\n\n-5% de durée des effets d'infirmité vous affectant\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Survivant, new LearnableSkill(CustomInscription.Survivant, "Survivant", "Inscription de bijoux\n\n+1 Santé\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Rayonnant, new LearnableSkill(CustomInscription.Rayonnant, "Rayonnant", "Inscription de bijoux\n\n+1 Energie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.Résilence, new LearnableSkill(CustomInscription.Résilence, "Résilence", "Inscription de bijoux\n\n+1 Constitution\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionDurabilityMinor, new LearnableSkill(CustomInscription.MateriaDetectionDurabilityMinor, "Matéria détection durable mineure", "Inscription d'objet\n\n+2% de durabilité des inscriptions de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionDurability, new LearnableSkill(CustomInscription.MateriaDetectionDurability, "Matéria détection durable", "Inscription d'objet\n\n+4% de durabilité des inscriptions de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionDurabilityMajor, new LearnableSkill(CustomInscription.MateriaDetectionDurabilityMajor, "Matéria détection durable majeure", "Inscription d'objet\n\n+6% de durabilité des inscriptions de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionDurabilitySupreme, new LearnableSkill(CustomInscription.MateriaDetectionDurabilitySupreme, "Matéria détection durable suprême", "Inscription d'objet\n\n+8% de durabilité des inscriptions de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaExtractionDurabilityMinor, new LearnableSkill(CustomInscription.MateriaExtractionDurabilityMinor, "Matéria extraction durable mineure", "Inscription d'objet\n\n+2% de durabilité des inscriptions d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionDurability, new LearnableSkill(CustomInscription.MateriaExtractionDurability, "Matéria extraction durable", "Inscription d'objet\n\n+4% de durabilité des inscriptions d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionDurabilityMajor, new LearnableSkill(CustomInscription.MateriaExtractionDurabilityMajor, "Matéria extraction durable majeure", "Inscription d'objet\n\n+6% de durabilité des inscriptions d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionDurabilitySupreme, new LearnableSkill(CustomInscription.MateriaExtractionDurabilitySupreme, "Matéria extraction durable suprême", "Inscription d'objet\n\n+8% de durabilité des inscriptions d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaProductionDurabilityMinor, new LearnableSkill(CustomInscription.MateriaProductionDurabilityMinor, "Matéria production durable mineure", "Inscription d'objet\n\n+2% de durabilité des inscriptions de production utilisant de la matéria\nLa présence d'au moins une inscription de production est nécessaire pour réaliser une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionDurability, new LearnableSkill(CustomInscription.MateriaProductionDurability, "Matéria production durable", "Inscription d'objet\n\n+4% de durabilité des inscriptions de production utilisant de la matéria\nLa présence d'au moins une inscription de production est nécessaire pour réaliser une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionDurabilityMajor, new LearnableSkill(CustomInscription.MateriaProductionDurabilityMajor, "Matéria production durable majeure", "Inscription d'objet\n\n+6% de durabilité des inscriptions de production utilisant de la matéria\nLa présence d'au moins une inscription de production est nécessaire pour réaliser une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionDurabilitySupreme, new LearnableSkill(CustomInscription.MateriaProductionDurabilitySupreme, "Matéria production durable suprême", "Inscription d'objet\n\n+8% de durabilité des inscriptions de production utilisant de la matéria\nLa présence d'au moins une inscription de production est nécessaire pour réaliser une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaInscriptionDurabilityMinor, new LearnableSkill(CustomInscription.MateriaInscriptionDurabilityMinor, "Matéria inscription durable mineure", "Inscription d'objet\n\n+2% de durabilité des inscriptions de calligraphies\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionDurability, new LearnableSkill(CustomInscription.MateriaInscriptionDurability, "Matéria inscription durable", "Inscription d'objet\n\n+4% de durabilité des inscriptions de calligraphies\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionDurabilityMajor, new LearnableSkill(CustomInscription.MateriaInscriptionDurabilityMajor, "Matéria inscription durable majeure", "Inscription d'objet\n\n+6% de durabilité des inscriptions de calligraphies\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionDurabilitySupreme, new LearnableSkill(CustomInscription.MateriaInscriptionDurabilitySupreme, "Matéria inscription durable suprême", "Inscription d'objet\n\n+8% de durabilité des inscriptions de calligraphies\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionAccuracyMinor, new LearnableSkill(CustomInscription.MateriaDetectionAccuracyMinor, "Matéria détection précise mineure", "Inscription d'objet\n\n+2% de précision des estimations de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 1, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionAccuracy, new LearnableSkill(CustomInscription.MateriaDetectionAccuracy, "Matéria détection précise", "Inscription d'objet\n\n+4% de précision des estimations de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionAccuracyMajor, new LearnableSkill(CustomInscription.MateriaDetectionAccuracyMajor, "Matéria détection précise majeure", "Inscription d'objet\n\n+6% de précision des estimations de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionAccuracySupreme, new LearnableSkill(CustomInscription.MateriaDetectionAccuracySupreme, "Matéria détection précise suprême", "Inscription d'objet\n\n+8% de précision des estimations de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaExtractionSpeedMinor, new LearnableSkill(CustomInscription.MateriaExtractionSpeedMinor, "Matéria extraction rapide mineure", "Inscription d'objet\n\n+2% de vitesse d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionSpeed, new LearnableSkill(CustomInscription.MateriaExtractionSpeed, "Matéria extraction rapide", "Inscription d'objet\n\n+4% de vitesse d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionSpeedMajor, new LearnableSkill(CustomInscription.MateriaExtractionSpeedMajor, "Matéria extraction rapide majeure", "Inscription d'objet\n\n+6% de vitesse d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionSpeedSupreme, new LearnableSkill(CustomInscription.MateriaExtractionSpeedSupreme, "Matéria extraction rapide suprême", "Inscription d'objet\n\n+8% de vitesse d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaExtractionYieldMinor, new LearnableSkill(CustomInscription.MateriaExtractionYieldMinor, "Matéria extraction efficace mineure", "Inscription d'objet\n\n+2% de rendement d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionYield, new LearnableSkill(CustomInscription.MateriaExtractionYield, "Matéria extraction efficace", "Inscription d'objet\n\n+4% de rendement d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionYieldMajor, new LearnableSkill(CustomInscription.MateriaExtractionYieldMajor, "Matéria extraction efficace majeure", "Inscription d'objet\n\n+6% de rendement d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionYieldSupreme, new LearnableSkill(CustomInscription.MateriaExtractionYieldSupreme, "Matéria extraction efficace suprême", "Inscription d'objet\n\n+8% de rendement d'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaExtractionQualityMinor, new LearnableSkill(CustomInscription.MateriaExtractionQualityMinor, "Matéria extraction concentrée mineure", "Inscription d'objet\n\n+2% de chance d'obtenir une concentration de matéria de qualité supérieure lors de l'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionQuality, new LearnableSkill(CustomInscription.MateriaExtractionQuality, "Matéria extraction concentrée", "Inscription d'objet\n\n+4% de chance d'obtenir une concentration de matéria de qualité supérieure lors de l'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionQualityMajor, new LearnableSkill(CustomInscription.MateriaExtractionQualityMajor, "Matéria extraction concentrée majeure", "Inscription d'objet\n\n+6% de chance d'obtenir une concentration de matéria de qualité supérieure lors de l'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaExtractionQualitySupreme, new LearnableSkill(CustomInscription.MateriaExtractionQualitySupreme, "Matéria extraction concentrée suprême", "Inscription d'objet\n\n+8% de chance d'obtenir une concentration de matéria de qualité supérieure lors de l'extraction de matéria\nLa présence d'au moins une inscription d'extraction est nécessaire pour effectuer une extraction de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionSpeedMinor, new LearnableSkill(CustomInscription.MateriaDetectionSpeedMinor, "Matéria détection rapide mineure", "Inscription d'objet\n\n+2% de vitesse de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionSpeed, new LearnableSkill(CustomInscription.MateriaDetectionSpeed, "Matéria détection rapide", "Inscription d'objet\n\n+4% de vitesse de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionSpeedMajor, new LearnableSkill(CustomInscription.MateriaDetectionSpeedMajor, "Matéria détection rapide majeure", "Inscription d'objet\n\n+6% de vitesse de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionSpeedSupreme, new LearnableSkill(CustomInscription.MateriaDetectionSpeedSupreme, "Matéria détection rapide suprême", "Inscription d'objet\n\n+8% de vitesse de détection de matéria\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionReliabilityMinor, new LearnableSkill(CustomInscription.MateriaDetectionReliabilityMinor, "Matéria détection fiable mineure", "Inscription d'objet\n\n+2% de chance de révéler un peu lors de la détection de matéria en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionReliability, new LearnableSkill(CustomInscription.MateriaDetectionReliability, "Matéria détection fiable", "Inscription d'objet\n\n+4% de chance de révéler un peu lors de la détection de matéria en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionReliabilityMajor, new LearnableSkill(CustomInscription.MateriaDetectionReliabilityMajor, "Matéria détection fiable majeure", "Inscription d'objet\n\n+6% de chance de révéler un peu lors de la détection de matéria en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionReliabilitySupreme, new LearnableSkill(CustomInscription.MateriaDetectionReliabilitySupreme, "Matéria détection fiable suprême", "Inscription d'objet\n\n+8% de chance de révéler un peu lors de la détection de matéria en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaDetectionQualityMinor, new LearnableSkill(CustomInscription.MateriaDetectionQualityMinor, "Matéria détection concentrée mineure", "Inscription d'objet\n\n+2% de chance de révéler un dépôt de concentration de matéria supérieure en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionQuality, new LearnableSkill(CustomInscription.MateriaDetectionQuality, "Matéria détection concentrée", "Inscription d'objet\n\n+4% de chance de révéler un dépôt de concentration de matéria supérieure en mode actifa\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionQualityMajor, new LearnableSkill(CustomInscription.MateriaDetectionQualityMajor, "Matéria détection concentrée majeure", "Inscription d'objet\n\n+6% de chance de révéler un dépôt de concentration de matéria supérieure en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaDetectionQualitySupreme, new LearnableSkill(CustomInscription.MateriaDetectionQualitySupreme, "Matéria détection concentrée suprême", "Inscription d'objet\n\n+8% de chance de révéler un dépôt de concentration de matéria supérieure en mode actif\nLa présence d'au moins une inscription de détection est nécessaire pour effectuer une détection de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaProductionSpeedMinor, new LearnableSkill(CustomInscription.MateriaProductionSpeedMinor, "Matéria production rapide mineure", "Inscription d'objet\n\n+2% de vitesse de production artisanale faisant usage de matéria\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionSpeed, new LearnableSkill(CustomInscription.MateriaProductionSpeed, "Matéria production rapide", "Inscription d'objet\n\n+4% de vitesse de production artisanale faisant usage de matéria\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionSpeedMajor, new LearnableSkill(CustomInscription.MateriaProductionSpeedMajor, "Matéria production rapide majeure", "Inscription d'objet\n\n+6% de vitesse de production artisanale faisant usage de matéria\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionSpeedSupreme, new LearnableSkill(CustomInscription.MateriaProductionSpeedSupreme, "Matéria production rapide suprême", "Inscription d'objet\n\n+8% de vitesse de production artisanale faisant usage de matéria\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaProductionYieldMinor, new LearnableSkill(CustomInscription.MateriaProductionYieldMinor, "Matéria production efficace mineure", "Inscription d'objet\n\n-2% de quantité de matéria nécessaire pour la production artisanale\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionYield, new LearnableSkill(CustomInscription.MateriaProductionYield, "Matéria production efficace", "Inscription d'objet\n\n-4% de quantité de matéria nécessaire pour la production artisanale\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionYieldMajor, new LearnableSkill(CustomInscription.MateriaProductionYieldMajor, "Matéria production efficace majeure", "Inscription d'objet\n\n-6% de quantité de matéria nécessaire pour la production artisanale\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionYieldSupreme, new LearnableSkill(CustomInscription.MateriaProductionYieldSupreme, "Matéria production efficace suprême", "Inscription d'objet\n\n-8% de quantité de matéria nécessaire pour la production artisanale\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaProductionQualityMinor, new LearnableSkill(CustomInscription.MateriaProductionQualityMinor, "Matéria production qualité mineure", "Inscription d'objet\n\n+1% de chance de réaliser un objet artisanal disposant d'un emplacement d'inscription supplémentaire\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionQuality, new LearnableSkill(CustomInscription.MateriaProductionQuality, "Matéria production qualité mineure", "Inscription d'objet\n\n+2% de chance de réaliser un objet artisanal disposant d'un emplacement d'inscription supplémentaire\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionQualityMajor, new LearnableSkill(CustomInscription.MateriaProductionQualityMajor, "Matéria production qualité mineure", "Inscription d'objet\n\n+3% de chance de réaliser un objet artisanal disposant d'un emplacement d'inscription supplémentaire\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaProductionQualitySupreme, new LearnableSkill(CustomInscription.MateriaProductionQualitySupreme, "Matéria production qualité mineure", "Inscription d'objet\n\n+4% de chance de réaliser un objet artisanal disposant d'un emplacement d'inscription supplémentaire\nLa présence d'au moins une inscription de production artisanale est nécessaire pour effectuer une production artisanale à partir de matéria\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaInscriptionSpeedMinor, new LearnableSkill(CustomInscription.MateriaInscriptionSpeedMinor, "Calligraphie rapide mineure", "Inscription d'objet\n\n+2% de vitesse d'inscription lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionSpeed, new LearnableSkill(CustomInscription.MateriaInscriptionSpeed, "Calligraphie rapide", "Inscription d'objet\n\n+4% de vitesse d'inscription lors de la calligraphiea\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionSpeedMajor, new LearnableSkill(CustomInscription.MateriaInscriptionSpeedMajor, "Calligraphie rapide majeure", "Inscription d'objet\n\n+6% de vitesse d'inscription lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionSpeedSupreme, new LearnableSkill(CustomInscription.MateriaInscriptionSpeedSupreme, "Calligraphie rapide suprême", "Inscription d'objet\n\n+8% de vitesse d'inscription lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      learnableDictionary.Add(CustomInscription.MateriaInscriptionYieldMinor, new LearnableSkill(CustomInscription.MateriaInscriptionYieldMinor, "Calligraphie efficace mineure", "Inscription d'objet\n\n-2% de quantité d'influx nécessaire lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 2, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionYield, new LearnableSkill(CustomInscription.MateriaInscriptionYield, "Calligraphie efficace", "Inscription d'objet\n\n-4% de quantité d'influx nécessaire lors de la calligraphiea\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 3, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionYieldMajor, new LearnableSkill(CustomInscription.MateriaInscriptionYieldMajor, "Calligraphie efficace majeure", "Inscription d'objet\n\n-6% de quantité d'influx nécessaire lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 4, Ability.Charisma, Ability.Intelligence));
      learnableDictionary.Add(CustomInscription.MateriaInscriptionYieldSupreme, new LearnableSkill(CustomInscription.MateriaInscriptionYieldSupreme, "Calligraphie efficace suprême", "Inscription d'objet\n\n-8% de quantité d'influx nécessaire lors de la calligraphie\nLa présence d'au moins une inscription de calligraphie est nécessaire pour réaliser une calligraphie\nConsomme un emplacement libre d'inscription", Category.Inscription, "ife_X2EpicRepu", 5, 5, Ability.Charisma, Ability.Intelligence));

      RefreshLearnableDescriptions();
    }
    /*private static bool HandleImproveHealth(PlayerSystem.Player player, int customSkillId)
    {
      player.SetMaxHP();

      return true;
    }*/
    private static bool HandleLightArmorProficiency(PlayerSystem.Player player, int customSkillId)
    {
      player.oid.LoginCreature.AddFeat(Feat.ArmorProficiencyLight);
      return true;
    }
    private static bool HandleMediumArmorProficiency(PlayerSystem.Player player, int customSkillId)
    {
      player.oid.LoginCreature.AddFeat(Feat.ArmorProficiencyMedium);

      if (player.oid.LoginCreature.ActiveEffects.Any(e => e.Tag == EffectSystem.ShieldArmorDisadvantageEffectTag))
      {
        NwItem armor = player.oid.LoginCreature.GetItemInSlot(InventorySlot.Chest);

        if (armor is not null && armor.BaseACValue > 5 && !player.oid.LoginCreature.KnowsFeat(Feat.ArmorProficiencyHeavy))
          return true;

        EffectUtils.RemoveTaggedEffect(player.oid.LoginCreature, EffectSystem.ShieldArmorDisadvantageEffectTag);
      }

      return true;
    }
    private static bool HandleHeavyArmorProficiency(PlayerSystem.Player player, int customSkillId)
    {
      player.oid.LoginCreature.AddFeat(Feat.ArmorProficiencyHeavy);
      EffectUtils.RemoveTaggedEffect(player.oid.LoginCreature, EffectSystem.ShieldArmorDisadvantageEffectTag);
      return true;
    }
    private static bool HandleShieldProficiency(PlayerSystem.Player player, int customSkillId)
    {
      player.oid.LoginCreature.AddFeat(Feat.ShieldProficiency);
      return true;
    }
    private static bool HandleSimpleWeaponProficiency(PlayerSystem.Player player, int customSkillId)
    {
      player.oid.LoginCreature.AddFeat(Feat.WeaponProficiencySimple);
      return true;
    }
    private static bool HandleMartialProficiency(PlayerSystem.Player player, int customSkillId)
    {
      player.oid.LoginCreature.AddFeat(Feat.WeaponProficiencyMartial);
      return true;
    }
    private static bool HandleExoticProficiency(PlayerSystem.Player player, int customSkillId)
    {
      player.oid.LoginCreature.AddFeat(Feat.WeaponProficiencyExotic);
      return true;
    }
    private static bool HandleImproveAbility(PlayerSystem.Player player, int customSkillId)
    {
      //Log.Info($"improve ability triggered : {customSkillId}");
      switch (customSkillId)
      {
        case CustomSkill.ImprovedStrength:
          player.oid.LoginCreature.SetsRawAbilityScore(Ability.Strength, (byte)(player.oid.LoginCreature.GetRawAbilityScore(Ability.Strength) + 1));
          break;
        case CustomSkill.ImprovedDexterity:
          player.oid.LoginCreature.SetsRawAbilityScore(Ability.Dexterity, (byte)(player.oid.LoginCreature.GetRawAbilityScore(Ability.Dexterity) + 1));
          break;
        case CustomSkill.ImprovedConstitution:
          player.oid.LoginCreature.SetsRawAbilityScore(Ability.Constitution, (byte)(player.oid.LoginCreature.GetRawAbilityScore(Ability.Constitution) + 1));
          //HandleImproveHealth(player, CustomSkill.ImprovedHealth);
          break;
        case CustomSkill.ImprovedIntelligence:
          player.oid.LoginCreature.SetsRawAbilityScore(Ability.Intelligence, (byte)(player.oid.LoginCreature.GetRawAbilityScore(Ability.Intelligence) + 1));
          break;
        case CustomSkill.ImprovedWisdom:
          player.oid.LoginCreature.SetsRawAbilityScore(Ability.Wisdom, (byte)(player.oid.LoginCreature.GetRawAbilityScore(Ability.Wisdom) + 1));
          break;
        case CustomSkill.ImprovedCharisma:
          player.oid.LoginCreature.SetsRawAbilityScore(Ability.Charisma, (byte)(player.oid.LoginCreature.GetRawAbilityScore(Ability.Charisma) + 1));
          break;
      }

      return true;
    }
    private static bool HandleAcolyteBackground(PlayerSystem.Player player, int customSkillId)
    {
      if(player.learnableSkills.TryAdd(CustomSkill.InsightProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InsightProficiency], player)))
        player.learnableSkills[CustomSkill.InsightProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InsightProficiency].source.Add(Category.StartingTraits);

      if(player.learnableSkills.TryAdd(CustomSkill.ReligionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.ReligionProficiency], player)))
      player.learnableSkills[CustomSkill.ReligionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.ReligionProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleAnthropologistBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.InsightProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InsightProficiency], player)))
      player.learnableSkills[CustomSkill.InsightProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InsightProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.HistoryProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.HistoryProficiency], player)))
      player.learnableSkills[CustomSkill.HistoryProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.HistoryProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleArcheologistBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.HistoryProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.HistoryProficiency], player)))
      player.learnableSkills[CustomSkill.HistoryProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.HistoryProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.SurvivalProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SurvivalProficiency], player)))
      player.learnableSkills[CustomSkill.SurvivalProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SurvivalProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleScholarBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.HistoryProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.HistoryProficiency], player)))
      player.learnableSkills[CustomSkill.HistoryProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.HistoryProficiency].source.Add(Category.StartingTraits);

      int selectedBonus = player.oid.LoginCreature.GetObjectVariable<LocalVariableInt>("_SELECTED_SCHOLAR_BONUS");

      if (player.learnableSkills.TryAdd(selectedBonus, new LearnableSkill((LearnableSkill)learnableDictionary[selectedBonus], player)))
      player.learnableSkills[selectedBonus].LevelUp(player);

      player.learnableSkills[selectedBonus].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleSageBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.HistoryProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.HistoryProficiency], player)))
      player.learnableSkills[CustomSkill.HistoryProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.HistoryProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.ArcanaProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.ArcanaProficiency], player)))
      player.learnableSkills[CustomSkill.ArcanaProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.ArcanaProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleHermitBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.MedicineProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.MedicineProficiency], player)))
      player.learnableSkills[CustomSkill.MedicineProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.MedicineProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.ReligionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.ReligionProficiency], player)))
      player.learnableSkills[CustomSkill.ReligionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.ReligionProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleWandererBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.SurvivalProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SurvivalProficiency], player)))
      player.learnableSkills[CustomSkill.SurvivalProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SurvivalProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.PersuasionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PersuasionProficiency], player)))
      player.learnableSkills[CustomSkill.PersuasionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PersuasionProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleAthleteBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.AcrobaticsProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AcrobaticsProficiency], player)))
      player.learnableSkills[CustomSkill.AcrobaticsProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AcrobaticsProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.AthleticsProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AthleticsProficiency], player)))
      player.learnableSkills[CustomSkill.AthleticsProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AthleticsProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleOutlanderBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.AthleticsProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AthleticsProficiency], player)))
      player.learnableSkills[CustomSkill.AthleticsProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AthleticsProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.SurvivalProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SurvivalProficiency], player)))
      player.learnableSkills[CustomSkill.SurvivalProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SurvivalProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleSoldierBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.AthleticsProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AthleticsProficiency], player)))
      player.learnableSkills[CustomSkill.AthleticsProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AthleticsProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.IntimidationProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.IntimidationProficiency], player)))
      player.learnableSkills[CustomSkill.IntimidationProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.IntimidationProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleMercenaryBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.AthleticsProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AthleticsProficiency], player)))
      player.learnableSkills[CustomSkill.AthleticsProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AthleticsProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.PersuasionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PersuasionProficiency], player)))
      player.learnableSkills[CustomSkill.PersuasionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PersuasionProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleFolkHeroBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.AnimalHandlingProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AnimalHandlingProficiency], player)))
      player.learnableSkills[CustomSkill.AnimalHandlingProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AnimalHandlingProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.SurvivalProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SurvivalProficiency], player)))
      player.learnableSkills[CustomSkill.SurvivalProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SurvivalProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleSailorBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.AthleticsProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AthleticsProficiency], player)))
      player.learnableSkills[CustomSkill.AthleticsProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AthleticsProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.PerceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PerceptionProficiency], player)))
      player.learnableSkills[CustomSkill.PerceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PerceptionProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleShipwrightBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.HistoryProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.HistoryProficiency], player)))
      player.learnableSkills[CustomSkill.HistoryProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.HistoryProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.PerceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PerceptionProficiency], player)))
      player.learnableSkills[CustomSkill.PerceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PerceptionProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleFisherBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.MedicineProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.MedicineProficiency], player)))
      player.learnableSkills[CustomSkill.MedicineProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.MedicineProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.SurvivalProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SurvivalProficiency], player)))
      player.learnableSkills[CustomSkill.SurvivalProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SurvivalProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleMarineBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.PerceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PerceptionProficiency], player)))
      player.learnableSkills[CustomSkill.PerceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PerceptionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.SurvivalProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SurvivalProficiency], player)))
      player.learnableSkills[CustomSkill.SurvivalProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SurvivalProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleCriminalBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.DeceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.DeceptionProficiency], player)))
      player.learnableSkills[CustomSkill.DeceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.DeceptionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.StealthProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.StealthProficiency], player)))
      player.learnableSkills[CustomSkill.StealthProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.StealthProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleCharlatanBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.DeceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.DeceptionProficiency], player)))
      player.learnableSkills[CustomSkill.DeceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.DeceptionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.SleightOfHandProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SleightOfHandProficiency], player)))
      player.learnableSkills[CustomSkill.SleightOfHandProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SleightOfHandProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleSmugglerBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.DeceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.DeceptionProficiency], player)))
      player.learnableSkills[CustomSkill.DeceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.DeceptionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.AthleticsProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AthleticsProficiency], player)))
      player.learnableSkills[CustomSkill.AthleticsProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AthleticsProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleUrchinBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.SleightOfHandProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SleightOfHandProficiency], player)))
      player.learnableSkills[CustomSkill.SleightOfHandProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SleightOfHandProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.StealthProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.StealthProficiency], player)))
      player.learnableSkills[CustomSkill.StealthProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.StealthProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleGamblerBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.DeceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.DeceptionProficiency], player)))
      player.learnableSkills[CustomSkill.DeceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.DeceptionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.InsightProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InsightProficiency], player)))
      player.learnableSkills[CustomSkill.InsightProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InsightProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleEntertainerBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.PerformanceProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PerformanceProficiency], player)))
      player.learnableSkills[CustomSkill.PerformanceProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PerformanceProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.AcrobaticsProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AcrobaticsProficiency], player)))
      player.learnableSkills[CustomSkill.AcrobaticsProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AcrobaticsProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleCityWatchBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.AthleticsProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.AthleticsProficiency], player)))
      player.learnableSkills[CustomSkill.AthleticsProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.AthleticsProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.InsightProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InsightProficiency], player)))
      player.learnableSkills[CustomSkill.InsightProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InsightProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleInvestigatorBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.InvestigationProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InvestigationProficiency], player)))
      player.learnableSkills[CustomSkill.InvestigationProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InvestigationProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.InsightProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InsightProficiency], player)))
      player.learnableSkills[CustomSkill.InsightProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InsightProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleKnightBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.PersuasionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PersuasionProficiency], player)))
      player.learnableSkills[CustomSkill.PersuasionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PersuasionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.ReligionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.ReligionProficiency], player)))
      player.learnableSkills[CustomSkill.ReligionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.ReligionProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleNobleBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.PersuasionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PersuasionProficiency], player)))
      player.learnableSkills[CustomSkill.PersuasionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PersuasionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.HistoryProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.HistoryProficiency], player)))
      player.learnableSkills[CustomSkill.HistoryProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.HistoryProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleCourtierBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.PersuasionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PersuasionProficiency], player)))
      player.learnableSkills[CustomSkill.PersuasionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PersuasionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.InsightProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InsightProficiency], player)))
      player.learnableSkills[CustomSkill.InsightProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InsightProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleMerchantBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.PersuasionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PersuasionProficiency], player)))
      player.learnableSkills[CustomSkill.PersuasionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PersuasionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.InvestigationProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InvestigationProficiency], player)))
      player.learnableSkills[CustomSkill.InvestigationProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InvestigationProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleTakenBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.NatureProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.NatureProficiency], player)))
      player.learnableSkills[CustomSkill.NatureProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.NatureProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.SurvivalProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SurvivalProficiency], player)))
      player.learnableSkills[CustomSkill.SurvivalProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SurvivalProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleScionBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.PerceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PerceptionProficiency], player)))
      player.learnableSkills[CustomSkill.PerceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PerceptionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.PerformanceProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PerformanceProficiency], player)))
      player.learnableSkills[CustomSkill.PerformanceProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PerformanceProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleMagistrateBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.InsightProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InsightProficiency], player)))
      player.learnableSkills[CustomSkill.InsightProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InsightProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.IntimidationProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.IntimidationProficiency], player)))
      player.learnableSkills[CustomSkill.IntimidationProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.IntimidationProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleRefugeeBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.InsightProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InsightProficiency], player)))
      player.learnableSkills[CustomSkill.InsightProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InsightProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.SurvivalProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.SurvivalProficiency], player)))
      player.learnableSkills[CustomSkill.SurvivalProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.SurvivalProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandlePrisonerBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.DeceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.DeceptionProficiency], player)))
      player.learnableSkills[CustomSkill.DeceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.DeceptionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.PerceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PerceptionProficiency], player)))
      player.learnableSkills[CustomSkill.PerceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PerceptionProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleHauntedBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.ArcanaProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.ArcanaProficiency], player)))
      player.learnableSkills[CustomSkill.ArcanaProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.ArcanaProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.InvestigationProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.InvestigationProficiency], player)))
      player.learnableSkills[CustomSkill.InvestigationProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.InvestigationProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleFacelessBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.DeceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.DeceptionProficiency], player)))
      player.learnableSkills[CustomSkill.DeceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.DeceptionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.IntimidationProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.IntimidationProficiency], player)))
      player.learnableSkills[CustomSkill.IntimidationProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.IntimidationProficiency].source.Add(Category.StartingTraits);

      return true;
    }
    private static bool HandleSecretBackground(PlayerSystem.Player player, int customSkillId)
    {
      if (player.learnableSkills.TryAdd(CustomSkill.DeceptionProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.DeceptionProficiency], player)))
      player.learnableSkills[CustomSkill.DeceptionProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.DeceptionProficiency].source.Add(Category.StartingTraits);

      if (player.learnableSkills.TryAdd(CustomSkill.PerformanceProficiency, new LearnableSkill((LearnableSkill)learnableDictionary[CustomSkill.PerformanceProficiency], player)))
      player.learnableSkills[CustomSkill.PerformanceProficiency].LevelUp(player);

      player.learnableSkills[CustomSkill.PerformanceProficiency].source.Add(Category.StartingTraits);

      return true;
    }

    private static bool HandleWarriorCombatStyle(PlayerSystem.Player player, int customSkillId)
    {
      // TODO : ouvrir une fenêtre pour proposer un choix parmi les styles de combat en excluant les styles déjà connus par le personnage

      return true;
    }
    public static bool LearnActivableFeat(PlayerSystem.Player player, int customSkillId)
    {
      if (!player.oid.LoginCreature.KnowsFeat((Feat)customSkillId))
        player.oid.LoginCreature.AddFeat((Feat)customSkillId);

      return true;
    }
    private static bool HandleAddedSpellSlot(PlayerSystem.Player player, int customSkillId)
    {
      NwItem skin = player.oid.LoginCreature.GetItemInSlot(InventorySlot.CreatureSkin);
      IPSpellLevel spellLevel = IPSpellLevel.SL0;

      switch (customSkillId)
      {
        case CustomSkill.ImprovedSpellSlot1:
          spellLevel = IPSpellLevel.SL1;
          break;
        case CustomSkill.ImprovedSpellSlot2:
          spellLevel = IPSpellLevel.SL2;
          break;
        case CustomSkill.ImprovedSpellSlot3:
          spellLevel = IPSpellLevel.SL3;
          break;
        case CustomSkill.ImprovedSpellSlot4:
          spellLevel = IPSpellLevel.SL4;
          break;
        case CustomSkill.ImprovedSpellSlot5:
          spellLevel = IPSpellLevel.SL5;
          break;
        case CustomSkill.ImprovedSpellSlot6:
          spellLevel = IPSpellLevel.SL6;
          break;
        case CustomSkill.ImprovedSpellSlot7:
          spellLevel = IPSpellLevel.SL7;
          break;
        case CustomSkill.ImprovedSpellSlot8:
          spellLevel = IPSpellLevel.SL8;
          break;
        case CustomSkill.ImprovedSpellSlot9:
          spellLevel = IPSpellLevel.SL9;
          break;
      }

      if (skin == null)
      {
        Utils.LogMessageToDMs($"Skill System - On Improve Spell Slot : {player.oid.LoginCreature.Name} creature skin is null !");

        Task waitSkinCreated = NwTask.Run(async () =>
        {
          NwItem pcSkin = await NwItem.Create("peaudejoueur", player.oid.LoginCreature);
          pcSkin.Name = $"Propriétés de {player.oid.LoginCreature.Name}";
          //pcSkin.GetObjectVariable<LocalVariableString>("ITEM_KEY").Value = Config.itemKey;
          player.oid.LoginCreature.RunEquip(pcSkin, InventorySlot.CreatureSkin);
        });
      }

      skin.AddItemProperty(ItemProperty.BonusLevelSpell((IPClass)43, spellLevel), EffectDuration.Permanent);

      return true;
    }

    public static readonly int[] forgeBasicSkillBooks = new int[] { CustomSkill.MateriaScanning, CustomSkill.OreDetection,  CustomSkill.OreExtraction,CustomSkill.MateriaExtraction, CustomSkill.Blacksmith, CustomSkill.Recycler, CustomSkill.OreExtractionYield, CustomSkill.ReprocessingOre, CustomSkill.ReprocessingOreEfficiency, CustomSkill.ReprocessingGrade1Expertise, CustomSkill.ReprocessingGrade2Expertise, CustomSkill.MateriaGradeConcentration, CustomSkill.Renforcement, CustomSkill.BlueprintCopy, CustomSkill.BlueprintEfficiency, CustomSkill.BlueprintEconomy, CustomSkill.BlueprintMetallurgy, CustomSkill.BlueprintResearch, CustomSkill.CraftDagger, CustomSkill.CraftLightMace, CustomSkill.CraftMorningStar, CustomSkill.CraftShortSpear, CustomSkill.CraftShortsword, CustomSkill.CraftSickle, CustomSkill.CraftScaleMail, CustomSkill.OreDetection };
    public static readonly int[] woodBasicSkillBooks = new int[] { CustomSkill.MateriaScanning, CustomSkill.WoodDetection, CustomSkill.WoodExtraction, CustomSkill.MateriaExtraction, CustomSkill.Renforcement, CustomSkill.Recycler, CustomSkill.BlueprintMetallurgy, CustomSkill.BlueprintResearch, CustomSkill.WoodExtraction, CustomSkill.WoodDetection, CustomSkill.ReprocessingWood, CustomSkill.Woodworker, CustomSkill.CraftSmallShield, CustomSkill.CraftClub, CustomSkill.CraftDarts, CustomSkill.CraftBullets, CustomSkill.CraftHeavyCrossbow, CustomSkill.CraftLightCrossbow, CustomSkill.CraftQuarterstaff, CustomSkill.CraftSling, CustomSkill.CraftArrow, CustomSkill.CraftBolt, CustomSkill.WoodDetection };
    public static readonly int[] leatherBasicSkillBooks = new int[] { CustomSkill.MateriaScanning, CustomSkill.PeltDetection, CustomSkill.PeltExtraction, CustomSkill.MateriaExtraction, CustomSkill.Renforcement, CustomSkill.Recycler, CustomSkill.PeltExtraction, CustomSkill.ReprocessingPelt, CustomSkill.Tanner, CustomSkill.CraftLeatherArmor, CustomSkill.CraftStuddedLeather, CustomSkill.CraftPaddedArmor, CustomSkill.CraftClothing, CustomSkill.CraftWhip, CustomSkill.CraftBelt, CustomSkill.CraftBoots, CustomSkill.CraftBracer, CustomSkill.CraftCloak, CustomSkill.CraftGloves, CustomSkill.PeltDetection };
    //public static Feat[] craftSkillBooks = new Feat[] { CustomFeats.Metallurgy, CustomFeats.AdvancedCraft, CustomFeats.Miner, CustomFeats.Geology, CustomFeats.Prospection, CustomFeats.VeldsparReprocessing, CustomFeats.ScorditeReprocessing, CustomFeats.PyroxeresReprocessing, CustomFeats.StripMiner, CustomFeats.Reprocessing, CustomFeats.ReprocessingEfficiency, CustomFeats.Connections, CustomFeats.Forge };
    /*public static readonly Feat[] alchemyBasicSkillBooks = new Feat[] { CustomFeats.Alchemist, CustomFeats.AlchemistCareful, CustomFeats.AlchemistEfficiency };
    public static readonly Feat[] languageSkillBooks = new Feat[] { CustomFeats.Abyssal, CustomFeats.Céleste, CustomFeats.Gnome, CustomFeats.Draconique, CustomFeats.Druidique, CustomFeats.Nain, CustomFeats.Elfique, CustomFeats.Géant, CustomFeats.Gobelin, CustomFeats.Halfelin, CustomFeats.Infernal, CustomFeats.Orc, CustomFeats.Primordiale, CustomFeats.Sylvain, CustomFeats.Voleur, CustomFeats.Gnome };

    public static readonly Feat[] lowSkillBooks = new Feat[] { CustomFeats.AlchemistExpert, CustomFeats.Renforcement, CustomFeats.ArtisanApplique, CustomFeats.Enchanteur, CustomFeats.Comptabilite, CustomFeats.BrokerRelations, CustomFeats.Negociateur, CustomFeats.Magnat, CustomFeats.Marchand, CustomFeats.Recycler, Feat.Ambidexterity, CustomFeats.Skinning, CustomFeats.Hunting, CustomFeats.ImprovedSpellSlot2, CustomFeats.WoodReprocessing, CustomFeats.Ebeniste, CustomFeats.WoodCutter, CustomFeats.WoodProspection, CustomFeats.CraftOreExtractor, CustomFeats.CraftForgeHammer, CustomFeats.Forge, CustomFeats.Reprocessing, CustomFeats.BlueprintCopy, CustomFeats.Research, CustomFeats.Miner, CustomFeats.Metallurgy, Feat.DeneirsEye, Feat.DirtyFighting, Feat.ResistDisease, Feat.Stealthy, Feat.SkillFocusAnimalEmpathy, Feat.SkillFocusBluff, Feat.SkillFocusConcentration, Feat.SkillFocusDisableTrap, Feat.SkillFocusDiscipline, Feat.SkillFocusHeal, Feat.SkillFocusHide, Feat.SkillFocusIntimidate, Feat.SkillFocusListen, Feat.SkillFocusLore, Feat.SkillFocusMoveSilently, Feat.SkillFocusOpenLock, Feat.SkillFocusParry, Feat.SkillFocusPerform, Feat.SkillFocusPickPocket, Feat.SkillFocusSearch, Feat.SkillFocusSetTrap, Feat.SkillFocusSpellcraft, Feat.SkillFocusSpot, Feat.SkillFocusTaunt, Feat.SkillFocusTumble, Feat.SkillFocusUseMagicDevice, Feat.Mobility, Feat.PointBlankShot, Feat.IronWill, Feat.Alertness, Feat.CombatCasting, Feat.Dodge, Feat.ExtraTurning, Feat.GreatFortitude };
    public static readonly Feat[] mediumSkillBooks = new Feat[] { CustomFeats.AlchemistAccurate, CustomFeats.AlchemistAware, CustomFeats.CombattantPrecautionneux, CustomFeats.EnchanteurExpert, CustomFeats.BrokerAffinity, CustomFeats.BadPeltReprocessing, CustomFeats.CommonPeltReprocessing, CustomFeats.NormalPeltReprocessing, CustomFeats.UncommunPeltReprocessing, CustomFeats.RarePeltReprocessing, CustomFeats.MagicPeltReprocessing, CustomFeats.EpicPeltReprocessing, CustomFeats.LegendaryPeltReprocessing, CustomFeats.ImprovedSpellSlot3, CustomFeats.ImprovedSpellSlot4, CustomFeats.LaurelinReprocessing, CustomFeats.MallornReprocessing, CustomFeats.TelperionReprocessing, CustomFeats.OiolaireReprocessing, CustomFeats.NimlothReprocessing, CustomFeats.QlipothReprocessing, CustomFeats.FerocheneReprocessing, CustomFeats.ValinorReprocessing, CustomFeats.WoodReprocessingEfficiency, CustomFeats.AnimalExpertise, CustomFeats.CraftTorch, CustomFeats.CraftStuddedLeather, CustomFeats.CraftSling, CustomFeats.CraftSmallShield, CustomFeats.CraftSickle, CustomFeats.CraftShortSpear, CustomFeats.CraftRing, CustomFeats.CraftPaddedArmor, CustomFeats.CraftPotion, CustomFeats.CraftQuarterstaff, CustomFeats.CraftMorningStar, CustomFeats.CraftMagicWand, CustomFeats.CraftLightMace, CustomFeats.CraftLightHammer, CustomFeats.CraftLightFlail, CustomFeats.CraftLightCrossbow, CustomFeats.CraftLeatherArmor, CustomFeats.CraftBullets, CustomFeats.CraftCloak, CustomFeats.CraftClothing, CustomFeats.CraftClub, CustomFeats.CraftDagger, CustomFeats.CraftDarts, CustomFeats.CraftGloves, CustomFeats.CraftHeavyCrossbow, CustomFeats.CraftHelmet, CustomFeats.CraftAmulet, CustomFeats.CraftArrow, CustomFeats.CraftBelt, CustomFeats.CraftBolt, CustomFeats.CraftBoots, CustomFeats.CraftBracer, CustomFeats.ReprocessingEfficiency, CustomFeats.StripMiner, CustomFeats.VeldsparReprocessing, CustomFeats.ScorditeReprocessing, CustomFeats.PyroxeresReprocessing, CustomFeats.PlagioclaseReprocessing, CustomFeats.Geology, CustomFeats.Prospection, Feat.TymorasSmile, Feat.LliirasHeart, Feat.RapidReload, Feat.Expertise, Feat.ImprovedInitiative, Feat.DefensiveRoll, Feat.SneakAttack, Feat.FlurryOfBlows, Feat.WeaponSpecializationHeavyCrossbow, Feat.WeaponSpecializationDagger, Feat.WeaponSpecializationDart, Feat.WeaponSpecializationClub, Feat.StillSpell, Feat.RapidShot, Feat.SilenceSpell, Feat.PowerAttack, Feat.Knockdown, Feat.LightningReflexes, Feat.ImprovedUnarmedStrike, Feat.Cleave, Feat.CalledShot, Feat.DeflectArrows, Feat.WeaponSpecializationLightCrossbow, Feat.WeaponSpecializationLightFlail, Feat.WeaponSpecializationLightMace, Feat.Disarm, Feat.EmpowerSpell, Feat.WeaponSpecializationMorningStar, Feat.ExtendSpell, Feat.SpellFocusAbjuration, Feat.SpellFocusConjuration, Feat.SpellFocusDivination, Feat.SpellFocusEnchantment, Feat.WeaponSpecializationSickle, Feat.WeaponSpecializationSling, Feat.WeaponSpecializationSpear, Feat.WeaponSpecializationStaff, Feat.WeaponSpecializationThrowingAxe, Feat.WeaponSpecializationTrident, Feat.WeaponSpecializationUnarmedStrike, Feat.SpellFocusEvocation, Feat.SpellFocusIllusion, Feat.SpellFocusNecromancy, Feat.SpellFocusTransmutation, Feat.SpellPenetration };
    public static readonly Feat[] highSkillBooks = new Feat[] { CustomFeats.ImprovedDodge, CustomFeats.EnchanteurChanceux, CustomFeats.SurchargeControlee, CustomFeats.SurchargeArcanique, CustomFeats.ArtisanExceptionnel, CustomFeats.AdvancedCraft, CustomFeats.CraftWarHammer, CustomFeats.CraftTrident, CustomFeats.CraftThrowingAxe, CustomFeats.CraftStaff, CustomFeats.CraftSplintMail, CustomFeats.CraftSpellScroll, CustomFeats.CraftShortsword, CustomFeats.CraftShortBow, CustomFeats.CraftScimitar, CustomFeats.CraftScaleMail, CustomFeats.CraftRapier, CustomFeats.CraftMagicRod, CustomFeats.CraftLongsword, CustomFeats.CraftLongBow, CustomFeats.CraftLargeShield, CustomFeats.CraftBattleAxe, CustomFeats.OmberReprocessing, CustomFeats.KerniteReprocessing, CustomFeats.GneissReprocessing, CustomFeats.CraftHalberd, CustomFeats.JaspetReprocessing, CustomFeats.CraftHeavyFlail, CustomFeats.CraftHandAxe, CustomFeats.HemorphiteReprocessing, CustomFeats.CraftGreatAxe, CustomFeats.CraftGreatSword, Feat.ArcaneDefenseAbjuration, Feat.ArcaneDefenseConjuration, Feat.ArcaneDefenseDivination, Feat.ArcaneDefenseEnchantment, Feat.ArcaneDefenseEvocation, Feat.ArcaneDefenseIllusion, Feat.ArcaneDefenseNecromancy, Feat.ArcaneDefenseTransmutation, Feat.BlindFight, Feat.SpringAttack, Feat.GreatCleave, Feat.ImprovedExpertise, Feat.SkillMastery, Feat.Opportunist, Feat.Evasion, Feat.WeaponSpecializationDireMace, Feat.WeaponSpecializationDoubleAxe, Feat.WeaponSpecializationDwaxe, Feat.WeaponSpecializationGreatAxe, Feat.WeaponSpecializationGreatSword, Feat.WeaponSpecializationHalberd, Feat.WeaponSpecializationHandAxe, Feat.WeaponSpecializationHeavyFlail, Feat.WeaponSpecializationKama, Feat.WeaponSpecializationKatana, Feat.WeaponSpecializationKukri, Feat.WeaponSpecializationBastardSword, Feat.WeaponSpecializationLightHammer, Feat.WeaponSpecializationLongbow, Feat.WeaponSpecializationLongSword, Feat.WeaponSpecializationRapier, Feat.WeaponSpecializationScimitar, Feat.WeaponSpecializationScythe, Feat.WeaponSpecializationShortbow, Feat.WeaponSpecializationShortSword, Feat.WeaponSpecializationShuriken, Feat.WeaponSpecializationBattleAxe, Feat.QuickenSpell, Feat.MaximizeSpell, Feat.ImprovedTwoWeaponFighting, Feat.ImprovedPowerAttack, Feat.WeaponSpecializationTwoBladedSword, Feat.WeaponSpecializationWarHammer, Feat.WeaponSpecializationWhip, Feat.ImprovedDisarm, Feat.ImprovedKnockdown, Feat.ImprovedParry, Feat.ImprovedCriticalBastardSword, Feat.ImprovedCriticalBattleAxe, Feat.ImprovedCriticalClub, Feat.ImprovedCriticalDagger, Feat.ImprovedCriticalDart, Feat.ImprovedCriticalDireMace, Feat.ImprovedCriticalDoubleAxe, Feat.ImprovedCriticalDwaxe, Feat.ImprovedCriticalGreatAxe, Feat.ImprovedCriticalGreatSword, Feat.ImprovedCriticalHalberd, Feat.ImprovedCriticalHandAxe, Feat.ImprovedCriticalHeavyCrossbow, Feat.ImprovedCriticalHeavyFlail, Feat.ImprovedCriticalKama, Feat.ImprovedCriticalKatana, Feat.ImprovedCriticalKukri, Feat.ImprovedCriticalLightCrossbow, Feat.ImprovedCriticalLightFlail, Feat.ImprovedCriticalLightHammer, Feat.ImprovedCriticalLightMace, Feat.ImprovedCriticalLongbow, Feat.ImprovedCriticalLongSword, Feat.ImprovedCriticalMorningStar, Feat.ImprovedCriticalRapier, Feat.ImprovedCriticalScimitar, Feat.ImprovedCriticalScythe, Feat.ImprovedCriticalShortbow, Feat.ImprovedCriticalShortSword, Feat.ImprovedCriticalShuriken, Feat.ImprovedCriticalSickle, Feat.ImprovedCriticalSling, Feat.ImprovedCriticalSpear, Feat.ImprovedCriticalStaff, Feat.ImprovedCriticalThrowingAxe, Feat.ImprovedCriticalTrident, Feat.ImprovedCriticalTwoBladedSword, Feat.ImprovedCriticalUnarmedStrike, Feat.ImprovedCriticalWarHammer, Feat.ImprovedCriticalWhip };
    public static readonly Feat[] epicSkillBooks = new Feat[] { CustomFeats.CraftWhip, CustomFeats.CraftTwoBladedSword, CustomFeats.CraftTowerShield, CustomFeats.CraftShuriken, CustomFeats.CraftScythe, CustomFeats.CraftKukri, CustomFeats.CraftKatana, CustomFeats.CraftBreastPlate, CustomFeats.CraftDireMace, CustomFeats.CraftDoubleAxe, CustomFeats.CraftDwarvenWarAxe, CustomFeats.CraftFullPlate, CustomFeats.CraftHalfPlate, CustomFeats.CraftBastardSword, CustomFeats.CraftKama, CustomFeats.DarkOchreReprocessing, CustomFeats.CrokiteReprocessing, CustomFeats.BistotReprocessing, Feat.ResistEnergyAcid, Feat.ResistEnergyCold, Feat.ResistEnergyElectrical, Feat.ResistEnergyFire, Feat.ResistEnergySonic, Feat.ZenArchery, Feat.CripplingStrike, Feat.SlipperyMind, Feat.GreaterSpellFocusAbjuration, Feat.GreaterSpellFocusConjuration, Feat.GreaterSpellFocusDivination, Feat.GreaterSpellFocusDiviniation, Feat.GreaterSpellFocusEnchantment, Feat.GreaterSpellFocusEvocation, Feat.GreaterSpellFocusIllusion, Feat.GreaterSpellFocusNecromancy, Feat.GreaterSpellFocusTransmutation, Feat.GreaterSpellPenetration };
    */
    public static readonly int[] shopBasicMagicSkillBooks = new int[] { CustomSkill.CalligrapheArmurier, CustomSkill.CalligrapheBlindeur, CustomSkill.CalligrapheCiseleur, CustomSkill.CalligrapheFourbisseur,/* CustomSkill.Comptabilite, CustomSkill.BrokerRelations, CustomSkill.Negociateur, CustomSkill.ContractScience, CustomSkill.Marchand, CustomSkill.Magnat*/ };
    public static int GetCustomFeatLevelFromSkillPoints(Feat feat, int currentSkillPoints)
    {
      int multiplier = learnableDictionary[(int)feat].multiplier;
      var result = Math.Log(currentSkillPoints / (250 * multiplier)) / Math.Log(5);

      if (result > 4)
      {
        result = 4;
        result += (currentSkillPoints - (int)(250 * multiplier * Math.Pow(5, 4))) / (int)(250 * multiplier * Math.Pow(5, 4));
      }

      if (result < 0)
        return 0;
      else
        return 1 + (int)result;
    }
  }
}
